<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>南京市地铁信息查询系统-使用说明</title>
      <link href="/2024/01/02/%E5%8D%97%E4%BA%AC%E5%B8%82%E5%9C%B0%E9%93%81%E4%BF%A1%E6%81%AF%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
      <url>/2024/01/02/%E5%8D%97%E4%BA%AC%E5%B8%82%E5%9C%B0%E9%93%81%E4%BF%A1%E6%81%AF%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="南京市地铁信息查询系统-使用说明"><a href="#南京市地铁信息查询系统-使用说明" class="headerlink" title="南京市地铁信息查询系统-使用说明"></a>南京市地铁信息查询系统-使用说明</h1><h3 id="1-地图基本功能"><a href="#1-地图基本功能" class="headerlink" title="1. 地图基本功能"></a>1. 地图基本功能</h3><ul><li><p>地图的基本功能包括地图缩放与底图图层的切换</p></li><li><p>提供指南针，鹰眼图和比例尺</p><img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/test/20240102210155.png"/></li><li><p>点击搜索或分析任意按钮即可实现地铁站线图层的加载</p><img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/test/20240102222721.png"/></li></ul><h3 id="2-查询"><a href="#2-查询" class="headerlink" title="2. 查询"></a>2. 查询</h3><p>查询包括交互查询和属性查询</p><ol><li>交互查询</li></ol><ul><li><p>悬浮于地铁站上，鼠标变为小手；点击后，显示该地铁站的信息弹窗，包括经停地铁，市辖区与经纬度；点击地图其他任意位置，即可取消弹框</p><img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/test/20240102222852.png"/></li><li><p>悬浮于地铁线上，鼠标变为十字；点击后，显示该线的名称及总长；点击地图其他任意位置，即可取消弹框</p><img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/test/20240102223040.png"/></li></ul><ol start="2"><li>属性查询</li></ol><ul><li>点击圆形组件搜索按钮，弹出搜索框</li><li>输入关键字查询地铁站线</li><li>可模糊搜索，且可以任意搜索地铁站和地铁线，均会识别</li><li>点击具体选项，将聚焦至选定要素<img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/test/20240102223213.png"/></li></ul><img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/test/20240102223302.png"/><h3 id="3-空间分析"><a href="#3-空间分析" class="headerlink" title="3. 空间分析"></a>3. 空间分析</h3><ul><li>点击圆形组件分析按钮，弹出分析框</li><li>点击密度可视化和缓冲区分析显示分析图层</li><li>支持修改部分空间分析参数</li></ul><ol><li><p>密度可视化</p><img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/test/20240102223421.png"/></li><li><p>缓冲区分析</p><img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/test/20240102223441.png"/></li></ol>]]></content>
      
      
      <categories>
          
          <category> WebGIS开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 南京市地铁信息查询系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>南京市地铁信息查询系统-服务设计报告</title>
      <link href="/2024/01/02/%E5%8D%97%E4%BA%AC%E5%B8%82%E5%9C%B0%E9%93%81%E4%BF%A1%E6%81%AF%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F-%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1%E6%8A%A5%E5%91%8A/"/>
      <url>/2024/01/02/%E5%8D%97%E4%BA%AC%E5%B8%82%E5%9C%B0%E9%93%81%E4%BF%A1%E6%81%AF%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F-%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1%E6%8A%A5%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="南京市地铁信息查询系统-服务设计报告"><a href="#南京市地铁信息查询系统-服务设计报告" class="headerlink" title="南京市地铁信息查询系统-服务设计报告"></a>南京市地铁信息查询系统-服务设计报告</h1><h2 id="1-服务概述"><a href="#1-服务概述" class="headerlink" title="1. 服务概述"></a>1. 服务概述</h2><ul><li>南京市地铁信息查询系统主要的服务包括地铁站数据和地铁线数据，两者均为GIS Web服务</li></ul><h2 id="2-请求说明"><a href="#2-请求说明" class="headerlink" title="2. 请求说明"></a>2. 请求说明</h2><ul><li>本系统直接采用WFS服务，并利用axios请求数据。通过函数”getWFSData()”输入图层名和CQL查询语句请求数据（本质仍是WFS服务）<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getWFSData</span>(<span class="params">layer, searchParam</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;http://localhost:8090/geoserver/webgis_test/ows?&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="attr">service</span>: <span class="string">&#x27;WFS&#x27;</span>,</span><br><span class="line">      <span class="attr">version</span>: <span class="string">&#x27;1.3.0&#x27;</span>,</span><br><span class="line">      <span class="attr">request</span>: <span class="string">&#x27;GetFeature&#x27;</span>,</span><br><span class="line">      <span class="attr">typeName</span>: <span class="string">&#x27;webgis_test:&#x27;</span> + layer,</span><br><span class="line">      <span class="attr">outputFormat</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">      <span class="attr">cql_filter</span>: searchParam</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> response.<span class="property">data</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error);</span><br><span class="line">      <span class="keyword">throw</span> error;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-服务设计"><a href="#3-服务设计" class="headerlink" title="3. 服务设计"></a>3. 服务设计</h2><h3 id="1-获取地铁站数据"><a href="#1-获取地铁站数据" class="headerlink" title="1. 获取地铁站数据"></a>1. 获取地铁站数据</h3><ol><li><p>基本信息</p><table><thead><tr><th>信息</th><th>值</th></tr></thead><tbody><tr><td>接口编号</td><td>WFS001</td></tr><tr><td>要素名称</td><td>nj_2022_station_gcj02_4326</td></tr><tr><td>几何类型</td><td>点</td></tr><tr><td>坐标系统</td><td>GCJ-02(EPSG：4326)</td></tr><tr><td>要素说明</td><td>南京市2022年10月地铁站数据（含规划和在建）</td></tr><tr><td>数据来源</td><td>&#x2F;</td></tr><tr><td>数据处理</td><td>getWFSData()</td></tr><tr><td>数据格式</td><td>JSON</td></tr><tr><td><strong>服务地址</strong></td><td><a href="http://localhost:8090/geoserver/webgis_test/ows">http://localhost:8090/geoserver/webgis_test/ows</a>?</td></tr></tbody></table></li><li><p>属性设计</p><table><thead><tr><th>字段名称</th><th>中文描述</th><th>数据类型</th><th>备注</th></tr></thead><tbody><tr><td>name</td><td>地铁站名</td><td>字符串</td><td>数据库中对name字段末尾的‘(地铁站)’进行了删除</td></tr><tr><td>adname</td><td>市辖区</td><td>字符串</td><td></td></tr><tr><td>address</td><td>经停地铁及是否为在建</td><td>字符串</td><td></td></tr></tbody></table></li><li><p>示例<br><img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/posts_01/ex01.png"></p></li></ol><h3 id="2-获取地铁线数据"><a href="#2-获取地铁线数据" class="headerlink" title="2. 获取地铁线数据"></a>2. 获取地铁线数据</h3><ol><li><p>基本信息</p><table><thead><tr><th>API</th><th>设计</th></tr></thead><tbody><tr><td>接口编号</td><td>WFS002</td></tr><tr><td>要素名称</td><td>nj_2022_subway_4326_gcj02_l</td></tr><tr><td>几何类型</td><td>线</td></tr><tr><td>坐标系统</td><td>GCJ-02(EPSG：4326)</td></tr><tr><td>要素说明</td><td>南京市2022年10月地铁线数据</td></tr><tr><td>数据来源</td><td>经人工预处理</td></tr><tr><td>数据处理</td><td>getWFSData()</td></tr><tr><td>数据格式</td><td>JSON</td></tr><tr><td><strong>服务地址</strong></td><td><a href="http://localhost:8090/geoserver/webgis_test/ows">http://localhost:8090/geoserver/webgis_test/ows</a>?</td></tr></tbody></table></li><li><p>属性设计</p><table><thead><tr><th>字段名称</th><th>中文描述</th><th>数据类型</th><th>备注</th></tr></thead><tbody><tr><td>name</td><td>地铁线名</td><td>字符串</td><td></td></tr><tr><td>sum_length</td><td>地铁线总长</td><td>浮点型数值</td><td></td></tr></tbody></table></li><li><p>示例<br><img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/posts_01/ex02.png"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> WebGIS开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 南京市地铁信息查询系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>南京市地铁信息查询系统-实验报告</title>
      <link href="/2024/01/02/%E5%8D%97%E4%BA%AC%E5%B8%82%E5%9C%B0%E9%93%81%E4%BF%A1%E6%81%AF%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F-%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
      <url>/2024/01/02/%E5%8D%97%E4%BA%AC%E5%B8%82%E5%9C%B0%E9%93%81%E4%BF%A1%E6%81%AF%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F-%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="南京市地铁信息查询系统-实验报告"><a href="#南京市地铁信息查询系统-实验报告" class="headerlink" title="南京市地铁信息查询系统-实验报告"></a>南京市地铁信息查询系统-实验报告</h1><h2 id="1-实验目的"><a href="#1-实验目的" class="headerlink" title="1. 实验目的"></a>1. 实验目的</h2><p>这个实验基于高德API与Geoserver的WFS服务，致力于开发“南京市地铁信息查询系统”。该系统为用户提供直观的地铁信息查询地图，旨在满足用户对地铁站和地铁线的查询需求，同时提供相应的空间分析，以便用户更全面地了解南京市地铁站分布情况。</p><h2 id="2-需求分析"><a href="#2-需求分析" class="headerlink" title="2. 需求分析"></a>2. 需求分析</h2><h3 id="1-用户画像"><a href="#1-用户画像" class="headerlink" title="1. 用户画像"></a>1. 用户画像</h3><p>模拟使用该系统的用户包括：期待了解南京市地铁情况的热心市民和需要对南京市地铁有整体把握的规划部门&#x2F;研究部门</p><h3 id="2-需求解析"><a href="#2-需求解析" class="headerlink" title="2. 需求解析"></a>2. 需求解析</h3><ol><li>基本地图功能<br>查询地图应当包含基本的加载、放缩等功能</li><li>查询功能<br>查询地图，对地铁站线的查询自不必多说，考虑到地铁站线的信息有限，且相对于对站线的名字查询，对如总长等属性信息的查询需求有限，故在属性查询时只设计了依据name查询；同时，可设计交互查询，所点即所见</li><li>空间分析<br>对于地铁站的整体分布情况，可以设计对于点的空间密度分析方法进行呈现和分析，如热力图；对于地铁站的覆盖情况，可以设计缓冲区分析</li><li>数据更新与新闻发布<br>对于专业人员，如果需要修改、更新平台数据或者发布最新的研究进展，也可以设计相应模块提供额外服务，同时通过注册与登录控制修改权限</li></ol><h2 id="3-功能设计"><a href="#3-功能设计" class="headerlink" title="3. 功能设计"></a>3. 功能设计</h2><blockquote><p>详细功能的使用方法及演示见《南京市地铁信息查询系统-使用说明》</p></blockquote><h3 id="1-原创圆形旋转控件"><a href="#1-原创圆形旋转控件" class="headerlink" title="1. 原创圆形旋转控件"></a>1. 原创圆形旋转控件</h3><p>在之前和老师交流后，我一直希望探索一种不过度占用屏幕空间，同时可以实现图层的加载，查询，分析的布局方式，于是这个控件便由此而来。原创旋转控件为圆形，由红蓝对半组成，分别代表着搜索与分析。通过点击小圆加载图层，出现对应的组件提供与空间分析功能，兼具趣味性与实用性。</p><h3 id="2-地图基本功能"><a href="#2-地图基本功能" class="headerlink" title="2. 地图基本功能"></a>2. 地图基本功能</h3><ul><li>地图的基本功能包括目标图层的加载、地图缩放与底图图层的切换</li><li>同时提供指南针，鹰眼图和比例尺</li></ul><h3 id="3-交互查询"><a href="#3-交互查询" class="headerlink" title="3. 交互查询"></a>3. 交互查询</h3><ul><li>点击地铁站，显示该地铁站的信息弹窗，包括经停地铁，市辖区与经纬度</li><li>点击地铁线，显示该线的名称及总长</li></ul><h3 id="4-属性查询"><a href="#4-属性查询" class="headerlink" title="4. 属性查询"></a>4. 属性查询</h3><ul><li>点击圆形组件搜索按钮，弹出搜索框</li><li>输入关键字查询地铁站线</li><li>可模糊搜索，且可以任意搜索地铁站和地铁线，均会识别</li><li>点击具体选项，将聚焦至选定要素</li></ul><h3 id="5-空间分析"><a href="#5-空间分析" class="headerlink" title="5. 空间分析"></a>5. 空间分析</h3><ul><li>点击圆形组件分析按钮，弹出分析框</li><li>点击密度可视化和缓冲区分析显示分析图层</li><li>支持修改部分空间分析参数</li></ul><h2 id="4-实现思路"><a href="#4-实现思路" class="headerlink" title="4. 实现思路"></a>4. 实现思路</h2><p>实现主要包括三个部分：整体设计，前端开发，后端服务。<br><img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/test/%E6%B5%81%E7%A8%8B%E5%9B%BE.png"/></p><h3 id="1-整体设计"><a href="#1-整体设计" class="headerlink" title="1. 整体设计"></a>1. 整体设计</h3><p>通过模拟系统用户，分析需求，设计相对应的页面和功能（第二、三部分已详细介绍）</p><h3 id="2-前端开发"><a href="#2-前端开发" class="headerlink" title="2. 前端开发"></a>2. 前端开发</h3><ol><li><p>页面布局与设计<br>系统整体采用上部导航栏，下部地图的形式布局，地图部分包括左侧的原创圆形旋转控件，进行图层的加载与分析，中部大块呈现区域留给地图，右侧则包括一些辅助组件，如指南针，底图切换和鹰眼图等。关于html与css实现，本文不详细说明。</p><img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/test/20240102210155.png"/></li><li><p>图层渲染与交互逻辑</p></li></ol><ul><li><p>加载地图及地图组件，渲染图层，以及空间的分析功能，均由使用高德API实现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载地图底图</span></span><br><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">Map</span>(<span class="string">&#x27;map&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">mapStyle</span>: <span class="string">&quot;amap://styles/whitesmoke&quot;</span>,</span><br><span class="line">  <span class="attr">viewMode</span>: <span class="string">&#x27;3D&#x27;</span>, <span class="comment">// 默认使用 2D 模式，如果希望使用带有俯仰角的 3D 模式，请设置 viewMode: &#x27;3D&#x27;</span></span><br><span class="line">  <span class="attr">zoom</span>: <span class="number">12</span>, <span class="comment">// 初始化地图层级</span></span><br><span class="line">  <span class="attr">center</span>: [<span class="number">118.83333</span>, <span class="number">32.05000</span>] <span class="comment">// 初始化地图中心点</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 绘制地铁站线全图</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">renderWholeSubway</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">getWFSData</span>(<span class="string">&#x27;nj_2022_station_gcj02_4326&#x27;</span>, <span class="string">&#x27;name IS NOT NULL&#x27;</span>)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> features = data.<span class="property">features</span>;</span><br><span class="line">      <span class="title function_">renderStationgeometry</span>(features);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="title function_">getWFSData</span>(<span class="string">&#x27;nj_2022_subway_4326_gcj02_l&#x27;</span>, <span class="string">&#x27;name IS NOT NULL&#x27;</span>)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> features = data.<span class="property">features</span>;</span><br><span class="line">      <span class="title function_">renderSingleSubwaygeometry</span>(features);</span><br><span class="line">      map.<span class="title function_">setFitView</span>(); <span class="comment">// 设置地图视图适应数据范围</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>控制图层显示与删除，切换不同功能均由圆形组件来统一控制</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 搜索地铁站线（截取函数的部分）</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">searchSubway</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> searchParam = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.searchContainer .input&#x27;</span>).<span class="property">value</span>;</span><br><span class="line">  <span class="keyword">var</span> search_results_container = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.search_results_container&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> labelMarkers = labelsLayer.<span class="title function_">getAllOverlays</span>()</span><br><span class="line">  search_results_container.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  labelMarkers.<span class="title function_">forEach</span>(<span class="function"><span class="params">labelMarker</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> target_name = labelMarker.<span class="title function_">getName</span>()</span><br><span class="line">    <span class="comment">// 使用 includes 方法进行模糊查询</span></span><br><span class="line">    <span class="keyword">if</span> (target_name.<span class="title function_">includes</span>(searchParam)) &#123;</span><br><span class="line">      <span class="keyword">var</span> resultContainer = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">      resultContainer.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;result_items&#x27;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> content = <span class="string">&#x27;&lt;div class=&quot;row1&quot;&gt;&#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;&lt;div class=&quot;restaurant_name&quot;&gt;&#x27;</span> + target_name + <span class="string">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;&lt;div class=&quot;cuisine&quot;&gt;地铁站&lt;/div&gt;&#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;&lt;div class=&quot;row2&quot;&gt;&#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;&lt;span class=&quot;score&quot;&gt;经停地铁：&#x27;</span> + labelMarker.<span class="title function_">getExtData</span>().<span class="property">address</span> + <span class="string">&#x27;&lt;/span&gt;&#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;&lt;div class=&quot;per&quot;&gt;市辖区：&#x27;</span> + labelMarker.<span class="title function_">getExtData</span>().<span class="property">adname</span> + <span class="string">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;&lt;div class=&quot;row3&quot;&gt;&#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;&lt;div class=&quot;address&quot;&gt;经纬度：&#x27;</span> + labelMarker.<span class="title function_">getPosition</span>() + <span class="string">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;&lt;div class=&quot;horizontal-line&quot;&gt;&lt;/div&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 将内容添加到 resultContainer 中</span></span><br><span class="line">      resultContainer.<span class="property">innerHTML</span> = content;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 将 resultContainer 添加到 search_results_container 中</span></span><br><span class="line">      search_results_container.<span class="title function_">appendChild</span>(resultContainer);</span><br><span class="line"></span><br><span class="line">      resultContainer.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        map.<span class="title function_">setZoomAndCenter</span>(<span class="number">14</span>, labelMarker.<span class="title function_">getPosition</span>(), <span class="literal">false</span>, <span class="number">600</span>);</span><br><span class="line">        labelMarker.<span class="title function_">setIcon</span>(&#123;</span><br><span class="line">          <span class="attr">size</span>: [<span class="number">40</span>, <span class="number">40</span>]</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">var</span> position = labelMarker.<span class="title function_">getPosition</span>()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> contentMarker = <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">Marker</span>(&#123;</span><br><span class="line">          <span class="attr">anchor</span>: <span class="string">&#x27;bottom-center&#x27;</span>,</span><br><span class="line">          <span class="attr">offset</span>: [<span class="number">0</span>, <span class="number">160</span>],</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (position) &#123;</span><br><span class="line">          contentMarker.<span class="title function_">setContent</span>(</span><br><span class="line">            <span class="string">&#x27;&lt;div style=&quot;font-family: Arial, sans-serif; background-color: #ffffff; border: 1px solid #cccccc; padding: 10px; border-radius: 5px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);&quot;&gt;&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;&lt;div style=&quot;font-size: 14px; font-weight: bold; margin-bottom: 5px;&quot;&gt;经停地铁：&#x27;</span> + <span class="string">&#x27;&lt;br&gt;&#x27;</span> + labelMarker.<span class="title function_">getExtData</span>().<span class="property">address</span> + <span class="string">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;&lt;div style=&quot;color: #007BFF; margin-bottom: 5px;&quot;&gt;市辖区：&#x27;</span> + labelMarker.<span class="title function_">getExtData</span>().<span class="property">adname</span> + <span class="string">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;&lt;div&gt;经纬度：&#x27;</span> + position + <span class="string">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;&lt;/div&gt;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">          contentMarker.<span class="title function_">setPosition</span>(position);</span><br><span class="line">          map.<span class="title function_">add</span>(contentMarker);</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 取消选中</span></span><br><span class="line">          map.<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            labelMarker.<span class="title function_">setIcon</span>(&#123;</span><br><span class="line">              <span class="attr">size</span>: [<span class="number">24</span>, <span class="number">24</span>]</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">            map.<span class="title function_">remove</span>(contentMarker);</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓冲区分析</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">renderBuffer</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> buffer_radius = <span class="built_in">parseFloat</span>(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#buffer_radius&#x27;</span>).<span class="property">value</span>);</span><br><span class="line">  <span class="keyword">const</span> colorPicker = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#colorPicker&#x27;</span>).<span class="property">value</span>;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">clearcircleList</span>()</span><br><span class="line">  loca.<span class="title function_">clear</span>();</span><br><span class="line"></span><br><span class="line">  <span class="title function_">getWFSData</span>(<span class="string">&#x27;nj_2022_station_gcj02_4326&#x27;</span>, <span class="string">&#x27;name IS NOT NULL&#x27;</span>)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      data.<span class="property">features</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">feature</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> geometry = feature.<span class="property">geometry</span>.<span class="property">coordinates</span></span><br><span class="line">        <span class="keyword">var</span> position = [geometry[<span class="number">0</span>], geometry[<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> center = position;</span><br><span class="line">        <span class="keyword">var</span> radius = buffer_radius;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> circle = <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">Circle</span>(&#123;</span><br><span class="line">          <span class="attr">center</span>: center, <span class="comment">//圆心</span></span><br><span class="line">          <span class="attr">radius</span>: radius, <span class="comment">//半径</span></span><br><span class="line">          <span class="attr">strokeWeight</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">strokeColor</span>: <span class="string">&#x27;#cdcdcd&#x27;</span>,</span><br><span class="line">          <span class="attr">strokeOpacity</span>: <span class="number">0.5</span>,</span><br><span class="line">          <span class="attr">fillOpacity</span>: <span class="number">0.3</span>, <span class="comment">//圆形填充透明度</span></span><br><span class="line">          <span class="attr">fillColor</span>: colorPicker, <span class="comment">//圆形填充颜色</span></span><br><span class="line">          <span class="attr">zIndex</span>: <span class="number">50</span>, <span class="comment">//圆形覆盖物的叠加顺序</span></span><br><span class="line">        &#125;);</span><br><span class="line">        circleList.<span class="title function_">push</span>(circle)</span><br><span class="line">        map.<span class="title function_">add</span>(circle);</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-后端服务"><a href="#3-后端服务" class="headerlink" title="3. 后端服务"></a>3. 后端服务</h3><ol><li><p>数据预处理<br>将原始数据进行过滤，删除不需要的往返地铁线路，并将字段中多余文字删除</p></li><li><p>geoserver发布服务<br>流程主要包括：预处理数据-&gt;导入postGIS数据库-&gt;发布服务</p><blockquote><p>发布中可能遇到的问题：<a href="https://bzy924604345.github.io/2023/11/18/daily-pit/">https://bzy924604345.github.io/2023/11/18/daily-pit/</a></p></blockquote></li><li><p>利用axios请求数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getWFSData</span>(<span class="params">layer, searchParam</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;http://localhost:8090/geoserver/webgis_test/ows?&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="attr">service</span>: <span class="string">&#x27;WFS&#x27;</span>,</span><br><span class="line">      <span class="attr">version</span>: <span class="string">&#x27;1.3.0&#x27;</span>,</span><br><span class="line">      <span class="attr">request</span>: <span class="string">&#x27;GetFeature&#x27;</span>,</span><br><span class="line">      <span class="attr">typeName</span>: <span class="string">&#x27;webgis_test:&#x27;</span> + layer,</span><br><span class="line">      <span class="attr">outputFormat</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">      <span class="attr">cql_filter</span>: searchParam</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> response.<span class="property">data</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error);</span><br><span class="line">      <span class="keyword">throw</span> error;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="5-核心难点与问题"><a href="#5-核心难点与问题" class="headerlink" title="5. 核心难点与问题"></a>5. 核心难点与问题</h2><h3 id="1-为什么不采用高德提供的wfs标准图层？"><a href="#1-为什么不采用高德提供的wfs标准图层？" class="headerlink" title="1. 为什么不采用高德提供的wfs标准图层？"></a>1. 为什么不采用高德提供的wfs标准图层？</h3><p>高德提供的wfs标准图层服务固然好，甚至不需要自己对服务进行请求，但同样也带来了灵活性下降的问题。wfs标准图层与其说是一个图层，更像是一张“图片”，其只能加载完整图层，而不能选择自定义需求，自定义渲染方式，更不能自定义渲染与其他组件交互的逻辑，这显然是不能接受的，因此本系统基于axios利用函数进行数据的请求。</p><h3 id="2-数据跨域访问问题"><a href="#2-数据跨域访问问题" class="headerlink" title="2. 数据跨域访问问题"></a>2. 数据跨域访问问题</h3><p>严格来说，本系统并未解决数据的跨域访问问题，通过开启浏览器的“Allow CORS &amp; Origin”插件，避开了该问题</p><h3 id="3-全局增删数据问题"><a href="#3-全局增删数据问题" class="headerlink" title="3. 全局增删数据问题"></a>3. 全局增删数据问题</h3><p>正如下方尚存不足中将要提到的第二点“原创旋转小组件虽好，但为整体的操作逻辑以及控制图层增加了许多额外的难题”。由于小组件的存在，需要在其他按钮点击时控制图层的删除，并且在部分按钮点击时加载图层，最优的办法就是如labels一样形成labelsLayer并进行统一的删除和加载，如:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">labelsLayer = <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">LabelsLayer</span>(&#123;</span><br><span class="line">  <span class="attr">zooms</span>: [<span class="number">3</span>, <span class="number">20</span>],</span><br><span class="line">  <span class="attr">zIndex</span>: <span class="number">1000</span>,</span><br><span class="line">  <span class="attr">collision</span>: <span class="literal">true</span>,  <span class="comment">// 该层内标注是否避让</span></span><br><span class="line">  <span class="attr">allowCollision</span>: <span class="literal">true</span>, <span class="comment">// 设置 allowCollision：true，可以让标注避让用户的标注</span></span><br><span class="line">&#125;);</span><br><span class="line">map.<span class="title function_">add</span>(labelsLayer);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但大部分渲染的图层并不支持将所有绘制元素合并为一个图层，所以只能定义全局变量并存储各个元素，每当触发条件时，进行数据的遍历处理。虽然效率较低，但是可以和组件更好的配合。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">clearcircleList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  circleList.<span class="title function_">forEach</span>(<span class="function"><span class="params">circle</span> =&gt;</span> &#123;</span><br><span class="line">    circle.<span class="title function_">destroy</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-监听事件绑定问题"><a href="#4-监听事件绑定问题" class="headerlink" title="4. 监听事件绑定问题"></a>4. 监听事件绑定问题</h3><p>在开发过程中困扰我最大的就是这个问题了！对于交互查询，原先的实现思路是构建全局数组存储绘制元素，时刻监听鼠标位置是否在各个元素内部，以此进行响应并弹出信息框。这样设计的问题是精度低，且浏览器负载重，很容易卡死。<br>后来转变思路，发现了自己的问题所在。如下代码实现的是交互查询地铁站，里面可以发现在创建元素时就为其绑定了点击事件，并设置了响应逻辑。没错！问题的关键就在于对于元素在创建时绑定的监听事件并不会随着循环结束而失效，而是会一直作用至元素消失。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">features.<span class="title function_">forEach</span>(<span class="function"><span class="params">feature</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> icon = &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;image&#x27;</span>, <span class="comment">// 图标类型，现阶段只支持 image 类型</span></span><br><span class="line">      <span class="attr">image</span>: <span class="string">&#x27;../data/地铁站 (2).jpg&#x27;</span>,</span><br><span class="line">      <span class="attr">size</span>: [<span class="number">24</span>, <span class="number">24</span>],</span><br><span class="line">      <span class="attr">anchor</span>: <span class="string">&#x27;center&#x27;</span>, <span class="comment">// 图片相对 position 的锚点，默认为 bottom-center </span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> text = &#123;</span><br><span class="line">      <span class="attr">content</span>: feature.<span class="property">properties</span>.<span class="property">name</span>, <span class="comment">// 要展示的文字内容</span></span><br><span class="line">      <span class="attr">direction</span>: <span class="string">&#x27;top&#x27;</span>, <span class="comment">// 文字方向，有 icon 时为围绕文字的方向，没有 icon 时，则为相对 position 的位置</span></span><br><span class="line">      <span class="attr">offset</span>: [<span class="number">0</span>, <span class="number">0</span>], <span class="comment">// 在 direction 基础上的偏移量</span></span><br><span class="line">      <span class="attr">style</span>: &#123; <span class="comment">// 文字样式       </span></span><br><span class="line">        <span class="attr">fontSize</span>: <span class="number">12</span>,<span class="comment">// 字体大小        </span></span><br><span class="line">        <span class="attr">fillColor</span>: <span class="string">&#x27;#22886f&#x27;</span>, <span class="comment">// 字体颜色  </span></span><br><span class="line">        <span class="attr">strokeColor</span>: <span class="string">&#x27;#fff&#x27;</span>, <span class="comment">// 描边颜色</span></span><br><span class="line">        <span class="attr">strokeWidth</span>: <span class="number">2</span>,  <span class="comment">// 描边宽度</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> geometry = feature.<span class="property">geometry</span>.<span class="property">coordinates</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> labelMarker = <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">LabelMarker</span>(&#123;</span><br><span class="line">      <span class="attr">name</span>: feature.<span class="property">properties</span>.<span class="property">name</span>, <span class="comment">// 此属性非绘制文字内容，仅最为标识使用</span></span><br><span class="line">      <span class="attr">position</span>: [geometry[<span class="number">0</span>], geometry[<span class="number">1</span>]],</span><br><span class="line">      <span class="attr">zIndex</span>: <span class="number">16</span>,</span><br><span class="line">      <span class="attr">icon</span>: icon, <span class="comment">// 将第一步创建的 icon 对象传给 icon 属性</span></span><br><span class="line">      <span class="attr">text</span>: text,<span class="comment">// 将第二步创建的 text 对象传给 text 属性</span></span><br><span class="line">      <span class="attr">extData</span>: feature.<span class="property">properties</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    markers.<span class="title function_">push</span>(labelMarker)</span><br><span class="line"></span><br><span class="line">    labelMarker.<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">      labelMarker.<span class="title function_">setIcon</span>(&#123;</span><br><span class="line">        <span class="attr">size</span>: [<span class="number">40</span>, <span class="number">40</span>]</span><br><span class="line">      &#125;</span><br><span class="line">      )</span><br><span class="line">      <span class="keyword">var</span> position = [geometry[<span class="number">0</span>], geometry[<span class="number">1</span>]];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (position) &#123;</span><br><span class="line">        contentMarker.<span class="title function_">setContent</span>(</span><br><span class="line">          <span class="string">&#x27;&lt;div style=&quot;font-family: Arial, sans-serif; background-color: #ffffff; border: 1px solid #cccccc; padding: 10px; border-radius: 5px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);&quot;&gt;&#x27;</span> +</span><br><span class="line">          <span class="string">&#x27;&lt;div style=&quot;font-size: 14px; font-weight: bold; margin-bottom: 5px;&quot;&gt;经停地铁：&#x27;</span> + <span class="string">&#x27;&lt;br&gt;&#x27;</span> + feature.<span class="property">properties</span>.<span class="property">address</span> + <span class="string">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class="line">          <span class="string">&#x27;&lt;div style=&quot;color: #007BFF; margin-bottom: 5px;&quot;&gt;市辖区：&#x27;</span> + feature.<span class="property">properties</span>.<span class="property">adname</span> + <span class="string">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class="line">          <span class="string">&#x27;&lt;div&gt;经纬度：&#x27;</span> + position + <span class="string">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class="line">          <span class="string">&#x27;&lt;/div&gt;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        contentMarker.<span class="title function_">setPosition</span>(position);</span><br><span class="line">        map.<span class="title function_">add</span>(contentMarker);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    map.<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      map.<span class="title function_">remove</span>(contentMarker);</span><br><span class="line">      labelMarker.<span class="title function_">setIcon</span>(&#123;</span><br><span class="line">        <span class="attr">size</span>: [<span class="number">24</span>, <span class="number">24</span>]</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 一次性将海量点添加到图层</span></span><br><span class="line">  labelsLayer.<span class="title function_">add</span>(markers);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 普通点</span></span><br><span class="line">  <span class="keyword">var</span> contentMarker = <span class="keyword">new</span> <span class="title class_">AMap</span>.<span class="title class_">Marker</span>(&#123;</span><br><span class="line">    <span class="attr">anchor</span>: <span class="string">&#x27;bottom-center&#x27;</span>,</span><br><span class="line">    <span class="attr">offset</span>: [<span class="number">0</span>, <span class="number">160</span>],</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h2 id="6-总结与心得"><a href="#6-总结与心得" class="headerlink" title="6. 总结与心得"></a>6. 总结与心得</h2><h3 id="1-尚存不足"><a href="#1-尚存不足" class="headerlink" title="1. 尚存不足"></a>1. 尚存不足</h3><ol><li>预期设计的功能，还包括时间轴地铁站线数据呈现以及利用左右窗格进行不同时期的地铁站线对比，但由于时间有限而没有实现，十分可惜</li><li>原创旋转小组件虽好，但为整体的操作逻辑以及控制图层增加了许多额外的难题，已尽量完善，但部分细节还需要进一步地打磨</li><li>数据来自之前做项目时的数据集中，大概率来源为高德或百度。由于地铁线数据较为复杂，为最终呈现效果，进行了人工的数据处理，最终结果和现实可能存在一定的偏差</li></ol><h3 id="2-学习心得"><a href="#2-学习心得" class="headerlink" title="2. 学习心得"></a>2. 学习心得</h3><p>通过本学期地理信息服务课程的学习，不仅让我的WebGIS开发功力跟上一层楼，提高了自己的实践动手能力，更重要的是让我对于WebGIS的整体开发流程有了更加详细的了解，其中包括需求分析、界面设计的前期准备，综合JS、HTML、CSS的前端开发，以及利用Geoserver的WFS服务、axios前后端数据的传输，令我收获颇丰。</p>]]></content>
      
      
      <categories>
          
          <category> WebGIS开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 南京市地铁信息查询系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS10-CSS3-02</title>
      <link href="/2023/12/12/CSS10-CSS3-02/"/>
      <url>/2023/12/12/CSS10-CSS3-02/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS10-CSS3-02"><a href="#CSS10-CSS3-02" class="headerlink" title="CSS10-CSS3-02"></a>CSS10-CSS3-02</h1><h2 id="10-2D变换"><a href="#10-2D变换" class="headerlink" title="10. 2D变换"></a>10. 2D变换</h2><p><strong>前提：二维坐标系以左上角为远点，x轴水平向右，y轴数值向下</strong></p><h3 id="1-2D位移"><a href="#1-2D位移" class="headerlink" title="1. 2D位移"></a>1. 2D位移</h3><p>2D 位移可以<code>改变元素的位置</code>，具体使用方式如下：</p><ol><li>先给元素添加 转换属性 <code>transform</code></li><li>编写 <code>transform</code> 的具体值，相关可选值如下：<br>| 值         | 含义                                                                                       |</li></ol><p>| ———- | —————————————————————————————— |<br>| translateX | 设置水平方向位移，需指定长度值，可以为负值；若指定的是<code>百分比</code>，是参考<code>自身宽度</code>的百分比。 |<br>| translateY | 设置垂直方向位移，需指定长度值，可以为负值；若指定的是百分比，是参考自身高度的百分比。     |<br>| translate  | 一个值代表<code>水平方向</code>，两个值代表：<code>水平和垂直方向</code>。                                       |<br>3. 注意点</p><blockquote><ol><li>位移与相对定位很相似，都<code>不脱离文档流</code>，不会影响到其它元素。</li><li>与相对定位的区别：相对定位的百分比值，参考的是其父元素；定位的百分比值，参考的是<code>其自身</code>。</li><li>浏览器针对位移有优化，与定位相比，浏览器处理位移的<code>效率更高</code>。</li><li>transform 可以链式编写，例如：</li></ol></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">30px</span>) <span class="built_in">translateY</span>(<span class="number">40px</span>);</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">30px</span>,<span class="number">50px</span>);</span><br></pre></td></tr></table></figure><ol><li>位移对<code>行内元素</code>无效。</li><li>位移配合定位，可实现元素<code>水平垂直居中</code><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="2-2D缩放"><a href="#2-2D缩放" class="headerlink" title="2. 2D缩放"></a>2. 2D缩放</h3><p>2D 缩放是指：让元素放大或缩小，具体使用方式如下：</p><ol><li>先给元素添加 转换属性 transform</li><li>编写 transform 的具体值，相关可选值如下：<br>| 值     | 含义                                                                                                           |</li></ol><p>| —— | ————————————————————————————————————– |<br>| scaleX | 设置水平方向的缩放比例，值为一个数字，1表示不缩放，大于1放大，小于1缩小。                                      |<br>| scaleY | 设置垂直方向的缩放比例，值为一个数字，1表示不缩放，大于1放大，小于1缩小。                                      |<br>| scale  | 同时设置水平方向、垂直方向的缩放比例，一个值<code>代表同时设置水平和垂直缩放</code>；两个值分别代表：水平缩放、垂直缩放。 |</p><ol><li>注意点<blockquote><ol><li>scale 的值，是支持写负数的，但几乎不用，因为容易让人产生误解。</li></ol></blockquote></li><li>借助缩放，可实现小于 12px 的文字<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-2D旋转"><a href="#3-2D旋转" class="headerlink" title="3. 2D旋转"></a>3. 2D旋转</h3><p>2D 旋转是指：让元素在二维平面内，顺时针旋转或逆时针旋转，具体使用方式如下：</p><ol><li>先给元素添加 转换属性 transform</li><li>编写 transform 的具体值，相关可选值如下：<br>| 值     | 含义                                                                        |</li></ol><p>| —— | ————————————————————————— |<br>| rotate | 设置旋转角度，绕元素中心，需指定一个角度值( deg )，正值顺时针，负值逆时针。 |<br>3. 注意点：</p><blockquote><p>注意： rotateZ(20deg)【2D旋转】 相当于 rotate(20deg) ，当然到了 3D 变换的时候，还能写：rotate(x,x,x)</p></blockquote><h3 id="4-2D扭曲（了解）"><a href="#4-2D扭曲（了解）" class="headerlink" title="4. 2D扭曲（了解）"></a>4. 2D扭曲（了解）</h3><p>2D 扭曲是指：让元素在二维平面内被“拉扯”，进而“走形”，实际开发几乎不用，了解即可，具体使用方<br>式如下：</p><ol><li>先给元素添加 转换属性 transform</li><li>编写 transform 的具体值，相关可选值如下：<br>| 值    | 含义                                                                 |</li></ol><p>| —– | ——————————————————————– |<br>| skewX | 设置元素在水平方向扭曲，值为角度值，会将元素的左上角、右下角 拉扯 。 |<br>| skewY | 设置元素在垂直方向扭曲，值为角度值，会将元素的左上角、右下角 拉扯 。 |<br>| skew  | 一个值代表 skewX ，两个值分别代表： skewX 、 skewY                   |</p><h3 id="5-多重变换"><a href="#5-多重变换" class="headerlink" title="5. 多重变换"></a>5. 多重变换</h3><p>多个变换，可以同时使用一个 transform 来编写。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>) <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br></pre></td></tr></table></figure><blockquote><p>注意点：由于旋转会<code>改变坐标坐标系</code>，所以多重变换时，建议<code>最后旋转</code>。</p></blockquote><h3 id="6-变换原点"><a href="#6-变换原点" class="headerlink" title="6. 变换原点"></a>6. 变换原点</h3><ul><li>元素变换时，<code>默认的原点是元素的中心</code>，使用transform-origin可以设置变换的原点。</li><li>修改变换原点对位移没有影响， 对<code>旋转和缩放</code>会产生影响。</li><li>如果提供两个值，第一个用于横坐标，第二个用于纵坐标。</li><li>如果只提供一个，若是像素值，表示横坐标，纵坐标取 50% ；若是<code>关键词</code>，则另一个坐标取 50%<blockquote><ol><li>transform-origin: 50% 50% ， 变换原点在元素的中心位置，百分比是相对于自<br>身。—— 默认值</li></ol></blockquote></li></ul><ol><li>transform-origin: left top ，变换原点在元素的左上角 。</li><li>transform-origin: 50px 50px ， 变换原点距离元素左上角 50px 50px 的位置。</li><li>transform-origin: 0 ，只写一个值的时候，第二个值默认为 50% 。</li></ol><h2 id="11-3D变换"><a href="#11-3D变换" class="headerlink" title="11. 3D变换"></a>11. 3D变换</h2><h3 id="1-开启3D空间"><a href="#1-开启3D空间" class="headerlink" title="1. 开启3D空间"></a>1. 开启3D空间</h3><blockquote><p>重要原则：元素进行 3D 变换的首要操作：父元素必须开启 3D 空间！</p></blockquote><ul><li>使用 transform-style 开启 3D 空间，可选值如下：<ul><li>flat ：让子元素位于此元素的二维平面内（2D 空间）—— 默认值</li><li>preserve-3d ：让子元素位于此元素的三维空间内（3D 空间）</li></ul></li></ul><h3 id="2-设置景深"><a href="#2-设置景深" class="headerlink" title="2. 设置景深"></a>2. 设置景深</h3><blockquote><p>何为景深？—— 指定观察者与z&#x3D;0<code>平面的距离</code>，能让发生3D变换的元素，产生透视效果，看来更加立体。</p></blockquote><ul><li>使用 perspective 设置景深，可选值如下：<ul><li>none ： 不指定透视 ——（默认值）</li><li>长度值 ： 指定观察者距离 z&#x3D;0 平面的距离，<code>不允许负值</code>。</li></ul></li><li>注意： perspective 设置给发生 3D 变换元素的<code>父元素</code>！</li><li>值可以尝试设置为父元素宽高的一半，较合理</li></ul><h3 id="3-透视点位置"><a href="#3-透视点位置" class="headerlink" title="3. 透视点位置"></a>3. 透视点位置</h3><blockquote><p>所谓透视点位置，就是<code>观察者位置</code>；默认的透视点在元素的中心。</p></blockquote><ul><li>使用 perspective-origin 设置观察者位置（透视点的位置），例如：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 相对坐标轴往右偏移400px， 往下偏移300px（相当于人蹲下300像素，然后向右移动400像素看元素）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="attribute">perspective-origin</span>: <span class="number">400px</span> <span class="number">300px</span>;</span><br></pre></td></tr></table></figure></li><li>注意：通常情况下，我们不需要调整透视点位置</li></ul><h3 id="4-3D-位移"><a href="#4-3D-位移" class="headerlink" title="4. 3D 位移"></a>4. 3D 位移</h3><p>3D 位移是在 2D 位移的基础上，可以让元素沿 z 轴位移，具体使用方式如下：</p><ol><li>先给元素添加 转换属性 transform</li><li>编写 transform 的具体值， 3D 相关可选值如下：<br>| 值          | 含义                                                                         |</li></ol><p>| ———– | —————————————————————————- |<br>| translateZ  | 设置 z 轴位移，需指定长度值，正值向屏幕外，负值向屏幕里，且<code>不能写百分比</code>。  |<br>| translate3d | 第1个参数对应 x 轴，第2个参数对应 y 轴，第3个参数对应 z 轴，且<code>均不能省略</code>。 |</p><h3 id="5-3D-旋转"><a href="#5-3D-旋转" class="headerlink" title="5. 3D 旋转"></a>5. 3D 旋转</h3><p>3D 旋转是在 2D 旋转的基础上，可以让元素沿 x 轴和 y 轴旋转，具体使用方式如下：</p><ol><li>先给元素添加 转换属性 transform</li><li>编写 transform 的具体值， 3D 相关可选值如下：<br>| 值       | 含义                                                                                                                                                             |</li></ol><p>| ——– | —————————————————————————————————————————————————————- |<br>| rotateX  | 设置 x 轴旋转角度，需指定一个角度值( deg )，面对 x 轴正方向：正值顺时针，负值逆时针。                                                                            |<br>| rotateY  | 设置 y 轴旋转角度，需指定一个角度值( deg )，面对 y 轴正方向：正值顺时针，负值逆时针。                                                                            |<br>| rotate3d | 前 3 个参数分别表示坐标轴： x , y , z ，第 4 个参数表示旋转的角度，参数不允许省略。例如： transform: rotate3d(1,1,1,30deg) ,意思是： x 、 y 、 z 分别旋转30 度。 |</p><h3 id="6-3D-缩放"><a href="#6-3D-缩放" class="headerlink" title="6. 3D 缩放"></a>6. 3D 缩放</h3><p>3D 缩放是在 2D 缩放的基础上，可以让元素沿 z 轴缩放，具体使用方式如下：</p><ol><li>先给元素添加 转换属性 transform</li><li>编写 transform 的具体值， 3D 相关可选值如下：<br>| 值      | 含义                                                                                                           |</li></ol><p>| ——- | ————————————————————————————————————– |<br>| scaleZ  | 设置 z 轴方向的缩放比例，值为一个数字，1表示不缩放，大于1放大，小于1缩小。 -&gt; 由于元素没有厚度，会转而调整景深 |<br>| scale3d | 第1个参数对应 x 轴，第2个参数对应 y 轴，第3个参数对应 z 轴，参数不允许省略。                                   |</p><h3 id="7-多重变换与变换原点"><a href="#7-多重变换与变换原点" class="headerlink" title="7. 多重变换与变换原点"></a>7. 多重变换与变换原点</h3><ul><li>多个变换，可以同时使用一个 transform 来编写。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 变换旋转轴 */</span></span><br><span class="line"><span class="attribute">transform-origin</span>: left;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">100px</span>) <span class="built_in">scaleZ</span>(<span class="number">3</span>) <span class="built_in">rotateY</span>(<span class="number">40deg</span>);</span><br></pre></td></tr></table></figure><blockquote><p>注意点：多重变换时，建议最后旋转。</p></blockquote></li></ul><h3 id="8-背部可见性"><a href="#8-背部可见性" class="headerlink" title="8. 背部可见性"></a>8. 背部可见性</h3><ul><li>使用 backface-visibility 指定元素背面，在面向用户时是否可见，常用值如下：<ul><li>visible ： 指定元素背面可见，允许显示正面的镜像。—— 默认值</li><li>hidden ： 指定元素背面不可见<blockquote><p>注意： backface-visibility 需要加在发生 3D 变换元素的自身上。</p></blockquote></li></ul></li></ul><h2 id="12-过渡"><a href="#12-过渡" class="headerlink" title="12. 过渡"></a>12. 过渡</h2><blockquote><p>过渡可以在不使用 Flash 动画，不使用 JavaScript 的情况下，让元素从一种样式，平滑过渡为另一种样式。</p></blockquote><h3 id="1-transition-property"><a href="#1-transition-property" class="headerlink" title="1. transition-property"></a>1. transition-property</h3><ul><li>作用：定义哪个属性需要过渡，只有在该属性中定义的属性（比如宽、高、颜色等）才会以有过渡效果。</li><li>常用值：<ol><li>none ：不过渡任何属性。</li><li>all ：过渡<code>所有能过渡的属性</code>。</li><li>具体某个属性名 ，例如：<code>width</code>、<code>heigth</code>，若有多个以逗号分隔。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transition-property</span>: width, height;</span><br></pre></td></tr></table></figure><blockquote><p>不是所有的属性都能过渡，<code>值为数字</code>，或者<code>值能转为数字的属性</code>，都支持过渡，否则不支持过渡。<br>常见的支持过渡的属性有：颜色、长度值、百分比、z-index、opacity、2D变换属性、3D变换属性、阴影。</p></blockquote></li></ol></li></ul><h3 id="2-transition-duration"><a href="#2-transition-duration" class="headerlink" title="2. transition-duration"></a>2. transition-duration</h3><ul><li>作用：设置过渡的<code>持续时间</code>，即：一个状态过渡到另外一个状态耗时多久。</li><li>常用值：<ol><li>0 ：没有任何过渡时间 —— 默认值。</li><li>s 或 ms ：秒或毫秒。</li><li>列表 ：</li></ol><ul><li>如果想让所有属性都持续一个时间，那就写一个值。</li><li>如果想让每个属性持续不同的时间那就写一个时间的列表。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 分别设置 */</span></span><br><span class="line"><span class="attribute">transition-duration</span>: <span class="number">1s</span>, <span class="number">3s</span>;</span><br><span class="line"><span class="comment">/* all */</span></span><br><span class="line"><span class="attribute">transition-duration</span>: <span class="number">5s</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="3-transition-delay"><a href="#3-transition-delay" class="headerlink" title="3. transition-delay"></a>3. transition-delay</h3><ul><li>作用：指定开始过渡的延迟时间</li><li>单位： s 或 ms</li></ul><h3 id="4-transition-timing-function"><a href="#4-transition-timing-function" class="headerlink" title="4. transition-timing-function"></a>4. transition-timing-function</h3><ul><li>作用：设置过渡的类型<br> -常用值：<ol><li>ease ： 平滑过渡 —— 默认值</li><li>linear ： 线性过渡</li><li>ease-in ： 慢 → 快</li><li>ease-out ： 快 → 慢</li><li>ease-in-out ： 慢 → 快 → 慢</li><li>step-start ： 等同于 steps(1, start)</li><li>step-end ： 等同于 steps(1, end)</li><li>steps( integer,?) ： 接受两个参数的步进函数。第一个参数必须为正整数，指定函数的步数。第二个参数取值可以是 start 或 end ，指定每一步的值发生变化的时间点。第二个参数默认值为 end 。</li><li>cubic-bezie ( number, number, number, number)： 特定的贝塞尔曲线类型。<blockquote><p>在线制作贝赛尔曲线：<a href="https://cubic-bezier.com/">https://cubic-bezier.com</a></p></blockquote></li></ol></li></ul><h3 id="5-transition-复合属性"><a href="#5-transition-复合属性" class="headerlink" title="5. transition 复合属性"></a>5. transition 复合属性</h3><ul><li>如果设置了一个时间，表示 duration ；如果设置了两个时间，第一是 duration ，第二个是delay ；其他值没有顺序要求。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transition</span>:<span class="number">1s</span> <span class="number">1s</span> linear all;</span><br></pre></td></tr></table></figure></li></ul><h2 id="13-动画"><a href="#13-动画" class="headerlink" title="13. 动画"></a>13. 动画</h2><h3 id="1-帧"><a href="#1-帧" class="headerlink" title="1. 帧"></a>1. 帧</h3><blockquote><p>一段动画，就是一段时间内连续播放 n 个画面。每一张画面，我们管它叫做“帧”。一定时间内连续快速播放若干个帧，就成了人眼中所看到的动画。同样时间内，播放的帧数越多，画面看起来越流畅。</p></blockquote><h3 id="2-关键帧"><a href="#2-关键帧" class="headerlink" title="2. 关键帧"></a>2. 关键帧</h3><blockquote><p>关键帧指的是，在构成一段动画的若干帧中，起到决定性作用的 2-3 帧。</p></blockquote><h3 id="3-动画的基本使用"><a href="#3-动画的基本使用" class="headerlink" title="3. 动画的基本使用"></a>3. 动画的基本使用</h3><ul><li>第一步：定义关键帧（定义动画）</li></ul><ol><li>简单方式定义：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*写法一*/</span></span><br><span class="line"><span class="keyword">@keyframes</span> 动画名 &#123;</span><br><span class="line"><span class="selector-tag">from</span> &#123;</span><br><span class="line">  <span class="comment">/*property1:value1*/</span></span><br><span class="line">  <span class="comment">/*property2:value2*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">to</span> &#123;</span><br><span class="line"><span class="comment">/*property1:value1*/</span></span><br><span class="line">tranform: <span class="built_in">translate</span>(<span class="number">900px</span>);</span><br><span class="line"><span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>完整方式定义：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> 动画名 &#123;</span><br><span class="line"><span class="number">0%</span> &#123;</span><br><span class="line"><span class="comment">/*property1:value1*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">20%</span> &#123;</span><br><span class="line"><span class="comment">/*property1:value1*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">40%</span> &#123;</span><br><span class="line"><span class="comment">/*property1:value1*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">60%</span> &#123;</span><br><span class="line"><span class="comment">/*property1:value1*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">80%</span> &#123; </span><br><span class="line"><span class="comment">/*property1:value1*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">100%</span> &#123;</span><br><span class="line"><span class="comment">/*property1:value1*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>第二步：给元素应用动画，用到的属性如下：<ol><li>animation-name ：给元素指定具体的动画（具体的关键帧）</li><li>animation-duration ：设置动画所需时间</li><li>animation-delay ：设置动画延迟<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line"><span class="comment">/* 指定动画 */</span></span><br><span class="line"><span class="comment">/* animation-name: 动画名 */</span></span><br><span class="line"><span class="attribute">animation-name</span>: testKey;</span><br><span class="line"><span class="comment">/* 设置动画所需时间 */</span></span><br><span class="line"><span class="attribute">animation-duration</span>: <span class="number">5s</span>;</span><br><span class="line"><span class="comment">/* 设置动画延迟 */</span></span><br><span class="line"><span class="attribute">animation-delay</span>: <span class="number">0.5s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ul><h3 id="4-动画的其他属性"><a href="#4-动画的其他属性" class="headerlink" title="4.  动画的其他属性"></a>4.  动画的其他属性</h3><ol><li><code>animation-timing-function</code> ，设置动画的类型，常用值如下：</li><li>ease ： 平滑动画 —— 默认值</li><li>linear ： 线性过渡</li><li>ease-in ： 慢 → 快</li><li>ease-out ： 快 → 慢</li><li>ease-in-out ： 慢 → 快 → 慢</li><li>step-start ： 等同于 steps(1, start)</li><li>step-end ： 等同于 steps(1, end)</li><li>steps( integer,?) ： 接受两个参数的步进函数。第一个参数必须为正整数，指定函数的步数。第二个参数取值可以是 start 或 end ，指定每一步的值发生变化的时间点。第二个参数默认值为 end 。</li><li>cubic-bezie ( number, number, number, number)： 特定的贝塞尔曲线类型。</li><li><code>animation-iteration-count</code> ，指定动画的播放次数，常用值如下：</li><li>number ：动画循环次数</li><li>infinite ： 无限循环</li><li><code>animation-direction</code> ，指定动画方向，常用值如下<ol><li>normal ： 正常方向 (默认)</li><li>reverse ： 反方向运行</li><li>alternate ： 动画先正常运行再反方向运行，并持续交替运行</li><li>alternate-reverse ： 动画先反运行再正方向运行，并持续交替运行</li></ol></li><li><code>animation-fill-mode</code> ，设置动画之外的状态(不发生动画时在哪里)<ol><li>forwards ： 设置对象状态为动画结束时的状态</li><li>backwards ： 设置对象状态为动画开始时的状态</li></ol></li><li><code>animation-play-state</code> ，设置动画的播放状态，常用值如下：<ol><li>running ： 运动 (默认)</li><li>paused ： 暂停</li></ol></li></ol><h3 id="5-动画复合属性"><a href="#5-动画复合属性" class="headerlink" title="5. 动画复合属性"></a>5. 动画复合属性</h3><ul><li>只设置一个时间表示 duration ，设置两个时间分别是：duration 和 delay ，其他属性没有数量和顺序要求。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.inner</span> &#123;</span><br><span class="line"><span class="attribute">animation</span>: atguigu <span class="number">3s</span> <span class="number">0.5s</span> linear <span class="number">2</span> alternate-reverse forwards;</span><br><span class="line">&#125;</span><br><span class="line">```  </span><br><span class="line">&gt; 备注：<span class="attribute">animation-play-state</span> 一般单独使用。</span><br><span class="line">### <span class="number">6</span>. 动画与过渡的区别</span><br><span class="line"><span class="number">1</span>. 动画不需要出发条件，过渡必须需要出发条件</span><br><span class="line"><span class="number">2</span>. 动画可以通过关键帧调整变换</span><br><span class="line"></span><br><span class="line">## <span class="number">14</span>. 多列布局</span><br><span class="line">### <span class="number">1</span>. 多列文字</span><br><span class="line">- 作用：专门用于实现类似于报纸的布局。</span><br><span class="line">- 常用属性如下：</span><br><span class="line">  - <span class="attribute">column-count</span> ：指定列数，值是数字。</span><br><span class="line">  - <span class="attribute">column-width</span> ：指定列宽，值是长度。</span><br><span class="line">  - <span class="attribute">columns</span> ：同时指定列宽和列数，复合属性；值没有数量和顺序要求。（不推荐）</span><br><span class="line">  - <span class="attribute">column-gap</span> ：设置列间距，值是长度。</span><br><span class="line">  - <span class="attribute">column-rule-style</span> ：设置列与列之间边框的风格，值与 <span class="attribute">border-style</span> 一致。</span><br><span class="line">  - <span class="attribute">column-rule-width</span> ：设置列与列之间边框的宽度，值是长度。</span><br><span class="line">  - <span class="attribute">column-rule-color</span> ：设置列与列之间边框的颜色。</span><br><span class="line">  - coumn-rule ：设置列边框，复合属性。</span><br><span class="line">  - <span class="attribute">column-span</span> 指定是否跨列；值: none、all。</span><br><span class="line">### <span class="number">2</span>. 多列图片</span><br><span class="line">```css</span><br><span class="line">.outer &#123;</span><br><span class="line">  column: <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  bax-shadow: <span class="number">0px</span> <span class="number">0px</span> <span class="number">20px</span> black;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.05</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="15-伸缩盒模型"><a href="#15-伸缩盒模型" class="headerlink" title="15. 伸缩盒模型"></a>15. 伸缩盒模型</h2><h3 id="1-伸缩盒模型简介"><a href="#1-伸缩盒模型简介" class="headerlink" title="1. 伸缩盒模型简介"></a>1. 伸缩盒模型简介</h3><ul><li>2009 年， W3C 提出了一种新的盒子模型 —— Flexible Box （伸缩盒模型，又称：弹性盒子）。</li><li>它可以轻松的控制：元素分布方式、元素对齐方式、元素视觉顺序 …….</li><li>截止目前，除了在部分 IE 浏览器不支持，其他浏览器均已全部支持。</li><li>伸缩盒模型的出现，逐渐演变出了一套新的布局方案 —— flex 布局。<blockquote><ol><li>传统布局是指：基于传统盒状模型，主要靠： display 属性 + position 属性 + float<br>属性。</li><li>flex 布局目前在移动端应用比较广泛，因为传统布局不能很好的呈现在移动设备上。</li></ol></blockquote></li></ul><h3 id="2-伸缩容器、伸缩项目"><a href="#2-伸缩容器、伸缩项目" class="headerlink" title="2. 伸缩容器、伸缩项目"></a>2. 伸缩容器、伸缩项目</h3><ul><li>伸缩容器： <code>开启了flex</code>的元素，就是：伸缩容器。<ol><li>给元素设置：display:flex 或 display:inline-flex ，该元素就变为了伸缩容器。</li><li>display:inline-flex <code>很少使用</code>，因为可以给多个伸缩容器的父容器，也设置为伸缩容器。</li><li>一个元素可以同时是：伸缩容器、伸缩项目。</li></ol></li><li>伸缩项目：伸缩容器所有<code>子元素</code>自动成为了：伸缩项目。<ol><li>仅伸缩容器的子元素成为了伸缩项目，<code>孙子元素、重孙子元素</code>等后代，不是伸缩项目。</li><li>无论原来是哪种元素（块、行内块、行内），一旦成为了伸缩项目，全都会<code>“块状化”</code>。</li></ol></li></ul><h3 id="3-主轴与侧轴"><a href="#3-主轴与侧轴" class="headerlink" title="3. 主轴与侧轴"></a>3. 主轴与侧轴</h3><ul><li>主轴： 伸缩项目沿着主轴排列，主轴默认是水平的，默认方向是：从左到右（左边是起点，右边是终点）。</li><li>侧轴： <code>与主轴垂直</code>的就是侧轴，侧轴默认是垂直的，默认方向是：从上到下（上边是起点，下边是终点）。</li></ul><h3 id="4-主轴方向"><a href="#4-主轴方向" class="headerlink" title="4. 主轴方向"></a>4. 主轴方向</h3><ul><li>属性名： flex-direction</li><li>常用值如下：<ol><li>row ：主轴方向水平从左到右 —— 默认值</li><li>row-reverse ：主轴方向水平从右到左。</li><li>column ：主轴方向垂直从上到下。</li><li>column-reverse ：主轴方向垂直从下到上。<blockquote><p>注意：改变了主轴的方向，侧轴方向也随之改变。</p></blockquote></li></ol></li></ul><h3 id="5-主轴换行方式"><a href="#5-主轴换行方式" class="headerlink" title="5. 主轴换行方式"></a>5. 主轴换行方式</h3><ul><li>属性名： flex-wrap</li><li>常用值如下：<ol><li>nowrap（默认值）：不换行，伸缩容器。</li><li>wrap：自动换行，伸缩容器不够自动换行。（父容器足够大会使换行的那行上下间距相等）</li><li>wrap-reverse ：反向换行。</li></ol></li></ul><h3 id="6-flex-flow"><a href="#6-flex-flow" class="headerlink" title="6. flex-flow"></a>6. flex-flow</h3><ul><li>flex-flow 是一个复合属性，复合了 flex-direction 和 flex-wrap 两个属性。 值没有顺序要求。（不推荐）<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-flow</span>: row wrap;</span><br></pre></td></tr></table></figure></li></ul><h3 id="7-主轴对齐方式"><a href="#7-主轴对齐方式" class="headerlink" title="7. 主轴对齐方式"></a>7. 主轴对齐方式</h3><ul><li>属性名： justify-content</li><li>常用值如下：<ol><li>flex-start （默认值）：主轴起点对齐。</li><li>flex-end ：主轴终点对齐。</li><li>center ：居中对齐</li><li>space-between ：均匀分布，两端对齐（最常用）。</li><li>space-around ：均匀分布，两端距离是中间距离的一半。</li><li>space-evenly ：均匀分布，两端距离与中间距离一致。</li></ol></li></ul><h3 id="8-侧轴对齐方式"><a href="#8-侧轴对齐方式" class="headerlink" title="8. 侧轴对齐方式"></a>8. 侧轴对齐方式</h3><h4 id="1-单行"><a href="#1-单行" class="headerlink" title="1. 单行"></a>1. 单行</h4><ul><li>所需属性： align-items</li><li>常用值如下：<ol><li>flex-start ：侧轴的起点对齐。</li><li>flex-end ：侧轴的终点对齐。</li><li>center ：侧轴的中点对齐。</li><li>baseline :  伸缩项目的第一行文字的基线对齐。</li><li>stretch（默认值）：如果<code>伸缩项目未设置高度</code>，将占满整个容器的高度。</li></ol></li></ul><h4 id="2-多行"><a href="#2-多行" class="headerlink" title="2. 多行"></a>2. 多行</h4><ul><li>所需属性： align-content</li><li>常用值如下：<ol><li>flex-start ：与侧轴的起点对齐。</li><li>flex-end ：与侧轴的终点对齐。</li><li>center ：与侧轴的中点对齐。</li><li>space-between ：与侧轴两端对齐，中间平均分布。</li><li>space-around ：伸缩项目间的距离相等，比距边缘大一倍。</li><li>space-evenly : 在侧轴上完全平分。</li><li>stretch（默认值） ：未设置高度，占满整个侧轴。</li></ol></li></ul><h3 id="9-flex-实现水平垂直居中"><a href="#9-flex-实现水平垂直居中" class="headerlink" title="9. flex 实现水平垂直居中"></a>9. flex 实现水平垂直居中</h3><ul><li>方法一：父容器开启 flex 布局，随后使用 justify-content 和 align-items 实现水平垂直居中<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#888</span>;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">justify-content</span>: center;</span><br><span class="line"><span class="attribute">align-items</span>: center; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: orange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>方法二：父容器开启 flex 布局，随后子元素 margin: auto<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#888</span>;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: orange;</span><br><span class="line"><span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="10-伸缩性"><a href="#10-伸缩性" class="headerlink" title="10. 伸缩性"></a>10. 伸缩性</h3><ol><li>flex-basis</li></ol><ul><li>概念： flex-basis 设置的是<code>主轴方向</code>的基准长度，会让宽度或高度失效。<blockquote><p>备注：主轴横向：宽度失效；主轴纵向：高度失效</p></blockquote></li><li>作用：浏览器根据这个属性设置的值，计算主轴上是否有多余空间，默认值<code>auto</code>，即：伸缩项目的宽或高。</li></ul><ol start="2"><li>flex-grow（伸）</li></ol><ul><li>概念： flex-grow 定义伸缩项目的放大比例，默认为 0 ，即：纵使主轴存在剩余空间，也不拉伸（放大）。</li><li>规则：<ol><li>若所有伸缩项目的 flex-grow 值都为 1 ，则：它们将等分剩余空间（如果有空间的话）。</li><li>若三个伸缩项目的 flex-grow 值分别为： 1 、 2 、 3 ，则：分别瓜分到： 1&#x2F;6 、 2&#x2F;6 、3&#x2F;6 的空间。</li></ol></li></ul><ol start="3"><li>flex-shrink（缩）</li></ol><ul><li>概念： flex-shrink 定义了项目的压缩比例，默认为 1 ，即：如果空间不足，该项目将会缩小。</li><li>收缩项目的计算，略微复杂一点，我们拿一个场景举例：<blockquote><p>例如：<br>三个收缩项目，宽度分别为： 200px 、 300px 、 200px ，它们的 flex-shrink 值分别<br>为： 1 、 2 、 3<br>若想刚好容纳下三个项目，需要总宽度为 700px ，但目前容器只有 400px ，还差 300px<br>所以每个人都要收缩一下才可以放下，具体收缩的值，这样计算：</p></blockquote></li></ul><ol><li>计算分母： (200×1) + (300×2) + (200×3) &#x3D; 1400</li><li>计算比例：<br>项目一： (200×1) &#x2F; 1400 &#x3D; 比例值1<br>项目二： (300×2) &#x2F; 1400 &#x3D; 比例值2<br>项目三： (200×3) &#x2F; 1400 &#x3D; 比例值3</li><li>计算最终收缩大小：<br>项目一需要收缩： 比例值1 × 300<br>项目二需要收缩： 比例值2 × 300<br>项目三需要收缩： 比例值3 × 300<blockquote><p>缩放区别：同甘不共苦（等分放，按各自比例缩）</p></blockquote></li></ol><h3 id="11-flex复合属性"><a href="#11-flex复合属性" class="headerlink" title="11. flex复合属性"></a>11. flex复合属性</h3><p>flex 是复合属性，复合了： flex-grow 、 flex-shrink 、 flex-basis 三个属性，默认值为 0 1 auto 。</p><ul><li>如果写 flex:1 1 auto ，则可简写为： flex:auto</li><li>如果写 flex:1 1 0 ，则可简写为： flex:1（常用）</li><li>如果写 flex:0 0 auto ，则可简写为： flex:none</li><li>如果写 flex:0 1 auto ，则可简写为： flex:0 auto —— 即 flex<code>初始值</code>。</li></ul><h3 id="12-项目排序"><a href="#12-项目排序" class="headerlink" title="12. 项目排序"></a>12. 项目排序</h3><p>order 属性定义项目的排列顺序。数值越小，排列越靠前，默认为 0</p><h3 id="13-单独对齐"><a href="#13-单独对齐" class="headerlink" title="13. 单独对齐"></a>13. 单独对齐</h3><ul><li>通过 align-self 属性，可以单独调整某个伸缩项目的对齐方式</li><li>默认值为 auto ，表示继承父元素的 align-items 属性。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.page-content</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">height</span>: <span class="built_in">calc</span>(<span class="number">100vh</span> - <span class="number">70px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="16-响应式布局"><a href="#16-响应式布局" class="headerlink" title="16. 响应式布局"></a>16. 响应式布局</h2><h3 id="媒体查询"><a href="#媒体查询" class="headerlink" title="媒体查询"></a>媒体查询</h3><h3 id="1-媒体类型"><a href="#1-媒体类型" class="headerlink" title="1. 媒体类型"></a>1. 媒体类型</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 只有在打印机或者打印预览才应用 */</span></span><br><span class="line"><span class="keyword">@media</span> print &#123;</span><br><span class="line">  <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: transparent;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>all</td><td>检测所有设备。</td></tr><tr><td>screen</td><td>检测电子屏幕，包括：电脑屏幕、平板屏幕、手机屏幕等。</td></tr><tr><td>print</td><td>检测打印机。</td></tr></tbody></table><ul><li>不提高样式优先级，建议在样式最后写<blockquote><p>完整列表请参考：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media">https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media</a></p></blockquote></li></ul><h3 id="2-媒体特性"><a href="#2-媒体特性" class="headerlink" title="2. 媒体特性"></a>2. 媒体特性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 检测到视口的宽度为800px时应用 */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">width</span>: <span class="number">800px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">h1</span> &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 检测到视口的宽度小于等于700px时应用 */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">700px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 检测到视口的宽度大于等于700px时应用 */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">900px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>width</td><td>检测视口宽度。</td></tr><tr><td>max-width</td><td>检测视口最大宽度。</td></tr><tr><td>min-width</td><td>检测视口最小宽度。</td></tr><tr><td>height</td><td>检测视口高度。</td></tr><tr><td>max-height</td><td>检测视口最大高度。</td></tr><tr><td>min-height</td><td>检测视口最小高度。</td></tr><tr><td>device-width</td><td>检测设备屏幕的宽度。</td></tr><tr><td>max-device-width</td><td>检测设备屏幕的最大宽度。</td></tr><tr><td>min-device-width</td><td>检测设备屏幕的最小宽度。</td></tr><tr><td>orientation</td><td>检测视口的旋转方向（是否横屏）。1. portrait：视口处于纵向，即高度大于等于宽度；2. landscape：视口处于横向，即宽度大于高度。</td></tr></tbody></table><blockquote><p>完整列表请参考：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media">https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media</a></p></blockquote><h3 id="3-运算符"><a href="#3-运算符" class="headerlink" title="3. 运算符"></a>3. 运算符</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>:<span class="number">700px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">900px</span>) &#123;</span><br><span class="line">  <span class="selector-tag">h1</span> &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>and</td><td>并且</td></tr><tr><td>, 或 or</td><td>或</td></tr><tr><td>not</td><td>否定</td></tr><tr><td>only</td><td>肯定</td></tr></tbody></table><h3 id="4-常用阈值"><a href="#4-常用阈值" class="headerlink" title="4. 常用阈值"></a>4. 常用阈值</h3><ul><li>在实际开发中，会将屏幕划分成几个区间:<br>超小屏幕|768px|中等屏幕|992px|大屏幕|1200px|超大屏幕</li></ul><h3 id="5-结合外部样式的用法"><a href="#5-结合外部样式的用法" class="headerlink" title="5. 结合外部样式的用法"></a>5. 结合外部样式的用法</h3><ol><li>用法一：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">media</span>=<span class="string">&quot;具体的媒体查询&quot;</span> <span class="attr">href</span>=<span class="string">&quot;mystylesheet.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>用法二：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">768px</span>) &#123;</span><br><span class="line"><span class="comment">/*CSS-Code;*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>:<span class="number">768px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">1200px</span>) &#123;</span><br><span class="line"><span class="comment">/*CSS-Code;*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="17-BFC"><a href="#17-BFC" class="headerlink" title="17.  BFC"></a>17.  BFC</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1. 概念"></a>1. 概念</h3><ul><li>W3C 上对 BFC 的定义：<blockquote><p>原文：Floats, absolutely positioned elements, block containers (such as inline-blocks, table,cells, and table-captions) that are not block boxes, and block boxes with ‘overflow’ other than’visible’ (except when that value has been propagated to the viewport) establish new blockformatting contexts for their contents.<br>译文：浮动、绝对定位元素、不是块盒子的块容器（如 inline-blocks 、 table-cells 和table-captions ），以及 overflow 属性的值除 visible 以外的块盒，将为其内容建立新的块格式化上下文。</p></blockquote></li><li>MDN 上对 BFC 的描述：<blockquote><p>块格式化上下文（Block Formatting Context，BFC） 是 Web 页面的可视 CSS 渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。</p></blockquote></li><li>更加通俗的描述：<blockquote><ol><li>BFC 是 Block Formatting Context （块级格式上下文），可以理解成元素的一个“特异功能”(隐藏属性)</li><li>该 “特异功能”，在默认的情况下处于关闭状态；当元素满足了某些条件后，该“特异功能”被激活。</li><li>所谓激活“特异功能”，专业点说就是：该元素创建了 BFC （又称：开启了 BFC ）。</li></ol></blockquote></li></ul><h3 id="2-开启了BFC能解决什么问题"><a href="#2-开启了BFC能解决什么问题" class="headerlink" title="2. 开启了BFC能解决什么问题"></a>2. 开启了BFC能解决什么问题</h3><ol><li>元素开启 BFC 后，其子元素不会再产生 margin 塌陷问题。</li><li>元素开启 BFC 后，自己不会被其他浮动元素所覆盖。</li><li>元素开启 BFC 后，就算其子元素浮动，元素自身高度也不会塌陷。</li></ol><h3 id="3-如何开启BFC"><a href="#3-如何开启BFC" class="headerlink" title="3. 如何开启BFC"></a>3. 如何开启BFC</h3><ul><li>根元素</li><li>浮动元素</li><li>绝对定位、固定定位的元素</li><li>行内块元素</li><li>表格单元格： table 、 thead 、 tbody 、 tfoot 、 th 、 td 、 tr 、 caption</li><li>overflow 的值不为 visible 的块元素</li><li>伸缩项目</li><li>多列容器</li><li>column-span 为 all 的元素（即使该元素没有包裹在多列容器中）</li><li>display 的值，设置为 flow-root</li></ul>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS09.CSS3-01</title>
      <link href="/2023/12/11/CSS09-CSS3-01/"/>
      <url>/2023/12/11/CSS09-CSS3-01/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS09-CSS3-01"><a href="#CSS09-CSS3-01" class="headerlink" title="CSS09.CSS3-01"></a>CSS09.CSS3-01</h1><h2 id="1-CSS3简介"><a href="#1-CSS3简介" class="headerlink" title="1. CSS3简介"></a>1. CSS3简介</h2><h3 id="1-C3概述"><a href="#1-C3概述" class="headerlink" title="1. C3概述"></a>1. C3概述</h3><blockquote><p><code>CSS3</code> 是 <code>CSS2</code> 的升级版本，它在 CSS2 的基础上，新增了很多强大的新功能，从而解决一些实际面临的问题。<br>CSS3 在未来会按照<strong>模块化</strong>的方式去发展： <a href="https://www.w3.org/Style/CSS/current-work.html">https://www.w3.org/Style/CSS/current-work.html</a></p></blockquote><ul><li>CSS3 的新特性如下：<ul><li>新增了更加实用的<code>选择器</code>，例如：动态伪类选择器、目标伪类选择器、伪元素选择器等等。</li><li>新增了更好的<code>视觉效果</code>，例如：圆角、阴影、渐变等。</li><li>新增了丰富的<code>背景效果</code>，例如：支持多个背景图片，同时新增了若干个背景相关的属性。</li><li>新增了<code>全新的布局方案</code> —— 弹性盒子。</li><li>新增了 <code>Web字体</code>，可以显示用户电脑上没有安装的字体。</li><li>增强了<code>颜色</code>，例如： <code>HSL</code> 、 <code>HSLA</code> 、 <code>RGBA</code> 几种新的颜色模式，新增 <code>opacity</code> 属性来控制透明度。</li><li>增加了 <code>2D变换</code> 和 <code>3D变换</code>，例如：旋转、扭曲、缩放、位移等。</li><li>增加<code>动画与过渡效果</code>，让效果的变换更具流线性、平滑性。</li></ul></li></ul><h3 id="2-CSS3私有前缀"><a href="#2-CSS3私有前缀" class="headerlink" title="2. CSS3私有前缀"></a>2. CSS3私有前缀</h3><ol><li>定义<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">400px</span>;</span><br><span class="line"><span class="attribute">height</span>:<span class="number">400px</span>;</span><br><span class="line">-webkit-<span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li><code>-webkit-</code>就是私有前缀</li></ul><ol start="2"><li>原因<ul><li>W3C 标准所提出的某个 CSS 特性，在被浏览器正式支持之前，浏览器厂商会根据浏览器的<code>内核</code>，使用私有前缀来测试该 CSS 特性，在浏览器正式支持该 CSS 特性后，就不需要私有前缀了。</li></ul></li></ol><ul><li>举个例子：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-webkit-<span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">-moz-<span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">-ms-<span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">-o-<span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br></pre></td></tr></table></figure></li><li>查询 CSS3 兼容性的网站：<a href="https://caniuse.com/">https://caniuse.com/</a></li></ul><ol start="3"><li>常用浏览器私有前缀<ul><li><code>Chrome</code> 浏览器： <code>-webkit-</code></li><li><code>Safari</code> 浏览器： <code>-webkit-</code></li><li><code>Firefox</code> 浏览器： <code>-moz-</code></li><li><code>Edge</code> 浏览器： <code>-webkit-</code></li><li>旧 Opera 浏览器： -o-</li><li>旧 IE 浏览器： -ms-<blockquote><p>我们在编码时，不用过于关注浏览器私有前缀，不用绞尽脑汁的去记忆，也不用每个都去查询，因为常用的 CSS3 新特性，主流浏览器都是支持的，即便是为了老浏览器而加前缀，我们也可以借助现代的构建工具，去帮我们添加私有前缀。</p></blockquote></li></ul></li></ol><h2 id="2-CSS3-基本语法"><a href="#2-CSS3-基本语法" class="headerlink" title="2. CSS3 基本语法"></a>2. CSS3 基本语法</h2><h3 id="1-CSS3-新增长度单位"><a href="#1-CSS3-新增长度单位" class="headerlink" title="1. CSS3 新增长度单位"></a>1. CSS3 新增长度单位</h3><ol><li><code>rem</code> 根元素字体大小的倍数，只与根元素字体大小有关。</li><li><code>vw</code> 视口宽度的百分之多少 <code>10vw</code> 就是视口宽度的 <code>10%</code> (viewport width)</li><li><code>vh</code> 视口高度的百分之多少 <code>10vh</code> 就是视口高度的 <code>10%</code>(viewport height)</li><li><code>vmax</code> 视口宽高中大的那个的百分之多少。（了解即可）</li><li><code>vmin</code> 视口宽高中小的那个的百分之多少。（了解即可）</li></ol><h3 id="2-CSS3-新增颜色设置方式"><a href="#2-CSS3-新增颜色设置方式" class="headerlink" title="2. CSS3 新增颜色设置方式"></a>2. CSS3 新增颜色设置方式</h3><ul><li>CSS3 新增了三种颜色设置方式，分别是：<code>rgba</code>、<code>hsl</code>、<code>hsla</code>，略过。</li></ul><h3 id="3-CSS3-新增选择器"><a href="#3-CSS3-新增选择器" class="headerlink" title="3. CSS3 新增选择器"></a>3. CSS3 新增选择器</h3><ul><li>CSS3 新增的选择器有：<code>动态伪类、目标伪类、语言伪类、 UI 伪类、结构伪类、否定伪类、伪元素</code>，略过。</li></ul><h3 id="4-CSS3-新增盒模型相关属性"><a href="#4-CSS3-新增盒模型相关属性" class="headerlink" title="4.  CSS3 新增盒模型相关属性"></a>4.  CSS3 新增盒模型相关属性</h3><ol><li>box-sizing 怪异盒模型<blockquote><p>使用 box-sizing 属性可以设置盒模型的两种类型</p></blockquote></li></ol><table><thead><tr><th>可选值</th><th>含义</th></tr></thead><tbody><tr><td><code>content-box</code></td><td>width 和 height 设置的是盒子内容区的大小。（默认值）</td></tr><tr><td><code>border-box</code></td><td>width 和 height 设置的是盒子总大小。（怪异盒模型）</td></tr></tbody></table><ol start="2"><li>resize 调整盒子大小</li></ol><blockquote><p>使用<code>resize</code>属性可以控制是否允许用户调节元素尺寸</p></blockquote><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td><code>none</code></td><td>不允许用户调整元素大小。 (默认)</td></tr><tr><td><code>both</code></td><td>用户可以调节元素的宽度和高度。</td></tr><tr><td><code>horizontal</code></td><td>用户可以调节元素的宽度 。</td></tr><tr><td><code>vertical</code></td><td>用户可以调节元素的高度。</td></tr></tbody></table><ul><li>必须搭配overflow使用（任意值都可以）</li></ul><ol><li>box-shadow 盒子阴影<blockquote><p>使用<code>box-shadow</code>属性为盒子添加阴影。</p></blockquote></li></ol><ul><li>语法：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: h-shadow v-shadow blur spread color inset;</span><br></pre></td></tr></table></figure></li><li>各个值的含义：<table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>h-shadow</td><td>水平阴影的位置，必须填写，可以为负值</td></tr><tr><td>v-shadow</td><td>垂直阴影的位置，必须填写，可以为负值</td></tr><tr><td>blur</td><td>可选，模糊距离</td></tr><tr><td>spread</td><td>可选，阴影的外延值</td></tr><tr><td>color</td><td>可选，阴影的颜色</td></tr><tr><td>inset</td><td>可选，将外部阴影改为内部阴影</td></tr></tbody></table></li><li>默认值：<code>box-shadow:none</code>表示没有阴影</li><li>示例：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 写两个值，含义：水平位置、垂直位置 */</span></span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line"><span class="comment">/* 写三个值，含义：水平位置、垂直位置、颜色 */</span></span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> red;</span><br><span class="line"><span class="comment">/* 写三个值，含义：水平位置、垂直位置、模糊值 */</span></span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line"><span class="comment">/* 写四个值，含义：水平位置、垂直位置、模糊值、颜色 */</span></span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span> red;</span><br><span class="line"><span class="comment">/* 写五个值，含义：水平位置、垂直位置、模糊值、外延值、颜色 */</span></span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span> blue;</span><br><span class="line"><span class="comment">/* 写六个值，含义：水平位置、垂直位置、模糊值、外延值、颜色、内阴影 */</span></span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">20px</span> <span class="number">3px</span> blue inset;</span><br></pre></td></tr></table></figure></li></ul><ol><li>opacity(不透明度)</li></ol><ul><li><code>opacity</code>属性能为整个元素添加透明效果，值是 0 到 1 之间的小数， 0 是完全透明， 1 表示完全不透明。</li><li>opacity 与 rgba 的区别？<ul><li>opacity 是一个属性，设置的是整个元素（包括元素里的内容）的不透明度。</li><li>rgba 是颜色的设置方式，用于设置颜色，它的透明度，仅仅是调整颜色的透明度。</li></ul></li></ul><h3 id="5-CSS3-新增背景属性"><a href="#5-CSS3-新增背景属性" class="headerlink" title="5. CSS3 新增背景属性"></a>5. CSS3 新增背景属性</h3><ol><li>background-origin</li></ol><ul><li>作用：设置背景图的原点。</li><li>语法：<ol><li>padding-box ：从 padding 区域开始显示背景图像。—— 默认值</li><li>border-box ：从 border 区域开始显示背景图像。</li><li>content-box ：从 content 区域开始显示背景图像。</li></ol></li></ul><ol><li>background-clip</li></ol><ul><li>作用：设置背景图的向外裁剪的区域。</li><li>语法：<ol><li>border-box ： 从 border 区域开始向外裁剪背景。 —— 默认值</li><li>padding-box ： 从 padding 区域开始向外裁剪背景。</li><li>content-box ： 从 content 区域开始向外裁剪背景。</li><li>text ：背景图只呈现在文字上。<blockquote><p>注意：若值为 text ，那么 backgroun-clip 要加上 -webkit- 前缀,且文字颜色为<code>transparent</code></p></blockquote></li></ol></li></ul><ol><li>background-size</li></ol><ul><li>作用：设置背景图的尺寸。</li><li>语法：<ol><li>用长度值指定背景图片大小，不允许负值。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-size</span>: <span class="number">300px</span> <span class="number">200px</span>;</span><br></pre></td></tr></table></figure></li><li>用百分比指定背景图片大小，不允许负值。 <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br></pre></td></tr></table></figure></li><li>auto ：背景图片的真实大小。 —— 默认值</li><li>contain ：将背景图片等比缩放，使背景图片的宽或高，与容器的宽或高相等，再将完整背景图片包含在容器内，但要注意：可能会造成容器里部分区域没有背景图片。 <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-size</span>: contain;</span><br></pre></td></tr></table></figure></li><li>cover ：将背景图片等比缩放，直到完全覆盖容器，图片会尽可能全的显示在元素上，但要注意：背景图片有可能显示不完整。—— 相对比较好的选择 <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-size</span>: cover;</span><br></pre></td></tr></table></figure></li></ol></li></ul><ol><li>backgorund 复合属性</li></ol><ul><li>语法：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: color url repeat position / size origin clip</span><br></pre></td></tr></table></figure><ol><li><code>origin</code> 和 <code>clip</code> 的值如果一样，如果只写一个值，则 <code>origin</code> 和 <code>clip</code> 都设置；如果设置了两个值，前面的是 origin ，后面的 clip 。</li><li><code>size</code> 的值必须写在 <code>position</code> 值的后面，并且用 <code>/</code> 分开。</li><li>一般不使用复合属性，单个写</li></ol></li></ul><ol><li>多背景图</li></ol><ul><li><code>CSS3</code>允许元素设置多个背景图片<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">../images/bg-lt.png</span>) no-repeat,</span><br><span class="line"><span class="built_in">url</span>(<span class="string">../images/bg-rt.png</span>) no-repeat right top,</span><br><span class="line"><span class="built_in">url</span>(<span class="string">../images/bg-lb.png</span>) no-repeat left bottom,</span><br><span class="line"><span class="built_in">url</span>(<span class="string">../images/bg-rb.png</span>) no-repeat right bottom;</span><br></pre></td></tr></table></figure></li></ul><h3 id="6-CSS3新增边框属性"><a href="#6-CSS3新增边框属性" class="headerlink" title="6. CSS3新增边框属性"></a>6. CSS3新增边框属性</h3><ol><li>边框圆角</li></ol><ul><li>在 CSS3 中，使用 border-radius 属性可以将盒子变为圆角。</li><li>同时设置四个角的圆角：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 最大值为宽/高的一半,可以写百分比 */</span></span><br><span class="line"><span class="attribute">border-radius</span>:<span class="number">10px</span>; </span><br></pre></td></tr></table></figure></li><li>分开设置每个角的圆角（几乎不用）：<table><thead><tr><th>属性名</th><th>作用</th></tr></thead><tbody><tr><td><code>border-top-left-radius</code></td><td>设置左上角圆角半径：1. 一个值是正圆半径，2. 两个值分别是椭圆的 x 半径、 y 半径。</td></tr><tr><td><code>border-top-right-radius</code></td><td>设置右上角圆角半径：1. 一个值是正圆半径，2. 两个值分别是椭圆的 x 半径、 y 半径。</td></tr><tr><td><code>border-bottom-right-radius</code></td><td>设置右下角圆角半径：1. 一个值是正圆半径，2. 两个值分别是椭圆的 x 半径、 y 半径。</td></tr><tr><td><code>border-bottom-left-radius</code></td><td>设置左下角圆角半径：1. 一个值是正圆半径，2. 两个值分别是椭圆的 x 半径、 y 半径。</td></tr></tbody></table></li><li>分开设置每个角的圆角，综合写法（几乎不用）：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span>-raidus: 左上角x 右上角x 右下角x 左下角x / 左上y 右上y 右下y 左下y</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>边框外轮廓（了解）</li></ol><ul><li>outline-width ：外轮廓的宽度。</li><li>outline-color ：外轮廓的颜色。</li><li>outline-style ：外轮廓的风格。<ul><li>none ： 无轮廓</li><li>dotted ： 点状轮廓</li><li>dashed ： 虚线轮廓</li><li>solid ： 实线轮廓</li><li>double ： 双线轮廓</li></ul></li><li>outline-offset 设置外轮廓与边框的距离，正负值都可以设置。<blockquote><p>注意： outline-offset 不是 outline 的子属性，是一个独立的属性</p></blockquote></li><li>outline 复合属性<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">outline</span>:<span class="number">50px</span> solid blue;</span><br></pre></td></tr></table></figure></li><li>不占位</li></ul><h3 id="7-CSS3新增文本属性"><a href="#7-CSS3新增文本属性" class="headerlink" title="7. CSS3新增文本属性"></a>7. CSS3新增文本属性</h3><ol><li>文本阴影</li></ol><ul><li>在 CSS3 中，我们可以使用 text-shadow 属性给文本添加阴影。</li><li>语法：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-shadow</span>: h-shadow v-shadow blur color;</span><br></pre></td></tr></table></figure>| 值  | 描述 |<br>| — | —- ||<br>|h-shadow |必需写，水平阴影的位置。允许负值。|<br>|v-shadow |必需写，垂直阴影的位置。允许负值。|<br>|blur| 可选，模糊的距离。|<br>|color |可选，阴影的颜色|</li><li>默认值： text-shadow:none 表示没有阴影。</li></ul><ol start="2"><li>文本换行</li></ol><ul><li>在 CSS3 中，我们可以使用<code>white-space</code>属性设置文本换行方式。</li><li>常用值如下：<table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>normal</td><td>文本超出边界自动换行，文本中的换行被浏览器识别为一个空格。（默认值）</td></tr><tr><td>pre</td><td>原样输出，与 pre 标签的效果相同。</td></tr><tr><td>pre-wrap</td><td>在 pre 效果的基础上，超出元素边界自动换行。</td></tr><tr><td>pre-line</td><td>在 pre 效果的基础上，超出元素边界自动换行，且只识别文本中的换行，空格会忽略。</td></tr><tr><td>nowrap</td><td>强制不换行</td></tr></tbody></table></li></ul><ol start="3"><li>文本溢出</li></ol><ul><li>在 CSS3 中，我们可以使用<code>text-overflow</code>属性设置文本内容溢出时的呈现模式。</li><li>常用值如下：<table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>clip</td><td>当内联内容溢出时，将溢出部分裁切掉。 （默认值）</td></tr><tr><td>ellipsis</td><td>当内联内容溢出块容器时，将溢出部分替换为 … 。</td></tr></tbody></table><blockquote><p>注意：要使得 <code>text-overflow</code> 属性生效，块容器必须显式定义 <code>overflow</code> 为<code>非visible</code>值，<code>white-space</code>为<code>nowrap</code>值。</p></blockquote></li></ul><ol start="4"><li>文本修饰</li></ol><ul><li>CSS3 升级了<code>text-decoration</code>属性，让其变成了复合属性。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-decoration</span>: text-decoration-line || text-decoration-style || text-decoration-color</span><br></pre></td></tr></table></figure></li><li>子属性及其含义：<br>text-decoration-line 设置文本装饰线的位置<ul><li>none ： 指定文字无装饰 （默认值）</li><li>underline ： 指定文字的装饰是下划线</li><li>overline ： 指定文字的装饰是上划线</li><li>line-through ： 指定文字的装饰是贯穿线</li></ul></li><li>text-decoration-style 文本装饰线条的形状<ul><li>solid ： 实线 （默认）</li><li>double ： 双线</li><li>dotted ： 点状线条</li><li>dashed ： 虚线</li><li>wavy ： 波浪线</li></ul></li><li>text-decoration-color 文本装饰线条的颜色</li></ul><ol start="5"><li>文本描边<blockquote><p>注意：文字描边功能仅 webkit 内核浏览器支持。</p></blockquote></li></ol><ul><li><code>-webkit-text-stroke-width</code>：设置文字描边的宽度，写长度值。</li><li><code>-webkit-text-stroke-color</code>：设置文字描边的颜色，写颜色值。</li><li><code>-webkit-text-stroke</code>：复合属性，设置文字描边宽度和颜色。</li></ul><h3 id="8-CSS3-新增渐变"><a href="#8-CSS3-新增渐变" class="headerlink" title="8. CSS3 新增渐变"></a>8. CSS3 新增渐变</h3><ol><li>线性渐变<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 多个颜色之间的渐变， 默认`从上到下`渐变。 */</span></span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(red,yellow,green);</span><br><span class="line"><span class="comment">/* 使用关键词设置线性`渐变的方向`。 */</span></span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top,red,yellow,green);</span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right top,red,yellow,green);</span><br><span class="line"><span class="comment">/* 使用角度设置线性渐变的方向。 */</span></span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">30deg</span>,red,yellow,green);</span><br><span class="line"><span class="comment">/* 调整开始渐变的位置。 */</span></span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(red <span class="number">50px</span>,yellow <span class="number">100px</span> ,green <span class="number">150px</span>);</span><br></pre></td></tr></table></figure></li><li>径向渐变<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 多个颜色之间的渐变， 默认从圆心四散。（注意：不一定是正圆，要看容器本身宽高比） */</span></span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(red,yellow,green);</span><br><span class="line"><span class="comment">/* 使用关键词调整渐变圆的圆心位置。 */</span></span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(at right top,red,yellow,green);</span><br><span class="line"><span class="comment">/* 使用像素值调整渐变圆的圆心位置。基于左上点 */</span></span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(at <span class="number">100px</span> <span class="number">50px</span>,red,yellow,green);</span><br><span class="line"><span class="comment">/* 调整渐变形状为正圆 。 */</span></span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(circle,red,yellow,green);</span><br><span class="line"><span class="comment">/* 调整形状的半径 。 */</span></span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(<span class="number">100px</span>,red,yellow,green);</span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(<span class="number">50px</span> <span class="number">100px</span>,red,yellow,green);</span><br><span class="line"><span class="comment">/* 调整开始渐变的位置。 */</span></span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(red <span class="number">50px</span>,yellow <span class="number">100px</span>,green <span class="number">150px</span>);</span><br><span class="line"><span class="comment">/* 综合写法 */</span></span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(<span class="number">100px</span> <span class="number">50px</span> at <span class="number">150px</span> <span class="number">150px</span>,red <span class="number">50px</span>,yellow <span class="number">100px</span>,green <span class="number">150px</span>);</span><br></pre></td></tr></table></figure></li><li>重复渐变<br>无论线性渐变，还是径向渐变，<code>在没有发生渐变的位置</code>，继续进行渐变，就为重复渐变。</li></ol><ul><li>使用 repeating-linear-gradient 进行重复线性渐变，具体参数同 linear-gradient 。</li><li>使用 repeating-radial-gradient 进行重复径向渐变，具体参数同 radial-gradient 。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">repeating-linear-gradient</span>(red <span class="number">50px</span>,yellow <span class="number">100px</span> ,green <span class="number">150px</span>);</span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">repeating-radial-gradient</span>(red <span class="number">50px</span>,yellow <span class="number">100px</span>,green <span class="number">150px</span>);</span><br></pre></td></tr></table></figure><blockquote><p>我们可以利用渐变，做出很多有意思的效果：例如：横格纸、立体球等等。</p></blockquote></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 横格纸 */</span></span><br><span class="line"><span class="selector-class">.box1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">800px</span>;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border</span>:<span class="number">1px</span> solid black;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">repeating-liner-gradient</span>(transparent <span class="number">0px</span>,transparent <span class="number">29px</span>,gray <span class="number">30px</span>)</span><br><span class="line">  bakground-clip: content-box;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 立体球 */</span></span><br><span class="line"><span class="selector-class">.box2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">radical-gradient</span>(at <span class="number">80px</span> <span class="number">80px</span>,white,<span class="number">#333</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-web字体"><a href="#9-web字体" class="headerlink" title="9. web字体"></a>9. web字体</h3><ol><li>基本用法<br>可以通过 <code>@font-face</code> 指定字体的具体地址，浏览器会自动下载该字体，这样就不依赖用户电脑上的字体了。</li></ol><ul><li>语法（简写方式）<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">&quot;情书字体&quot;</span>;</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;./方正手迹.ttf&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>语法（高兼容性写法）<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">&quot;字体名&quot;</span>;</span><br><span class="line"><span class="attribute">font-display</span>: swap;</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;webfont.eot&#x27;</span>); <span class="comment">/* IE9 */</span></span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;webfont.eot?#iefix&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;embedded-opentype&#x27;</span>), <span class="comment">/* IE6-IE8 */</span></span><br><span class="line"><span class="built_in">url</span>(<span class="string">&#x27;webfont.woff2&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff2&#x27;</span>),</span><br><span class="line"><span class="built_in">url</span>(<span class="string">&#x27;webfont.woff&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>), <span class="comment">/* chrome、firefox */</span></span><br><span class="line"><span class="built_in">url</span>(<span class="string">&#x27;webfont.ttf&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;truetype&#x27;</span>), <span class="comment">/* chrome、firefox、opera、Safari,</span></span><br><span class="line"><span class="comment">Android*/</span></span><br><span class="line"><span class="built_in">url</span>(<span class="string">&#x27;webfont.svg#webfont&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;svg&#x27;</span>); <span class="comment">/* iOS 4.1- */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>定制字体</li></ol><ul><li>中文的字体文件很大，使用完整的字体文件不现实，通常针对某几个文字进行单独定制。</li><li>可使用阿里 Web 字体定制工具：<a href="https://www.iconfont.cn/webfont">https://www.iconfont.cn/webfont</a></li></ul><ol start="3"><li>字体图标</li></ol><ul><li><p>相比图片更加清晰。</p></li><li><p>灵活性高，更方便改变大小、颜色、风格等。</p></li><li><p>兼容性好，IE也能支持。</p><blockquote><p>字体图标的具体使用方式，每个平台不尽相同，最好参考<code>平台使用指南</code>，使用最多的是阿里图标库<br>阿里图标官网地址：<a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></p></blockquote></li><li><p>字体图标获取方式：</p><ol><li>方法一：在线链接</li><li>方法二：下载至本地</li></ol></li><li><p>引用字体方式：</p><ol><li>Unicode</li><li>Font Class（推荐方式）</li><li>Symbol<ol><li>兼容性较差，支持IE9及现代浏览器</li><li>浏览器渲染SVG的性能一般，还不如png</li></ol></li></ol></li><li><p>可以使用<code>&lt;i&gt;</code>标签代替<code>&lt;span&gt;</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML06-H5新增特性</title>
      <link href="/2023/12/11/HTML06-H5%E6%96%B0%E5%A2%9E%E7%89%B9%E6%80%A7/"/>
      <url>/2023/12/11/HTML06-H5%E6%96%B0%E5%A2%9E%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML06-H5新增特性"><a href="#HTML06-H5新增特性" class="headerlink" title="HTML06-H5新增特性"></a>HTML06-H5新增特性</h1><h2 id="1-H5简介"><a href="#1-H5简介" class="headerlink" title="1. H5简介"></a>1. H5简介</h2><h3 id="1-H5"><a href="#1-H5" class="headerlink" title="1. H5"></a>1. H5</h3><blockquote><p>HTML5 是新一代的 HTML 标准，2014年10月由万维网联盟（ W3C ）完成标准制定</p></blockquote><ol><li>官网地址</li></ol><ul><li>W3C 提供： <a href="https://www.w3.org/TR/html/index.html">https://www.w3.org/TR/html/index.html</a></li><li>WHATWG 提供：<a href="https://whatwg-cn.github.io/html/multipage">https://whatwg-cn.github.io/html/multipage</a></li></ul><ol start="2"><li>HTML5 在狭义上是指新一代的 HTML 标准，在广义上是指：整个前端。</li><li>HTML5优势<ol><li>针对<code>JavaScript</code>，新增了很多可操作的接口。</li><li>新增了一些语义化标签、全局属性。</li><li>新增了多媒体标签，可以很好的替代<code>flash</code>。</li><li>更加侧重语义化，对于<code>SEO</code>更友好。</li><li>可移植性好，可以大量应用在移动设备上。</li></ol></li><li>HTML5兼容性</li></ol><ul><li>支持： Chrome 、 Safari 、 Opera 、 Firefox 等主流浏览器。<blockquote><p>IE 浏览器必须是9及以上版本才支持 HTML5 ，且IE9仅支持部分HTML5 新特性。</p></blockquote></li></ul><h2 id="2-新增语义化标签"><a href="#2-新增语义化标签" class="headerlink" title="2. 新增语义化标签"></a>2. 新增语义化标签</h2><h3 id="1-新增布局标签"><a href="#1-新增布局标签" class="headerlink" title="1. 新增布局标签"></a>1. 新增布局标签</h3><table><thead><tr><th>标签名</th><th>语义</th><th>单&#x2F;双标签</th></tr></thead><tbody><tr><td><code>header</code></td><td>整个页面，或部分区域的头部</td><td>双</td></tr><tr><td><code>footer</code></td><td>整个页面，或部分区域的底部</td><td>双</td></tr><tr><td><code>nav</code></td><td>导航</td><td>双</td></tr><tr><td><code>article</code></td><td>文章、帖子、杂志、新闻、博客、评论等</td><td>双</td></tr><tr><td><code>section</code></td><td>页面中的某段文字，或文章中的某段文字（里面文字通常里面会包含标题）</td><td>双</td></tr><tr><td><code>aside</code></td><td>侧边栏</td><td>双</td></tr><tr><td><code>main</code></td><td>文档的主要内容 ( WHATWG 没有语义， IE 不支持)，<strong>几乎不用</strong></td><td>双</td></tr><tr><td><code>hgroup</code></td><td>包裹连续的标题，如文章主标题、副标题的组合 （ W3C 将其删除）</td><td>双</td></tr></tbody></table><ul><li>主要使用<code>前6个</code></li><li>关于 <code>article</code> 和 <code>section</code> ：<ol><li><code>artical</code> 里面可以有多个 <code>section</code> 。</li><li><code>section</code> 强调的是分段或分块，如果你想将一块内容分成几段的时候，可使用 <code>section</code> 元素。</li><li><code>article</code> 比 <code>section</code> 更强调独立性，一块内容如果比较独立、比较完整，应该使用 <code>article</code> 元素。</li></ol></li></ul><h3 id="2-新增状态标签"><a href="#2-新增状态标签" class="headerlink" title="2. 新增状态标签"></a>2. 新增状态标签</h3><ol><li>meter标签<ol><li>语义：定义已知范围内的标量测量。也被称为 <code>gauge</code> （尺度），双标签，例如：电量、磁盘用量等。</li><li>常用属性：<table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td><code>high</code></td><td>数值</td><td>规定高值</td></tr><tr><td><code>low</code></td><td>数值</td><td>规定低值</td></tr><tr><td><code>max</code></td><td>数值</td><td>规定最大值</td></tr><tr><td><code>min</code></td><td>数值</td><td>规定最小值</td></tr><tr><td><code>optimum</code></td><td>数值</td><td>规定最优值</td></tr><tr><td><code>value</code></td><td>数值</td><td>规定当前值</td></tr></tbody></table></li></ol></li><li>progress标签<ol><li>语义：显示某个任务完成的进度的指示器，一般用于表示进度条，双标签，例如：工作完成进度等。</li><li>常用属性：<table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>max</td><td>数值</td><td>规定目标值</td></tr><tr><td>value</td><td>数值</td><td>规定当前值</td></tr></tbody></table></li></ol></li></ol><h3 id="3-新增列表标签"><a href="#3-新增列表标签" class="headerlink" title="3. 新增列表标签"></a>3. 新增列表标签</h3><table><thead><tr><th>标签名</th><th>语义</th><th>单&#x2F;双标签</th></tr></thead><tbody><tr><td>datalist</td><td>用于搜索框的关键字提示</td><td>双</td></tr><tr><td>details</td><td>用于展示问题和答案，或对专有名词进行解释</td><td>双</td></tr><tr><td>summary</td><td>写在 details 的里面，用于指定问题或专有名词</td><td>双</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">list</span>=<span class="string">&quot;mydata&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;mydata&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;周冬雨&quot;</span>&gt;</span>周冬雨<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;周杰伦&quot;</span>&gt;</span>周杰伦<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;温兆伦&quot;</span>&gt;</span>温兆伦<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;马冬梅&quot;</span>&gt;</span>马冬梅<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">summary</span>&gt;</span>如何走上人生巅峰？<span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>一步一步走呗<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-新增文本标签"><a href="#4-新增文本标签" class="headerlink" title="4. 新增文本标签"></a>4. 新增文本标签</h3><ol><li><p>文本注音</p><table><thead><tr><th>标签名</th><th>语义</th><th>单&#x2F;双标签</th></tr></thead><tbody><tr><td>ruby</td><td>包裹需要注音的文字</td><td>双</td></tr><tr><td>rt</td><td>写注音， rt 标签写在 ruby 的里面</td><td>双</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ruby</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>魑魅魍魉<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rt</span>&gt;</span>chī mèi wǎng liǎng <span class="tag">&lt;/<span class="name">rt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ruby</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>文本标记</p><table><thead><tr><th>标签名</th><th>语义</th><th>单&#x2F;双标签</th></tr></thead><tbody><tr><td>mark</td><td>标记</td><td>双</td></tr></tbody></table><blockquote><p>注意： W3C 建议 mark 用于标记搜索结果中的关键字。</p></blockquote></li></ol><h2 id="3-新增表单功能"><a href="#3-新增表单功能" class="headerlink" title="3. 新增表单功能"></a>3. 新增表单功能</h2><h3 id="1-表单控件新增属性"><a href="#1-表单控件新增属性" class="headerlink" title="1. 表单控件新增属性"></a>1. 表单控件新增属性</h3><table><thead><tr><th>属性名</th><th>功能</th></tr></thead><tbody><tr><td>placeholder</td><td>提示文字（注意：不是默认值， value 是默认值），适用于<code>文字输入类</code>的表单控件。</td></tr><tr><td>required</td><td>表示<code>该输入项必填</code>， 适用于<code>除按钮外其他表单控件</code>。</td></tr><tr><td>autofocus</td><td>自动获取焦点，适用于<code>所有表单控件</code>。</td></tr><tr><td>autocomplete</td><td>自动完成，可以设置为 <code>on</code> 或 <code>off</code> ，适用于<code>文字输入类的表单控件</code>。注意：密码输入框、多行输入框不可用。</td></tr><tr><td>pattern</td><td>填写<code>正则表达式</code>，适用于<code>文本输入类表单控件</code>。注意：多行输入不可用，且空的输入框不会验证，往往与 required 配合。</td></tr></tbody></table><h3 id="2-input-新增属性值"><a href="#2-input-新增属性值" class="headerlink" title="2. input 新增属性值"></a>2. input 新增属性值</h3><table><thead><tr><th>属性名</th><th>功能</th></tr></thead><tbody><tr><td><code>email</code></td><td>邮箱类型的输入框，表单提交时会验证格式，输入为空则不验证格式。</td></tr><tr><td><code>url</code></td><td>url 类型的输入框，表单提交时会验证格式，输入为空则不验证格式。</td></tr><tr><td><code>number</code></td><td>数字类型的输入框，表单提交时会验证格式，输入为空则不验证格式。有属性<code>step,max,min</code></td></tr><tr><td><code>search</code></td><td>搜索类型的输入框，表单提交时不会验证格式。</td></tr><tr><td><code>tel</code></td><td>电话类型的输入框，表单提交时不会验证格式，在<code>移动端</code>使用时，会唤起数字键盘。</td></tr><tr><td><code>range</code></td><td>范围选择框，默认值为 50 ，表单提交时不会验证格式。属性<code>max,min,value</code></td></tr><tr><td><code>color</code></td><td>颜色选择框，默认值为黑色，表单提交时不会验证格式。</td></tr><tr><td><code>date</code></td><td>日期选择框，默认值为空，表单提交时不会验证格式。</td></tr><tr><td><code>month</code></td><td>月份选择框，默认值为空，表单提交时不会验证格式。</td></tr><tr><td><code>week</code></td><td>周选择框，默认值为空，表单提交时不会验证格式。</td></tr><tr><td><code>time</code></td><td>时间选择框，默认值为空，表单提交时不会验证格式。</td></tr><tr><td><code>datetime-local</code></td><td>日期+时间选择框，默认值为空，表单提交时不会验证格式。</td></tr></tbody></table><h3 id="3-form-标签新增属性"><a href="#3-form-标签新增属性" class="headerlink" title="3. form 标签新增属性"></a>3. form 标签新增属性</h3><table><thead><tr><th>属性名</th><th>功能</th></tr></thead><tbody><tr><td>novalidate</td><td>如果给 form 标签设置了该属性，表单提交的时候<code>不再进行验证</code></td></tr></tbody></table><h2 id="4-新增多媒体标签"><a href="#4-新增多媒体标签" class="headerlink" title="4. 新增多媒体标签"></a>4. 新增多媒体标签</h2><h3 id="1-视频标签"><a href="#1-视频标签" class="headerlink" title="1.  视频标签"></a>1.  视频标签</h3><p><code>&lt;video&gt; </code>标签用来定义视频，它是双标签</p><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td><code>src</code></td><td>URL地址</td><td>视频地址</td></tr><tr><td><code>width</code></td><td>像素值</td><td>设置视频播放器的宽度</td></tr><tr><td><code>height</code></td><td>像素值</td><td>设置视频播放器的高度</td></tr><tr><td><code>controls</code></td><td>-</td><td>向用户显示视频控件（比如播放&#x2F;暂停按钮）</td></tr><tr><td><code>muted</code></td><td>-</td><td>视频静音</td></tr><tr><td><code>autoplay</code></td><td>-</td><td>视频自动播放,<code>必须静音</code></td></tr><tr><td><code>loop</code></td><td>-</td><td>循环播放</td></tr><tr><td><code>poster</code></td><td>URL地址</td><td>视频封面</td></tr><tr><td><code>preload</code></td><td>auto &#x2F; metadata &#x2F; none</td><td>视频预加载，如果使用 autoplay ，则忽略该属性</td></tr></tbody></table><ul><li>none : 不预加载视频。</li><li>metadata : 仅预先获取视频的元数据（例如长度）</li><li>auto : 可以下载整个视频文件，即使用户不希望使用它</li></ul><h3 id="2-音频标签"><a href="#2-音频标签" class="headerlink" title="2. 音频标签"></a>2. 音频标签</h3><p><code>&lt;audio&gt;</code> 标签用来定义音频，它是双标签。</p><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td><code>src</code></td><td>URL地址</td><td>音频地址</td></tr><tr><td><code>controls</code></td><td>-</td><td>向用户显示音频控件（比如播放&#x2F;暂停按钮）,<code>必须</code></td></tr><tr><td><code>autoplay</code></td><td>-</td><td>音频自动播放，<code>静音也不可以自动播放</code></td></tr><tr><td><code>muted</code></td><td>-</td><td>音频静音</td></tr><tr><td><code>loop</code></td><td>-</td><td>循环播放</td></tr><tr><td><code>preload</code></td><td>auto &#x2F; metadata &#x2F; none</td><td>音频预加载，如果使用 autoplay ，则忽略该属性。</td></tr></tbody></table><ul><li>none : 不预加载视频。</li><li>metadata : 仅预先获取视频的元数据（例如长度）。</li><li>auto : 可以下载整个视频文件，即使用户不希望使用它。</li></ul><h2 id="5-新增全局属性（了解）"><a href="#5-新增全局属性（了解）" class="headerlink" title="5. 新增全局属性（了解）"></a>5. 新增全局属性（了解）</h2><table><thead><tr><th>属性名</th><th>功能</th></tr></thead><tbody><tr><td><code>contenteditable</code></td><td>表示元素是否可被用户编辑，可选值如下：true ：可编辑;false ：不可编辑</td></tr><tr><td><code>draggable</code></td><td>表示元素可以被拖动，<code>配合js实现</code>；可选值如下：true ：可拖动;false ：不可拖动</td></tr><tr><td><code>hidden</code></td><td>隐藏元素</td></tr><tr><td><code>spellcheck</code></td><td>规定是否对元素进行拼写和语法检查，可选值如下：true ：检查;false ：不检查</td></tr><tr><td><code>contextmenu</code></td><td>规定元素的上下文菜单，在用户鼠标右键点击元素时显示。</td></tr><tr><td><code>data-*</code></td><td>用于存储页面的私有定制数据。</td></tr></tbody></table><h2 id="6-HTML5兼容性处理"><a href="#6-HTML5兼容性处理" class="headerlink" title="6. HTML5兼容性处理"></a>6. HTML5兼容性处理</h2><ol><li>添加元信息，让浏览器处于最优渲染模式。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--设置IE总是使用最新的文档模式进行渲染--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=Edge&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--优先使用 webkit ( Chromium ) 内核进行渲染, 针对360等壳浏览器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;renderer&quot;</span> <span class="attr">content</span>=<span class="string">&quot;webkit&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>使用 html5shiv 让低版本浏览器认识 H5 的语义化标签。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if lt ie 9]&gt;</span></span><br><span class="line"><span class="comment">&lt;script src=&quot;../sources/js/html5shiv.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure></li><li>扩展<blockquote><p>lt 小于<br>lte 小于等于<br>gt 大于<br>gte 大于等于<br>! 逻辑非</p></blockquote></li><li>示例：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if IE 8]&gt;仅IE8可见&lt;![endif]--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--[if gt IE 8]&gt;仅IE8以上可见&lt;![endif]—&gt;</span></span><br><span class="line"><span class="comment">&lt;!--[if lt IE 8]&gt;仅IE8以下可见&lt;![endif]—&gt;</span></span><br><span class="line"><span class="comment">&lt;!--[if gte IE 8]&gt;IE8及以上可见&lt;![endif]—&gt;</span></span><br><span class="line"><span class="comment">&lt;!--[if lte IE 8]&gt;IE8及以下可见&lt;![endif]—&gt;</span></span><br><span class="line"><span class="comment">&lt;!--[if !IE 8]&gt;非IE8的IE可见&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS-WebAPIs02</title>
      <link href="/2023/12/10/JS-WebAPIs02/"/>
      <url>/2023/12/10/JS-WebAPIs02/</url>
      
        <content type="html"><![CDATA[<h1 id="JS-WebAPIs02"><a href="#JS-WebAPIs02" class="headerlink" title="JS_WebAPIs02"></a>JS_WebAPIs02</h1><h2 id="1-事件监听"><a href="#1-事件监听" class="headerlink" title="1. 事件监听"></a>1. 事件监听</h2><h3 id="1-事件"><a href="#1-事件" class="headerlink" title="1. 事件"></a>1. 事件</h3><blockquote><p>事件是编程语言中的术语，它是用来描述程序的行为或状态的，<strong>一旦行为或状态发生改变，便立即调用一个函数。</strong><br>例如：用户使用【鼠标点击】网页中的一个按钮、用户使用【鼠标拖拽】网页中的一张图片</p></blockquote><h3 id="2-事件监听"><a href="#2-事件监听" class="headerlink" title="2. 事件监听"></a>2. 事件监听</h3><blockquote><p>就是让程序检测是否有事件产生，一旦有事件触发，就立即调用一个函数做出响应，也称为绑定事件或者注册事件</p></blockquote><ol><li>语法<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素对象.<span class="title function_">addEventListener</span>(<span class="string">&#x27;事件类型&#x27;</span>，要执行的函数)</span><br></pre></td></tr></table></figure><ul><li>事件类型要加引号</li><li><code>addEventListener</code> 是 DOM 对象专门用来添加事件监听的方法，它的两个参数分别为【事件类型】和【事件回调】</li></ul></li><li>事件监听三要素<ol><li>事件源： 哪个dom元素被事件触发了，要获取dom元素</li><li>事件类型： 用什么方式触发，比如鼠标单击 click、鼠标经过 mouseover 等</li><li>事件调用的函数： 要做什么事 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取 button 对应的 DOM 对象</span></span><br><span class="line"><span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;. btn&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 添加事件监听：</span></span><br><span class="line">btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;等待事件被触发...&#x27;</span>)</span><br><span class="line">  <span class="comment">// 改变 p 标签的文字颜色</span></span><br><span class="line">  <span class="keyword">let</span> text = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;text&#x27;</span>)</span><br><span class="line">  text.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 只要用户点击了按钮，事件便触发了！！！</span></span><br></pre></td></tr></table></figure><strong>完成事件监听分成3个步骤</strong></li><li>获取 DOM 元素</li><li>通过 <code>addEventListener</code> 方法为 DOM 节点添加事件监听</li><li>等待事件触发，如用户点击了某个按钮时便会触发 <code>click</code> 事件类型</li><li>事件触发后，相对应的回调函数会被执行</li><li>大白话描述：所谓的事件无非就是找个机会（事件触发）调用一个函数（回调函数）。</li></ol></li></ol><h2 id="2-事件类型"><a href="#2-事件类型" class="headerlink" title="2. 事件类型"></a>2. 事件类型</h2>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS_WebAPIs01</title>
      <link href="/2023/12/08/JS-WebAPIs01/"/>
      <url>/2023/12/08/JS-WebAPIs01/</url>
      
        <content type="html"><![CDATA[<h1 id="JS-WebAPIs01"><a href="#JS-WebAPIs01" class="headerlink" title="JS_WebAPIs01"></a>JS_WebAPIs01</h1><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><ul><li>变量声明<br><strong>const优先</strong><ul><li>语义化更好</li><li>许多变量不再修改</li><li>对于复杂数据类型可以使用const声明后再<code>追加/修改数据</code>（数组&#x2F;对象<code>地址未变化</code>，<code>仅添加/修改元素</code>;但是不能再重复初始化） -&gt; 数组、对象推荐使用const声明</li></ul></li></ul><h2 id="2-Web-API-基本认知"><a href="#2-Web-API-基本认知" class="headerlink" title="2. Web API 基本认知"></a>2. Web API 基本认知</h2><blockquote><p>严格意义上讲，我们在 JavaScript 阶段学习的知识绝大部分属于 ECMAScript 的知识体系，ECMAScript 简称 ES 它提供了<code>一套语言标准规范</code>，如变量、数据类型、表达式、语句、函数等语法规则都是由 ECMAScript 规定的。<br>浏览器将 ECMAScript 大部分的规范加以实现，并且在此基础上又<code>扩展一些实用的功能</code>，这些被扩展出来的内容我们称为<code> Web APIs</code>。</p></blockquote><h3 id="1-APIs的作用"><a href="#1-APIs的作用" class="headerlink" title="1. APIs的作用"></a>1. APIs的作用</h3><blockquote><p>使用JS操作html和浏览器</p></blockquote><h3 id="2-分类"><a href="#2-分类" class="headerlink" title="2. 分类"></a>2. 分类</h3><ol><li>DOM(文档对象模型)</li><li>BOM(浏览器对象模型)</li></ol><h3 id="3-DOM"><a href="#3-DOM" class="headerlink" title="3. DOM"></a>3. DOM</h3><blockquote><p>DOM（Document Object Model）是将整个 HTML 文档的每一个标签元素视为一个对象，这个对象下包含了许多的属性和方法，通过操作这些属性或者调用这些方法实现对 HTML 的动态更新，为实现网页特效以及用户交互提供技术支撑。<br>简言之 DOM 是用来动态<code>修改 HTML</code> 的，其目的是开发网页特效及用户交互。</p></blockquote><h3 id="4-DOM作用"><a href="#4-DOM作用" class="headerlink" title="4. DOM作用"></a>4. DOM作用</h3><ul><li>开发网页特效和实现用户交互</li></ul><h3 id="5-DOM树"><a href="#5-DOM树" class="headerlink" title="5. DOM树"></a>5. DOM树</h3><blockquote><p>将 HTML 文档以树状结构直观的表现出来，我们称之为文档树或 DOM 树，</p></blockquote><p><a href="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/posts_01/web-api.jpg">https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/posts_01/web-api.jpg</a></p><ul><li>作用：<strong>文档树直观的体现了标签与标签之间的关系。</strong></li></ul><h3 id="6-DOM节点"><a href="#6-DOM节点" class="headerlink" title="6. DOM节点"></a>6. DOM节点</h3><blockquote><p>节点是文档树的组成部分，<strong>每一个节点都是一个 DOM 对象</strong>，主要分为元素节点、属性节点、文本节点等。</p></blockquote><ol><li>【元素节点】其实就是 HTML 标签，如上图中 <code>head</code>、<code>div</code>、<code>body</code> 等都属于元素节点。</li><li>【属性节点】是指 HTML 标签中的属性，如上图中 <code>a</code> 标签的 <code>href</code> 属性、<code>div</code> 标签的 <code>class</code> 属性。</li><li>【文本节点】是指 HTML 标签的文字内容，如 <code>title</code> 标签中的文字。</li><li>【根节点】特指 <code>html</code> 标签。</li></ol><h3 id="7-DOM对象"><a href="#7-DOM对象" class="headerlink" title="7. DOM对象"></a>7. DOM对象</h3><blockquote><p>浏览器根据html标签生成的JS对象!</p></blockquote><ol><li>所有的标签属性都可以在这个对象上面找到</li><li>修改这个对象的属性会自动映射到标签身上</li><li>DOM的<strong>核心思想</strong>:把<code>网页内容</code>当做<code>对象</code>来处理</li></ol><h3 id="8-document-对象"><a href="#8-document-对象" class="headerlink" title="8. document 对象"></a>8. document 对象</h3><blockquote><p><code>document</code> 是 JavaScript 内置的专门用于 DOM 的对象，该对象包含了若干的属性和方法，<code>document</code> 是学习 DOM 的核心。</p></blockquote><ol><li>是 DOM 里提供的一个对象</li><li>所以它提供的属性和方法都是用来访问和操作网页内容</li><li>例：document.write()</li><li>网页所有内容都在document里面</li><li>任意 DOM 对象都包含 nodeType 属性，用来检检测节点类型<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// document 是内置的对象</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(typeof document);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 1. 通过 document 获取根节点</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>.<span class="property">documentElement</span>); <span class="comment">// 对应 html 标签</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 2. 通过 document 节取 body 节点</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>.<span class="property">body</span>); <span class="comment">// 对应 body 标签</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 3. 通过 document.write 方法向网页输出内容</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;Hello World!&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="3-获取DOM对象"><a href="#3-获取DOM对象" class="headerlink" title="3. 获取DOM对象"></a>3. 获取DOM对象</h2><blockquote><p>查找元素DOM元素就是利用 JS 选择页面中标签元素</p></blockquote><h3 id="根据CSS选择器来获取DOM元素"><a href="#根据CSS选择器来获取DOM元素" class="headerlink" title="根据CSS选择器来获取DOM元素"></a>根据CSS选择器来获取DOM元素</h3><h3 id="1-选择匹配的第一个元素"><a href="#1-选择匹配的第一个元素" class="headerlink" title="1. 选择匹配的第一个元素"></a>1. 选择匹配的第一个元素</h3><ol><li>语法<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelecter</span>(<span class="string">&#x27;css选择器&#x27;</span>)</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelecter</span>(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelecter</span>(<span class="string">&#x27;.class&#x27;</span>)</span><br><span class="line"><span class="comment">// 可以修改元素</span></span><br><span class="line">div.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span><br></pre></td></tr></table></figure><ol><li>参数:</li></ol><ul><li>包含一个或多个有效的CSS选择器<code>字符串</code> -&gt; 必须加引号</li></ul><ol start="2"><li>返回值：</li></ol><ul><li>CSS选择器匹配的第一个元素,一个<code>HTMLElement对象</code>。</li><li>如果没有匹配到，则返回<code>null</code></li></ul></li></ol><h3 id="2-选择匹配的多个元素"><a href="#2-选择匹配的多个元素" class="headerlink" title="2. 选择匹配的多个元素"></a>2. 选择匹配的多个元素</h3><ol><li>语法<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelecterAll</span>(<span class="string">&#x27;css选择器&#x27;</span>)</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelecterAll</span>(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelecterAll</span>(<span class="string">&#x27;.class&#x27;</span>)</span><br><span class="line"><span class="comment">// 不能直接修改</span></span><br></pre></td></tr></table></figure></li><li>参数:</li></ol><ul><li>包含一个或多个有效的CSS选择器<code>字符串</code> -&gt; 必须加引号</li></ul><ol start="3"><li>返回值：</li></ol><ul><li>CSS选择器匹配的<code>NodeList对象集合</code></li></ul><ol start="4"><li>得到的是<code>伪数组</code>:<ol><li>有长度有索引号的数组</li><li>但是没有 pop() push() 等数组方法</li><li>想要得到里面的每一个对象，则需要遍历（for）的方式获得。</li><li>哪怕只有一个元素，通过querySelectAll() 获取过来的也是一个伪数组，里面只有一个元素而已</li></ol></li></ol><h3 id="3-其他方式获取"><a href="#3-其他方式获取" class="headerlink" title="3. 其他方式获取"></a>3. 其他方式获取</h3><ol><li><code>getElementById(&#39;nav&#39;)</code></li><li><code>getElementsByTagName(div)</code></li><li><code>getElementsByClassName(&#39;w&#39;)</code></li></ol><h2 id="4-操作元素内容"><a href="#4-操作元素内容" class="headerlink" title="4. 操作元素内容"></a>4. 操作元素内容</h2><h3 id="1-对象innerText属性"><a href="#1-对象innerText属性" class="headerlink" title="1. 对象innerText属性"></a>1. 对象innerText属性</h3><blockquote><p><code>innerText</code> 将文本内容添加&#x2F;更新到任意标签位置<br><strong>文本中包含的标签不会被解析：</strong>拿到的是文本，如果文本里面有&lt;&gt;尖括号，不会把&lt;&gt;尖括号当成html元素解析</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// innerText 将文本内容添加/更新到任意标签位置</span></span><br><span class="line"><span class="keyword">const</span> intro = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.intro&#x27;</span>)</span><br><span class="line">intro.<span class="property">innerText</span> = <span class="string">&#x27;嗨~ 我叫李雷！&#x27;</span> <span class="comment">// 修改</span></span><br></pre></td></tr></table></figure><h3 id="2-对象innerHTML属性"><a href="#2-对象innerHTML属性" class="headerlink" title="2. 对象innerHTML属性"></a>2. 对象innerHTML属性</h3><blockquote><p><code>innerHTML</code> 将文本内容添加&#x2F;更新到任意标签位置<br><strong>文本中包含的标签会被解析：</strong>拿到的是文本，如果文本里面有&lt;&gt;尖括号，会把&lt;&gt;尖括号当成html元素解析</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// innerHTML 将文本内容添加/更新到任意标签位置</span></span><br><span class="line"><span class="keyword">const</span> intro = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.intro&#x27;</span>)</span><br><span class="line">intro.<span class="property">innerHTML</span> = <span class="string">&#x27;&lt;h4&gt;嗨~ 我叫韩梅梅！&lt;/h4&gt;&#x27;</span> <span class="comment">// 修改</span></span><br></pre></td></tr></table></figure><h3 id="3-对比"><a href="#3-对比" class="headerlink" title="3. 对比"></a>3. 对比</h3><p>innerHTML和innerText获取到的都是文本，唯一的区别就是如果文本中有&lt;&gt;尖括号，innerText不会把&lt;&gt;尖括号当成html元素解析，而innerHTML会把&lt;&gt;尖括号当成html元素解析</p><h2 id="5-操作元素属性"><a href="#5-操作元素属性" class="headerlink" title="5. 操作元素属性"></a>5. 操作元素属性</h2><h3 id="1-操作常用属性"><a href="#1-操作常用属性" class="headerlink" title="1. 操作常用属性"></a>1. 操作常用属性</h3><blockquote><p>还可以通过 JS 设置&#x2F;修改标签元素属性</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 1. 获取 img 对应的 DOM 元素</span></span><br><span class="line"> <span class="keyword">const</span> pic = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.pic&#x27;</span>)</span><br><span class="line"><span class="comment">// 2. 修改属性</span></span><br><span class="line"> pic.<span class="property">src</span> = <span class="string">&#x27;./images/lion.webp&#x27;</span></span><br><span class="line"> pic.<span class="property">width</span> = <span class="number">400</span>;</span><br><span class="line"> pic.<span class="property">alt</span> = <span class="string">&#x27;图片不见了...&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>生成为行内样式表，权重较高</li></ul><h3 id="2-操作样式属性"><a href="#2-操作样式属性" class="headerlink" title="2. 操作样式属性"></a>2. 操作样式属性</h3><blockquote><p>通过 JS 设置&#x2F;修改标签元素的样式属性</p></blockquote><ol><li><p>通过 style 属性操作CSS</p><blockquote><p>通过元素节点获得的 <code>style</code> 属性本身的数据类型也是对象，如 <code>box.style.color</code>、<code>box.style.width</code> 分别用来获取元素节点 CSS 样式的 <code>color</code> 和 <code>width</code> 的值。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对象.style.样式属性 = &#x27;值&#x27;(字符串加引号；带上单位)</span></span><br><span class="line">box.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&#x27;10px&#x27;</span></span><br><span class="line"><span class="comment">// 多组单词使用小驼峰命名法</span></span><br><span class="line">box.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;red&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>操作类名(className) 操作CSS</p><blockquote><p>如果修改的样式比较多，直接通过style属性修改比较繁琐，我们可以通过借助于css类名的形式。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取 DOM 节点</span></span><br><span class="line"><span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.intro&#x27;</span>)</span><br><span class="line">box.<span class="property">className</span> = <span class="string">&#x27;active&#x27;</span></span><br><span class="line">box.<span class="property">className</span> = <span class="string">&#x27;inital active&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>由于class是关键字, 所以使用className去代替</p></li><li><p>className是使用新值换旧值, 如果需要添加一个类,需要保留之前的类名</p></li><li><p>已经有类名将进行覆盖</p></li><li><p>通过 classList 操作类控制CSS</p><blockquote><p>为了解决className <code>容易覆盖以前的类名</code>，我们可以通过<code>classList</code>方式追加和删除类名</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.获取元素</span></span><br><span class="line"><span class="keyword">let</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line"><span class="comment">// 2. add()是方法，添加类</span></span><br><span class="line">box.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;active&#x27;</span>)</span><br><span class="line"><span class="comment">// 3. remove()，移除类</span></span><br><span class="line">box.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;one&#x27;</span>)</span><br><span class="line"><span class="comment">// 4. toggle()，切换类：有就删掉，没有就加上</span></span><br><span class="line">box.<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&#x27;one&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-操作表单元素属性"><a href="#3-操作表单元素属性" class="headerlink" title="3. 操作表单元素属性"></a>3. 操作表单元素属性</h3><blockquote><p>表单很多情况，也需要修改属性，比如点击眼睛，可以看到密码，本质是把表单类型转换为文本框<br>正常的有属性有取值的跟其他的标签属性没有任何区别</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取元素</span></span><br><span class="line">  <span class="keyword">let</span> input = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>)</span><br><span class="line">  <span class="comment">// 2. 取值：DOM对象.属性名</span></span><br><span class="line">  <span class="comment">// 得到input里面的值可以用value</span></span><br><span class="line">  <span class="comment">// console.log(input.value)</span></span><br><span class="line">  <span class="comment">// 3. 设置值：DOM对象.属性名= 新值</span></span><br><span class="line">  input.<span class="property">value</span> = <span class="string">&#x27;小米手机&#x27;</span></span><br><span class="line">  input.<span class="property">type</span> = <span class="string">&#x27;password&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2. 启用按钮</span></span><br><span class="line">  <span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span><br><span class="line">  <span class="comment">// disabled 不可用   =  false  这样可以让按钮启用</span></span><br><span class="line">  btn.<span class="property">disabled</span> = <span class="literal">false</span></span><br><span class="line">  <span class="comment">// 3. 勾选复选框</span></span><br><span class="line">  <span class="keyword">let</span> checkbox = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;inpput&#x27;</span>)</span><br><span class="line">  checkbox.<span class="property">checked</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="4-自定义属性"><a href="#4-自定义属性" class="headerlink" title="4. 自定义属性"></a>4. 自定义属性</h3><ol><li>标准属性: <blockquote><p>标签天生自带的属性 比如class id title等, 可以直接使用点语法操作比如： disabled、checked、selected</p></blockquote></li><li>自定义属性<blockquote><p>在html5中推出来了专门的<code>data-自定义属性</code>  </p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 在标签上一律以data-开头 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-id</span>=<span class="string">&quot;1&quot;</span>&gt;</span> 自定义属性 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 1. 获取元素</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 2. 获取自定义属性值:在DOM对象上一律以dataset对象方式获取</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">dataset</span>.<span class="property">id</span>)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="5-间歇函数"><a href="#5-间歇函数" class="headerlink" title="5. 间歇函数"></a>5. 间歇函数</h3><blockquote><p><code>setInterval</code> 是 JavaScript 中内置的函数，它的作用是间隔固定的时间自动重复执行另一个函数，也叫定时器函数。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 定义一个普通函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">repeat</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;不知疲倦的执行下去....&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 使用 setInterval 调用 repeat 函数</span></span><br><span class="line"><span class="comment">// 间隔 1000 毫秒ms，重复调用 repeat函数</span></span><br><span class="line"><span class="built_in">setInterval</span>(repeat, <span class="number">1000</span>)</span><br><span class="line"><span class="comment">// 注意函数不要加括号</span></span><br><span class="line"><span class="comment">// 定时器返回的是一个id数字</span></span><br><span class="line"><span class="comment">// 3. 关闭定时器</span></span><br><span class="line"><span class="keyword">let</span> n = <span class="built_in">setInterval</span>(repeat, <span class="number">1000</span>)</span><br><span class="line"><span class="built_in">clearInterval</span>(n)</span><br></pre></td></tr></table></figure><h3 id="6-定时轮播图"><a href="#6-定时轮播图" class="headerlink" title="6. 定时轮播图"></a>6. 定时轮播图</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>轮播图点击切换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    * &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.slider</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">560px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.slider-wrapper</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">320px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.slider-wrapper</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.slider-footer</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">100</span>, <span class="number">67</span>, <span class="number">68</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">12px</span> <span class="number">0</span> <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.slider-footer</span> <span class="selector-class">.toggle</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">top</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.slider-footer</span> <span class="selector-class">.toggle</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin-right</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">28px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">28px</span>;</span></span><br><span class="line"><span class="language-css">      appearance: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.slider-footer</span> <span class="selector-class">.toggle</span> <span class="selector-tag">button</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.slider-footer</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.slider-indicator</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.slider-indicator</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">opacity</span>: <span class="number">0.4</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.slider-indicator</span> <span class="selector-tag">li</span><span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">opacity</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider-wrapper&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/slider01.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider-footer&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>对人类来说会不会太超前了？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;slider-indicator&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;toggle&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 初始数据</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> sliderData = [</span></span><br><span class="line"><span class="language-javascript">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider01.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;对人类来说会不会太超前了？&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(100, 67, 68)&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider02.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;开启剑与雪的黑暗传说！&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(43, 35, 26)&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider03.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;真正的jo厨出现了！&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(36, 31, 33)&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider04.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;李玉刚：让世界通过B站看到东方大国文化&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(139, 98, 66)&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider05.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;快来分享你的寒假日常吧~&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(67, 90, 92)&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider06.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;哔哩哔哩小年YEAH&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(166, 131, 143)&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider07.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;一站式解决你的电脑配置问题！！！&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(53, 29, 25)&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider08.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;谁不想和小猫咪贴贴呢！&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(99, 72, 114)&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">    ]</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 获取元素 </span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> img = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider-wrapper img&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider-footer p&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> i = <span class="number">0</span>  <span class="comment">// 信号量 控制图片的张数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 开启定时器</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(sliderData[i])  拿到对应的对象啦</span></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      i++</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 无缝衔接位置  一共八张图片，到了最后一张就是 8， 数组的长度就是 8</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (i &gt;= sliderData.<span class="property">length</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        i = <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// console.log(i)</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// console.log(sliderData[i])</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 更换图片路径  </span></span></span><br><span class="line"><span class="language-javascript">      img.<span class="property">src</span> = sliderData[i].<span class="property">url</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 把字写到 p里面</span></span></span><br><span class="line"><span class="language-javascript">      p.<span class="property">innerHTML</span> = sliderData[i].<span class="property">title</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 小圆点</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 先删除以前的active</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider-indicator .active&#x27;</span>).<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;active&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 只让当前li添加active</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">`.slider-indicator li:nth-child(<span class="subst">$&#123;i + <span class="number">1</span>&#125;</span>)`</span>).<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;active&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS基础03</title>
      <link href="/2023/12/06/JS%E5%9F%BA%E7%A1%8003/"/>
      <url>/2023/12/06/JS%E5%9F%BA%E7%A1%8003/</url>
      
        <content type="html"><![CDATA[<h1 id="JS基础03"><a href="#JS基础03" class="headerlink" title="JS基础03"></a>JS基础03</h1><h2 id="1-函数"><a href="#1-函数" class="headerlink" title="1. 函数"></a>1. 函数</h2><blockquote><p>执行特定任务的代码块，有利于精简代码方便复用</p></blockquote><h3 id="1-初始化"><a href="#1-初始化" class="headerlink" title="1. 初始化"></a>1. 初始化</h3><blockquote><p>声明（定义）一个完整函数包括<code>关键字、函数名、形式参数、函数体、返回值</code>5个部分</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// 函数体</span></span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>函数名命名规范:<ol><li>和变量命名基本一致</li><li>小驼峰式命名法</li><li>前缀建议为动词</li></ol></li><li>参数<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">参数<span class="number">1</span>，参数n</span>)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>设置默认值<code>function fuc(x = 0，y = 0)</code></li><li>传递多余参数会被忽略</li><li>默认值为<code>undefined</code></li></ol></li><li>返回值<ol><li><code>return</code></li><li>默认返回<code>undefined</code></li><li>直接结束函数</li></ol></li></ol><h3 id="2-调用"><a href="#2-调用" class="headerlink" title="2. 调用"></a>2. 调用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fn</span>()</span><br><span class="line"><span class="comment">// 函数名()</span></span><br></pre></td></tr></table></figure><h3 id="3-作用域"><a href="#3-作用域" class="headerlink" title="3. 作用域"></a>3. 作用域</h3><blockquote><p>一段程序代码中所用到的名字并不总是有效和可用的，而限定这个名字的可用性的代码范围就是这个名字的<code>作用域</code>。作用域的使用提高了程序逻辑的<code>局部性</code>，增强了程序的<code>可靠性</code>，减少了<code>名字冲突</code>。</p></blockquote><ol><li>全局变量，全局作用域</li><li>局部变量，局部作用域</li><li>如果函数内部，变量没有声明，直接赋值，也当全局变量看，但是<code>强烈不推荐</code></li><li>访问原则：在能够访问到的情况下,先局部，局部没有在找全局（就近原则）</li></ol><h3 id="4-匿名函数"><a href="#4-匿名函数" class="headerlink" title="4. 匿名函数"></a>4. 匿名函数</h3><ol><li>函数表达式<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fn = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fn</span>()</span><br></pre></td></tr></table></figure><ul><li>与具名函数的区别：必须<code>先声明再调用</code></li></ul></li><li>立即执行<ul><li>避免变量污染<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多个立即执行函数必须加分号结束</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一种</span></span><br><span class="line">(<span class="keyword">function</span>(<span class="params">x,y</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(x+y)</span><br><span class="line">&#125; )(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二种</span></span><br><span class="line">(<span class="keyword">function</span>(<span class="params">x,y</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(x+y)</span><br><span class="line">&#125; (<span class="number">1</span>,<span class="number">2</span>));</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="5-逻辑中断"><a href="#5-逻辑中断" class="headerlink" title="5. 逻辑中断"></a>5. 逻辑中断</h3><ul><li><p>类似参数的默认写法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">x,y</span>)&#123;</span><br><span class="line">  x=x||<span class="number">0</span></span><br><span class="line">  y=y||<span class="number">0</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(x+y)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure></li><li><p>短路：只存在于 &amp;&amp; 和 || 中，当满足一定条件会让右边代码不执行</p><table><thead><tr><th>符号</th><th>短路条件</th></tr></thead><tbody><tr><td><code>&amp;&amp;</code></td><td>左边为<code>false</code>就短路</td></tr><tr><td><code>||</code></td><td>左边为<code>true</code>就短路</td></tr></tbody></table></li><li><p>运算结果：无论 &amp;&amp; 还是 || ，运算结果都是最后被执行的表达式值，一般用在变量赋值</p></li></ul><h3 id="6-转换为布尔型"><a href="#6-转换为布尔型" class="headerlink" title="6. 转换为布尔型"></a>6. 转换为布尔型</h3><ol><li>Boolean(内容)显示转换：</li></ol><ul><li>‘’、0、undefined、null、false、NaN 转换为布尔值后都是false, 其余则为 true</li></ul><ol start="2"><li>隐式转换：<ol><li>有字符串的加法 “” + 1 ，结果是 “1”</li><li>减法 - （像大多数数学运算一样）只能用于数字，它会使空字符串 “” 转换为 0</li><li>null 经过数字转换之后会变为 0</li><li>undefined 经过数字转换之后会变为 NaN</li></ol></li></ol><h2 id="2-对象"><a href="#2-对象" class="headerlink" title="2. 对象"></a>2. 对象</h2><blockquote><p>对象是 JavaScript <code>数据类型</code>的一种，之前已经学习了数值类型、字符串类型、布尔类型、undefined。对象数据类型可以被理解成是一种<code>无序的</code>数据集合。它由<code>属性</code>和<code>方法</code>两部分构成。</p></blockquote><h3 id="1-初始化-1"><a href="#1-初始化-1" class="headerlink" title="1. 初始化"></a>1. 初始化</h3><ol><li>声明<blockquote><p>声明一个对象类型的变量与之前声明一个数值或字符串类型的变量没有本质上的区别。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;&#125;</span><br></pre></td></tr></table></figure></li><li>赋值（属性）<blockquote><p>数据描述性的信息称为属性，如人的姓名、身高、年龄、性别等，一般是<code>名词性</code>的。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>, <span class="comment">// 描述人的姓名</span></span><br><span class="line">  <span class="attr">age</span>: <span class="number">18</span>, <span class="comment">// 描述人的年龄</span></span><br><span class="line">  <span class="attr">stature</span>: <span class="number">185</span>, <span class="comment">// 描述人的身高</span></span><br><span class="line">  <span class="attr">gender</span>: <span class="string">&#x27;男&#x27;</span>, <span class="comment">// 描述人的性别</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>属性都是成 对出现的，包括<code>属性名</code>和<code>值</code>，它们之间使用英文 <code>:</code> 分隔</li><li>多个属性之间使用英文 <code>,</code> 分隔</li><li>属性就是依附在对象上的变量</li><li>属性名可以使用 <code>&quot;&quot;</code> 或 <code>&#39;&#39;</code>，一般情况下省略，除非名称遇到特殊符号如空格、中横线等</li></ol></li></ol><h3 id="2-增删改查"><a href="#2-增删改查" class="headerlink" title="2. 增删改查"></a>2. 增删改查</h3><ol><li>访问<blockquote><p>声明对象，并添加了若干属性后，可以使用 <code>.</code> 或 <code>[]</code> 获得对象中属性对应的值，我称之为属性访问。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 对象名.属性名</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="property">name</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 对象名[&#x27;属性名&#x27;]，可以应对属性名为字符串的特殊情况</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person[<span class="string">&#x27;stature&#x27;</span>])</span><br></pre></td></tr></table></figure></li><li>修改<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">person.<span class="property">gender</span> = <span class="string">&#x27;男&#x27;</span></span><br></pre></td></tr></table></figure></li><li>增加<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">person.<span class="property">hobby</span> = <span class="string">&#x27;tennis&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>增加与修改类似，有属性即改，无属性即增加</li></ul><ol start="4"><li>删除（了解）<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> person.<span class="property">hobby</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="3-方法和调用"><a href="#3-方法和调用" class="headerlink" title="3. 方法和调用"></a>3. 方法和调用</h3><blockquote><p>数据行为性的信息称为方法，如跑步、唱歌等，一般是动词性的，其本质是函数。</p></blockquote><ol><li>定义<ol><li>方法是由方法名和函数两部分构成，它们之间使用 : 分隔</li><li>多个属性之间使用英文 <code>,</code> 分隔</li><li>方法是依附在对象中的函数</li><li>方法名可以使用 <code>&quot;&quot;</code> 或 <code>&#39;&#39;</code>，一般情况下省略，除非名称遇到特殊符号如空格、中横线等<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法是依附在对象上的函数</span></span><br><span class="line">    <span class="keyword">let</span> person = &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;小红&#x27;</span>,</span><br><span class="line">      <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">      <span class="comment">// 方法是由方法名和函数两部分构成，它们之间使用 : 分隔</span></span><br><span class="line">      <span class="attr">run</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我跑的非常快...&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ol></li><li>调用<blockquote><p>声明对象，并添加了若干方法后，可以使用 <code>.</code> 或 <code>[]</code> 调用对象中函数，我称之为方法调用。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">person.<span class="title function_">run</span>()</span><br></pre></td></tr></table></figure></li><li>动态添加方法<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明一个空的对象（没有任何属性，也没有任何方法）</span></span><br><span class="line"><span class="keyword">let</span> user = &#123;&#125;</span><br><span class="line"><span class="comment">// 动态追加属性</span></span><br><span class="line">user.<span class="property">name</span> = <span class="string">&#x27;小明&#x27;</span></span><br><span class="line">user.[<span class="string">&#x27;age&#x27;</span>] = <span class="number">18</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态添加方法</span></span><br><span class="line">user.<span class="property">move</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;移动一点距离...&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>注：无论是属性或是方法，同一个对象中出现名称一样的，后面的会覆盖前面的。</strong></li><li>null<blockquote><p>null 也是 JavaScript 中数据类型的一种，通常只用它来表示不存在的对象。使用 typeof 检测类型它的类型时，结果为 <code>object</code>。</p></blockquote></li></ol><h3 id="4-遍历对象"><a href="#4-遍历对象" class="headerlink" title="4. 遍历对象"></a>4. 遍历对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">uname</span>: <span class="string">&#x27;pink&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> k <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="comment">// k为属性名（字符串！）,即k ===&#x27;uname&#x27;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(k) </span><br><span class="line">    <span class="comment">// obj[k]为属性值，不能使用person.k</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(person[k])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>for in </code>不提倡遍历数组，因为k是<code>字符串</code></li></ul><h3 id="5-内置对象"><a href="#5-内置对象" class="headerlink" title="5. 内置对象"></a>5. 内置对象</h3><blockquote><p>曾经使用过的 <code>console.log</code>，<code>console</code>其实就是 JavaScript 中内置的对象，该对象中存在一个方法叫 <code>log</code>，然后调用 <code>log</code> 这个方法，即 <code>console.log()</code>。除了 <code>console</code> 对象外，JavaScritp 还有其它的内置的对象</p></blockquote><p><strong>Math内置对象</strong></p><blockquote><p><code>Math</code> 是 JavaScript 中内置的对象，称为数学对象，这个对象下即包含了属性，也包含了许多的方法。</p></blockquote><ol><li>属性</li></ol><ul><li>Math.PI，获取圆周率<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 圆周率</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="property">PI</span>);</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>方法</li></ol><ul><li><p>Math.ceil，数字向上取整</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 舍弃小数部分，整数部分加1</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">3.4</span>) <span class="comment">//4</span></span><br></pre></td></tr></table></figure></li><li><p>Math.floor，数字向下取整</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 舍弃小数部分，整数部分不变</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">4.68</span>) <span class="comment">//4</span></span><br></pre></td></tr></table></figure></li><li><p>Math.round，四舍五入取整</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 取整，四舍五入原则</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="number">20.49</span>) <span class="comment">//20</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="number">20.5</span>) <span class="comment">//21</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">round</span>(-<span class="number">20.5</span>) <span class="comment">//-20</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">round</span>(-<span class="number">20.51</span>) <span class="comment">//-21</span></span><br><span class="line"><span class="comment">// 方便记忆：五舍五入</span></span><br></pre></td></tr></table></figure></li><li><p>Math.max，在一组数中找出最大的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 找出最大值</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">10</span>, <span class="number">21</span>, <span class="number">7</span>, <span class="number">24</span>, <span class="number">13</span>)</span><br></pre></td></tr></table></figure></li><li><p>Math.min，在一组数中找出最小的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 找出最小值</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="number">24</span>, <span class="number">18</span>, <span class="number">6</span>, <span class="number">19</span>, <span class="number">21</span>)</span><br></pre></td></tr></table></figure></li><li><p>Math.pow，幂方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 求某个数的多少次方</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">4</span>, <span class="number">2</span>) <span class="comment">// 求 4 的 2 次方</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>, <span class="number">3</span>) <span class="comment">// 求 2 的 3 次方</span></span><br></pre></td></tr></table></figure></li><li><p>Math.sqrt，平方根</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 求某数的平方根</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">sqrt</span>(<span class="number">16</span>)</span><br></pre></td></tr></table></figure></li><li><p>Math.abs，绝对值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 求某数的绝对值</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">abs</span>(-<span class="number">10</span>)</span><br></pre></td></tr></table></figure></li><li><p>Math.random，生成 0 到 1 间的随机数<code>[0,1)</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 0 ~ 1 之间的随机数, 包含 0 不包含 1</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">random</span>()</span><br><span class="line"><span class="comment">// 0 ~ 10之间的整数</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*(<span class="number">10</span> + <span class="number">1</span>))</span><br><span class="line"><span class="comment">// 随机数组元素</span></span><br><span class="line"><span class="keyword">let</span> = arr[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> num = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*arr.<span class="property">length</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[num])</span><br><span class="line"><span class="comment">// N-M之间的随机数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getRandom</span>(<span class="params">N,M</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*(M - N + <span class="number">1</span>)) + N</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>官方文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math</a></p></li></ul><ol start="3"><li>随机颜色<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getRandomColor</span>(<span class="params">c = <span class="number">0</span></span>) &#123;</span><br><span class="line">  <span class="comment">// 0为rgb,1为16进制</span></span><br><span class="line">  <span class="keyword">if</span> (c == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> r = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">256</span>)</span><br><span class="line">    <span class="keyword">let</span> g = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">256</span>)</span><br><span class="line">    <span class="keyword">let</span> b = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">256</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`rgb(<span class="subst">$&#123;r&#125;</span>,<span class="subst">$&#123;g&#125;</span>,<span class="subst">$&#123;b&#125;</span>)`</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">&#x27;#&#x27;</span></span><br><span class="line">    <span class="keyword">let</span> arr = [<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">let</span> random = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * arr.<span class="property">length</span>)</span><br><span class="line">      str = str + arr[random]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getRandomColor</span>(<span class="number">0</span>))</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS基础02</title>
      <link href="/2023/12/05/JS%E5%9F%BA%E7%A1%8002/"/>
      <url>/2023/12/05/JS%E5%9F%BA%E7%A1%8002/</url>
      
        <content type="html"><![CDATA[<h1 id="JS基础02"><a href="#JS基础02" class="headerlink" title="JS基础02"></a>JS基础02</h1><h2 id="1-运算符"><a href="#1-运算符" class="headerlink" title="1. 运算符"></a>1. 运算符</h2><h3 id="1-算数运算符"><a href="#1-算数运算符" class="headerlink" title="1.算数运算符"></a>1.算数运算符</h3><ul><li>加减乘除模</li></ul><h3 id="2-赋值运算符"><a href="#2-赋值运算符" class="headerlink" title="2. 赋值运算符"></a>2. 赋值运算符</h3><ol><li><code>=</code>：将等号右边的值赋予给左边, 要求左边必须是一个容器</li><li>加值再赋给自己<table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>+&#x3D;</td><td>加法赋值</td></tr><tr><td>-+</td><td>减法赋值</td></tr><tr><td>*&#x3D;</td><td>乘法赋值</td></tr><tr><td>&#x2F;&#x3D;</td><td>除法赋值</td></tr><tr><td>%&#x3D;</td><td>取余赋值</td></tr></tbody></table></li></ol><h3 id="3-自增-x2F-自减运算符"><a href="#3-自增-x2F-自减运算符" class="headerlink" title="3. 自增&#x2F;自减运算符"></a>3. 自增&#x2F;自减运算符</h3><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>++</td><td>自增</td><td>变量自身的值加1，例如: x++</td></tr><tr><td>–</td><td>自减</td><td>变量自身的值减1，例如: x–</td></tr></tbody></table><ul><li>有前置和后置</li></ul><h3 id="4-比较运算符"><a href="#4-比较运算符" class="headerlink" title="4. 比较运算符"></a>4. 比较运算符</h3><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>&gt;</td><td>左边是否大于右边</td></tr><tr><td>&lt;</td><td>左边是否小于右边</td></tr><tr><td>&gt;&#x3D;</td><td>左边是否大于或等于右边</td></tr><tr><td>&lt;&#x3D;</td><td>左边是否小于或等于右边</td></tr><tr><td>&#x3D;&#x3D;&#x3D;</td><td>左右两边是否<code>类型</code>和<code>值</code>都相等（重点）</td></tr><tr><td>&#x3D;&#x3D;</td><td>左右两边<code>值</code>是否相等</td></tr><tr><td>!&#x3D;</td><td>左右值不相等</td></tr><tr><td>!&#x3D;&#x3D;</td><td>左右两边是否不全等</td></tr></tbody></table><ul><li>字符串比较：按照ASCII码值；多个字符串挨个比较</li></ul><h3 id="5-逻辑运算符"><a href="#5-逻辑运算符" class="headerlink" title="5. 逻辑运算符"></a>5. 逻辑运算符</h3><table><thead><tr><th>符号</th><th>名称</th><th>日常读法</th><th>特点</th><th>口诀</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>逻辑与</td><td>并且</td><td>符号两边有一个假的结果为假</td><td>一假则假</td></tr><tr><td>||</td><td>逻辑或</td><td>或者</td><td>符号两边有一个真的结果为真</td><td>一真则真</td></tr><tr><td>!</td><td>逻辑非</td><td>取反</td><td>true变false  false变true</td><td>真变假，假变真</td></tr></tbody></table><table><thead><tr><th>A</th><th>B</th><th>A &amp;&amp; B</th><th>A || B</th><th>!A</th></tr></thead><tbody><tr><td>false</td><td>false</td><td>false</td><td>false</td><td>true</td></tr><tr><td>false</td><td>true</td><td>false</td><td>true</td><td>true</td></tr><tr><td>true</td><td>false</td><td>false</td><td>true</td><td>false</td></tr><tr><td>true</td><td>true</td><td>true</td><td>true</td><td>false</td></tr></tbody></table><h3 id="6-运算符优先级"><a href="#6-运算符优先级" class="headerlink" title="6. 运算符优先级"></a>6. 运算符优先级</h3><ol><li>逻辑运算符优先级： ！&gt; &amp;&amp; &gt;  ||  </li><li>参考网站：<a href="https://www.w3school.com.cn/js/js_precedence.asp">https://www.w3school.com.cn/js/js_precedence.asp</a></li></ol><h2 id="2-语句"><a href="#2-语句" class="headerlink" title="2. 语句"></a>2. 语句</h2><h3 id="1-语句与表达式"><a href="#1-语句与表达式" class="headerlink" title="1. 语句与表达式"></a>1. 语句与表达式</h3><ol><li>表达式：因为表达式可被求值，所以它可以写在赋值语句的右侧。<code>num = 3 + 4</code></li><li>语句：语句不一定有值，比如 <code>alert()</code>、<code>for</code>、<code>console.log()</code>和<code>break</code> 等</li></ol><h3 id="2-分支语句"><a href="#2-分支语句" class="headerlink" title="2. 分支语句"></a>2. 分支语句</h3><ol><li>if分支语句<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件表达式) &#123;</span><br><span class="line">  <span class="comment">// 满足条件要执行的语句</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>&#123;</span><br><span class="line">  <span class="comment">// 不满足条件要执行的语句</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>三元运算符<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 条件 ? 表达式1 ： 表达式2</span></span><br><span class="line">onsole.<span class="title function_">log</span>(<span class="number">5</span> &lt; <span class="number">3</span> ? <span class="string">&#x27;真的&#x27;</span> : <span class="string">&#x27;假的&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li>switch语句<ol><li>switch case语句一般用于<code>等值</code>判断, if适合于<code>区间判断</code></li><li><code>switch + case</code>一般需要配合break关键字使用,没有break会造成case穿透<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">switch</span> (x) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;您选择的是1&#x27;</span>)</span><br><span class="line">    <span class="keyword">break</span>  <span class="comment">// 退出switch</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;您选择的是2&#x27;</span>)</span><br><span class="line">    <span class="keyword">break</span>  <span class="comment">// 退出switch</span></span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;没有符合条件的&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="3-循环语句"><a href="#3-循环语句" class="headerlink" title="3. 循环语句"></a>3. 循环语句</h3><ol><li>while循环<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (条件表达式) &#123;</span><br><span class="line">   <span class="comment">// 循环体    </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li><code>break</code>：中止整个循环，一般用于结果已经得到, 后续的循环不需要的时候可以使用</li><li><code>continue</code>：中止本次循环，一般用于排除或者跳过某一个选项的时候</li><li>无限循环：<code>while(true)</code>、<code>for(;;)</code></li></ul><ol start="2"><li>for 循环<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">6</span>; i++) &#123;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`&lt;h<span class="subst">$&#123;i&#125;</span>&gt;循环控制，即重复执行&lt;h<span class="subst">$&#123;i&#125;</span>&gt;`</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-数组"><a href="#3-数组" class="headerlink" title="3. 数组"></a>3. 数组</h2><blockquote><p>Array是一种可以<code>按顺序</code>保存数据的数据类型</p></blockquote><h3 id="1-初始化"><a href="#1-初始化" class="headerlink" title="1. 初始化"></a>1. 初始化</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 定义一个空数组</span></span><br><span class="line"><span class="keyword">let</span> classes = [];</span><br><span class="line"><span class="comment">// 2. 定义非空数组</span></span><br><span class="line"><span class="keyword">let</span> classes = [<span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;小刚&#x27;</span>, <span class="string">&#x27;小红&#x27;</span>, <span class="string">&#x27;小丽&#x27;</span>, <span class="string">&#x27;小米&#x27;</span>]</span><br><span class="line"><span class="comment">// 3. 构造函数</span></span><br><span class="line"><span class="keyword">let</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure><h3 id="2-增删改查"><a href="#2-增删改查" class="headerlink" title="2. 增删改查"></a>2. 增删改查</h3><ol><li>索引<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组[下标]</span></span><br><span class="line">arr[x]</span><br></pre></td></tr></table></figure></li><li>修改<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组[下标] = value</span></span><br><span class="line">arr[x] = <span class="number">6</span></span><br></pre></td></tr></table></figure></li><li>增加<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. push（）将一个或多个元素添加到数组的末尾，并返回该数组的新长度</span></span><br><span class="line">arr.<span class="title function_">push</span>(num1,num2)</span><br><span class="line"><span class="comment">// 2. 将一个或多个元素添加到数组的开头，并返回该数组的新长度</span></span><br><span class="line">arr.<span class="title function_">unshift</span>(<span class="number">222</span>)</span><br></pre></td></tr></table></figure></li><li>删除<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 从数组中删除最后一个元素，并返回该元素的值</span></span><br><span class="line">arr.<span class="title function_">pop</span>()</span><br><span class="line"><span class="comment">// 2. 从数组中删除第一个元素，并返回该元素的值</span></span><br><span class="line">arr.<span class="title function_">shift</span>()</span><br><span class="line"><span class="comment">// 3. 删除指定元素</span></span><br><span class="line">arr.<span class="title function_">splice</span>(起始位置-索引号，删除数量)</span><br></pre></td></tr></table></figure></li><li>排序<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 排序</span></span><br><span class="line">arr.<span class="title function_">sort</span>()</span><br><span class="line"><span class="comment">// 1.升序排列写法</span></span><br><span class="line">arr.<span class="title function_">sort</span>(<span class="keyword">function</span> (<span class="params">a, b</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> a - b</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr) <span class="comment">// [1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="comment">// 降序排列写法</span></span><br><span class="line">arr.<span class="title function_">sort</span>(<span class="keyword">function</span> (<span class="params">a, b</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> b - a</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h2 id="4-冒泡排序"><a href="#4-冒泡排序" class="headerlink" title="4. 冒泡排序"></a>4. 冒泡排序</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> arr = [<span class="number">5</span>, <span class="number">12</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">19</span>, <span class="number">3</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; arr.<span class="property">length</span> - i - <span class="number">1</span>; j++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">let</span> temp = arr[j]</span></span><br><span class="line"><span class="language-javascript">          arr[j] = arr[j + <span class="number">1</span>]</span></span><br><span class="line"><span class="language-javascript">          arr[j + <span class="number">1</span>] = temp</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS基础01</title>
      <link href="/2023/11/30/JS%E5%9F%BA%E7%A1%8001/"/>
      <url>/2023/11/30/JS%E5%9F%BA%E7%A1%8001/</url>
      
        <content type="html"><![CDATA[<h1 id="JS基础01"><a href="#JS基础01" class="headerlink" title="JS基础01"></a>JS基础01</h1><h2 id="1-JS基础"><a href="#1-JS基础" class="headerlink" title="1. JS基础"></a>1. JS基础</h2><blockquote><p>JS是一种运行在<code>客户端（浏览器）</code>的<code>编程语言</code>，实现人机交互效果</p></blockquote><h3 id="1-组成"><a href="#1-组成" class="headerlink" title="1. 组成"></a>1. 组成</h3><ol><li>ECMAScript:规定了js基础语法核心知识。例如变量、分支语句、循环语句、对象等等</li><li>Web APIs :<ul><li>DOM：操作文档，比如对页面元素进行移动、大小、添加、删除等操作</li><li>BOM：操作浏览器，比如页面弹窗，检测窗口宽度、存储数据到浏览器等等</li></ul></li></ol><h3 id="2-版本"><a href="#2-版本" class="headerlink" title="2. 版本"></a>2. 版本</h3><ul><li>ES5(ESMAScirpt) -&gt; ES6&#x2F;ES2015 -&gt; ES7&#x2F;ES2016 -&gt; …</li></ul><h3 id="3-权威网站：MDN"><a href="#3-权威网站：MDN" class="headerlink" title="3. 权威网站：MDN"></a>3. 权威网站：<a href="https://developer.mozilla.org/zh-CN/">MDN</a></h3><h3 id="4-编写位置"><a href="#4-编写位置" class="headerlink" title="4. 编写位置"></a>4. 编写位置</h3><ol><li>内部方式：通过 <code>script</code> 标签包裹 JavaScript 代码，把脚本置于<code>&lt;body&gt;</code>元素的底部，可改善显示速度，因为脚本编译会拖慢显示。</li><li>外部方式：一般将 JavaScript 代码写在独立的以 .js 结尾的文件中，然后通过 <code>script</code> 标签的 <code>src</code> 属性引入<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;myScript.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://www.w3school.com.cn/js/myScript1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>如果 script 标签使用 src 属性引入了某 .js 文件，那么<code>&lt;script&gt;</code>标签的代码会被忽略！</li></ul></li><li>行内：略</li><li>在外部文件中放置脚本有如下优势：<ul><li>分离了 HTML 和 JS 代码</li><li>使 HTML 和 JavaScript 更易于阅读和维护</li><li>已缓存的 JavaScript 文件可加速页面加载</li></ul></li></ol><h3 id="5-注释"><a href="#5-注释" class="headerlink" title="5. 注释"></a>5. 注释</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 多行</span></span><br><span class="line"><span class="comment">注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="6-结束符"><a href="#6-结束符" class="headerlink" title="6. 结束符"></a>6. 结束符</h3><ul><li><code>;</code>，可省略</li></ul><h3 id="7-输入输出语法"><a href="#7-输入输出语法" class="headerlink" title="7. 输入输出语法"></a>7. 输入输出语法</h3><ol><li>输出<ol><li>使用 <code>document.write()</code> 写入 HTML 输出<ul><li>在 HTML 文档完全加载后使用 document.write() 将删除所有已有的 HTML</li><li><code>document.write()</code>仅用于测试</li></ul></li><li>使用 <code>alert()</code> 写入警告框</li><li>使用 <code>console.log()</code> 写入浏览器控制台</li><li>使用 <code>innerHTML</code> 写入 HTML 元素</li></ol></li><li>输入<ol><li>使用<code>prompt(&#39;输入&#39;)</code>：输入任意内容会以弹窗形式出现在浏览器中，一般提示用户输入一些内容。</li></ol></li></ol><h3 id="8-执行顺序"><a href="#8-执行顺序" class="headerlink" title="8. 执行顺序"></a>8. 执行顺序</h3><ol><li>通常顺序执行</li><li><code>alert()</code> 和 <code>prompt()</code> 它们会跳过页面渲染先被执行</li></ol><h3 id="9-字面量"><a href="#9-字面量" class="headerlink" title="9. 字面量"></a>9. 字面量</h3><blockquote><p>在计算机科学中，<code>字面量（literal）</code>是在计算机中描述事&#x2F;物</p></blockquote><h3 id="10-术语总结"><a href="#10-术语总结" class="headerlink" title="10. 术语总结"></a>10. 术语总结</h3><table><thead><tr><th>术语</th><th>解释</th><th>举例</th></tr></thead><tbody><tr><td>关键字</td><td>在js中有特殊意义的词汇</td><td>let,var,function,if,else,switch,case,break</td></tr><tr><td>保留字</td><td>未来可能有特殊意义的词汇</td><td>int,short,long,char</td></tr><tr><td>标识（标识符）</td><td>变量名、函数名的另一种称呼</td><td>无</td></tr><tr><td>表达式</td><td>能产生值的代码，一般配合运算符出现</td><td>10+3，age&gt;18</td></tr><tr><td>语句</td><td>一段可执行的代码</td><td>if();for()</td></tr></tbody></table><h2 id="2-变量"><a href="#2-变量" class="headerlink" title="2. 变量"></a>2. 变量</h2><blockquote><p>存储数据的<code>容器</code></p></blockquote><h3 id="1-初始化"><a href="#1-初始化" class="headerlink" title="1. 初始化"></a>1. 初始化</h3><ol><li>声明</li></ol><ul><li>结构：声明关键字 + 变量名（标识）<br><code>let 变量名</code></li><li>let 即关键字 ，所谓关键字是系统提供的专门用来声明（定义）变量的词语</li><li>不允许多次声明(多次let)</li></ul><ol start="2"><li>声明多个变量<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> age = <span class="number">18</span>,xname = <span class="string">&#x27;bao&#x27;</span></span><br></pre></td></tr></table></figure></li><li>赋值<br><code>age = 18</code><br><code>let age = 18</code></li><li>更新变量<br><code>age = 19</code></li></ol><h3 id="2-变量命名规则"><a href="#2-变量命名规则" class="headerlink" title="2. 变量命名规则"></a>2. 变量命名规则</h3><ol><li>规则（必须满足）：<ol><li>不可以使用<code>保留关键字</code>，如let、var、if等</li><li>仅能包含<code>字母</code>、<code>数字</code>、<code>下划线</code>、<code>$</code>等，且数字不可以作为首字符</li><li>严格<code>区分大小写</code></li></ol></li><li>规范（建议）：<ol><li><code>见名知义</code></li><li>camelCase:<code>firstNamePerson</code>（推荐小写开头的驼峰式）</li></ol></li></ol><h3 id="3-let与var的区别"><a href="#3-let与var的区别" class="headerlink" title="3. let与var的区别"></a>3. let与var的区别</h3><blockquote><p>var 现在开发中一般<code>不再使用</code>它，只是我们可能再老版程序中看到它。let 的出现时<code>为了解决 var 的一些问题</code>。</p></blockquote><ul><li><strong>var:</strong><ol><li>可以先使用，再声明 (不合理)</li><li>var 声明过的变量可以重复声明(不合理)</li><li>比如变量提升、全局变量、没有块级作用域等等</li></ol></li></ul><h2 id="3-常量"><a href="#3-常量" class="headerlink" title="3. 常量"></a>3. 常量</h2><blockquote><p>使用<code>const</code>声明的变量称为“常量”</p></blockquote><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><ol><li>声明<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">PI</span> = <span class="number">3.14</span></span><br></pre></td></tr></table></figure></li><li>要求<ol><li>声明时必须赋值</li><li>一旦声明不可修改</li></ol></li></ol><h2 id="4-数据类型（基本数据类型）"><a href="#4-数据类型（基本数据类型）" class="headerlink" title="4. 数据类型（基本数据类型）"></a>4. 数据类型（基本数据类型）</h2><blockquote><p>JS为弱类型语言</p></blockquote><h3 id="数据类型分类"><a href="#数据类型分类" class="headerlink" title="数据类型分类"></a>数据类型分类</h3><ol><li>简单类型<blockquote><p>又称基本数据类型或者值类型</p></blockquote><ul><li>在存储时存储的是<code>值</code>本身</li><li>存放在<code>栈</code>中</li></ul></li><li>复杂类型<blockquote><p>又称引用类型</p></blockquote><ul><li>存储的仅仅是<code>地址（引用）</code></li><li>通过new关键字创建的对象（系统对象、自定义对象），如Object,Array,Data等</li><li>在<code>栈</code>中存放地址，真正的对象存放在<code>堆</code>中</li></ul></li></ol><h2 id="简单数据类型："><a href="#简单数据类型：" class="headerlink" title="简单数据类型："></a>简单数据类型：</h2><h3 id="1-数字-number"><a href="#1-数字-number" class="headerlink" title="1. 数字(number)"></a>1. 数字(number)</h3><blockquote><p>浮点数，用于整数、小数、正负值</p></blockquote><ol><li>数字运算符：+ - * &#x2F; %（取模）</li><li>NaN（not a number）<ul><li>代表一个计算错误。它是一个<code>不正确</code>的或者一个<code>未定义的数学操作</code>所得到的结果</li><li>NaN 是粘性的。任何对 NaN 的操作都会返回 NaN</li></ul></li></ol><h3 id="2-字符串（string）"><a href="#2-字符串（string）" class="headerlink" title="2. 字符串（string）"></a>2. 字符串（string）</h3><blockquote><p>用于文本，放置于单、双、反引号中(推荐单引号)</p></blockquote><ol><li>无论单引号或是双引号必须成对使用</li><li>单引号&#x2F;双引号可以<code>互相嵌套</code>，但是不以自已嵌套自已</li><li>必要时可以使用转义符 <code>\</code>，输出单引号或双引号</li><li>字符串拼接：<code>+</code></li><li>模板字符串（拼接字符串和变量）<ol><li>&#96; (反引号)</li><li>内容拼接变量时，用 ${ } 包住变量</li><li>如document.write（`我今年${age}岁了`）*</li></ol></li></ol><h3 id="3-布尔（boolean）"><a href="#3-布尔（boolean）" class="headerlink" title="3. 布尔（boolean）"></a>3. 布尔（boolean）</h3><blockquote><p>true or false</p></blockquote><h3 id="4-未定义（undefined）"><a href="#4-未定义（undefined）" class="headerlink" title="4. 未定义（undefined）"></a>4. 未定义（undefined）</h3><blockquote><p>只声明变量，不赋值的情况</p></blockquote><h3 id="5-空值-null"><a href="#5-空值-null" class="headerlink" title="5. 空值(null)"></a>5. 空值(null)</h3><blockquote><p>仅仅是一个代表“无”、“空”或“值未知”的特殊值</p></blockquote><h3 id="6-null与undefine区别"><a href="#6-null与undefine区别" class="headerlink" title="6. null与undefine区别"></a>6. null与undefine区别</h3><ol><li>undefined 表示<code>没有赋值</code></li><li>null 表示<code>赋值了，但是内容为空</code></li><li>null 开发中的使用场景：<ul><li>官方解释：把 null 作为<code>尚未创建的对象</code></li><li>大白话：将来有个变量里面存放的是一个对象，但是对象还没创建好，可以先给个null</li></ul></li></ol><h3 id="7-类型检测"><a href="#7-类型检测" class="headerlink" title="7. 类型检测"></a>7. 类型检测</h3><ol><li>作为运算符：<code>typeof x</code>（常用的写法）</li><li>函数形式：<code>typeof(x)</code></li></ol><h3 id="8-类型转换"><a href="#8-类型转换" class="headerlink" title="8. 类型转换"></a>8. 类型转换</h3><ol><li>隐式转化<ol><li><code>+</code>号两边<code>只要有一个是字符串</code>，都会<code>把另外一个转成字符串</code>:有一个字符串就进行字符串拼接<ul><li>任何数据和字符串相加结果都是字符串</li><li><strong>小技巧</strong>：<code>+</code>号作为<code>正号</code>解析可以转换成数字型<code>+&#39;123&#39;</code></li></ul></li><li>除了<code>+</code>以外的算术运算符，比如 <code>-</code> <code>*</code> <code>/</code> 等都会把数据转成<code>数字</code>类型</li><li>缺点：转换类型不明确，需要经验总结</li></ol></li><li>显式转换<ol><li>转成数字类型:<code>Number(str)</code></li><li>如果字符串内容里有非数字，转换<code>失败</code>时结果为 <code>NaN</code>，即不是一个数字(NaN也是number类型的数据，代表非数字)</li><li>只保留整数：<code>parseInt(&#39;12px&#39;)</code> -&gt; 12</li><li>可以保留小数：<code>parseFloat(&#39;12.34px&#39;)</code> -&gt; 12.34</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web开发快捷操作汇总</title>
      <link href="/2023/11/23/Web%E5%BC%80%E5%8F%91%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C%E6%B1%87%E6%80%BB/"/>
      <url>/2023/11/23/Web%E5%BC%80%E5%8F%91%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="Web开发快捷操作汇总"><a href="#Web开发快捷操作汇总" class="headerlink" title="Web开发快捷操作汇总"></a>Web开发快捷操作汇总</h1><ol><li><code>查看源代码</code>：程序员编写的原始代码</li><li><code>F12检查</code>：浏览器处理后的代码</li><li><code>shift+ctrl+/</code>: 快捷行注释</li><li><code>！</code>: 快捷模板</li><li><code>CTRL+SHIFT+K</code>: 删除当前行代码</li><li><code>Shift+Alt+上/下</code>：复制当前行至上&#x2F;下行</li><li><code>div.class_name/div#id_name</code>: 快捷创建div标签</li><li><code>alt+鼠标左键</code>：多行编辑</li></ol><h1 id="实用网站："><a href="#实用网站：" class="headerlink" title="实用网站："></a>实用网站：</h1><ol><li>查询h5,css3属性兼容性：<a href="https://caniuse.com/">https://caniuse.com/</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>daily_pit</title>
      <link href="/2023/11/18/daily-pit/"/>
      <url>/2023/11/18/daily-pit/</url>
      
        <content type="html"><![CDATA[<blockquote><p>背景：在使用GeoServer上传postGIS类型的数据存储时报错，经过反复探索发现根因是postgresql的驱动版本过低</p></blockquote><h2 id="1-问题报错"><a href="#1-问题报错" class="headerlink" title="1. 问题报错"></a>1. 问题报错</h2><blockquote><p>不支援 10 验证类型。请核对您已经组态 pg_hba.conf 文件包含客户端的IP位址或网路区段，以及驱动程序所支援的验证架构模式已被支援。</p></blockquote><h2 id="2-解决方法一【尝试无效】"><a href="#2-解决方法一【尝试无效】" class="headerlink" title="2. 解决方法一【尝试无效】"></a>2. 解决方法一【尝试无效】</h2><ul><li>修改pg_hba.conf文件,将下方代码复制到pg_hba.conf底部，最后重启postgresql服务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># &quot;local&quot; is for Unix domain socket connections only</span><br><span class="line">local   all             all                           trust</span><br><span class="line"># IPv4 local connections:</span><br><span class="line">host    all             all             127.0.0.1/32            trust</span><br><span class="line"># IPv6 local connections:</span><br><span class="line">host    all             all             ::1/128                 trust</span><br></pre></td></tr></table></figure><blockquote><p>参考博客：<a href="https://blog.csdn.net/weixin_46267444/article/details/117749805">https://blog.csdn.net/weixin_46267444/article/details/117749805</a></p></blockquote></li></ul><h2 id="3-解决方法二【成功解决】"><a href="#3-解决方法二【成功解决】" class="headerlink" title="3.解决方法二【成功解决】"></a>3.解决方法二【成功解决】</h2><ol><li>可能原因：驱动版本较低</li><li>下载最新驱动：<code>https://jdbc.postgresql.org/</code></li><li>将文件路径<code>D:\Program Files (x86)\GeoServer 2.13.2\webapps\geoserver\WEB-INF\lib</code>的postgresql替换为最新版本<code>postgresql-42.6.0.jar</code><br><strong>注意！</strong></li><li>提前备份原始文件，以防失效后无法回溯</li><li>如果无法替换，需要提前先关闭服务，甚至关闭java后台运行程序，替换成功后可以再使用<code>电脑-管理</code>里开启GeoServer的服务<blockquote><p>参考博客<a href="https://blog.csdn.net/qq_44918802/article/details/126740098">https://blog.csdn.net/qq_44918802/article/details/126740098</a></p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 日常心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GeoServer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS08.布局</title>
      <link href="/2023/11/16/CSS08.%E5%B8%83%E5%B1%80/"/>
      <url>/2023/11/16/CSS08.%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS08-布局"><a href="#CSS08-布局" class="headerlink" title="CSS08.布局"></a>CSS08.布局</h1><h3 id="1-版心"><a href="#1-版心" class="headerlink" title="1. 版心"></a>1. 版心</h3><blockquote><p>在PC网页中，一般都会有一个固定宽度且水平居中的盒子，来显示网页的主要内容，即版心</p></blockquote><ol><li>版心的宽度一般是960~1200px之间</li><li>版心可以是一个，也可以是多个</li></ol><h3 id="2-常用类名"><a href="#2-常用类名" class="headerlink" title="2. 常用类名"></a>2. 常用类名</h3><table><thead><tr><th>位置</th><th></th></tr></thead><tbody><tr><td>顶部导航条</td><td>topbar</td></tr><tr><td>页头</td><td>header&#x2F;page-header</td></tr><tr><td>导航</td><td>nav&#x2F;navigator&#x2F;navbar</td></tr><tr><td>搜索框</td><td>search&#x2F;search-box</td></tr><tr><td>横幅、广告、宣传图</td><td>banner</td></tr><tr><td>主要内容</td><td>content&#x2F;main</td></tr><tr><td>侧边栏</td><td>aside&#x2F;sidebar</td></tr><tr><td>页脚</td><td>footer&#x2F;page-footer</td></tr></tbody></table><h3 id="3-重置默认样式"><a href="#3-重置默认样式" class="headerlink" title="3. 重置默认样式"></a>3. 重置默认样式</h3><p>很多元素都有默认样式，例如p、h、body、link等</p><ol><li>方案一:全局选择器</li></ol><ul><li>简单案例会用，实际开发中不会使用<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>方案二：reset.css</li></ol><ul><li>选择到具有默认样式的元素，清空其默认样式</li><li>可以自定义自己的reset.css</li></ul><ol start="3"><li>方案三：Normalize.css</li></ol><ul><li>目前的最新方案，在清除默认样式的基础上，保留了一些有价值的默认样式</li><li>官网地址：<a href="https://necolas.github.io/normalize.css/">https://necolas.github.io/normalize.css/</a></li><li><strong>相比于reset的优点</strong>：<ul><li>保护了有价值的默认样式，而不是完全去掉他们</li><li>为大部分HTML元素提供一般化的样式</li><li>新增对HTML5元素的设置</li><li>对并集选择器的使用比较谨慎，有效避免调试工具杂乱</li><li>总结：比reset更加温和</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS07.定位</title>
      <link href="/2023/11/16/CSS07.%E5%AE%9A%E4%BD%8D/"/>
      <url>/2023/11/16/CSS07.%E5%AE%9A%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS07-定位"><a href="#CSS07-定位" class="headerlink" title="CSS07.定位"></a>CSS07.定位</h1><h3 id="1-相对定位"><a href="#1-相对定位" class="headerlink" title="1. 相对定位"></a>1. 相对定位</h3><blockquote><p>应用场景：1.微调 2.配合绝对定位使用（主要）</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">left</span>/<span class="attribute">right</span>/<span class="attribute">top</span>/<span class="attribute">bottom</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>相对于原来的位置</p></blockquote><ol><li><code>不会脱离文档流</code>，元素位置变化只是视觉上的变化，不会对其他元素产生任何影响</li><li>定位元素层级比其他普通元素高;但<code>不论什么定位，显示层级都是一样的</code><ul><li>定位元素会盖在普通元素之上</li><li>都定位的元素，后写层级高</li></ul></li><li>可以为负值</li><li>上与下，左与右不可以同时写，同时有听left,top</li><li>可以float，可以写margin，但<code>不推荐！</code></li></ol><h3 id="2-绝对定位"><a href="#2-绝对定位" class="headerlink" title="2. 绝对定位"></a>2. 绝对定位</h3><blockquote><p>应用场景：覆盖其他元素</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">box &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>参考包含块<br>包含块：<code>未脱离文档流</code>的元素的<code>父元素</code>即为他的包含块；<code>脱离文档流</code>的元素，第一个<code>开启定位</code>的<code>祖先元素</code>，即为他的包含块。</p></blockquote><ol><li><code>脱离文档流</code>,但文字不环绕,<code>会给后面的兄弟元素、父元素右有影响</code></li><li>上与下，左与右不可以同时写，同时有听left,top</li><li>不能float,同时写听绝对定位</li><li>可以设置margin,但不推荐</li><li>设置绝对定位的任意元素均变为<code>定位元素</code>（默认宽高被内容撑开，且能自由设置宽高）</li></ol><h3 id="3-固定定位"><a href="#3-固定定位" class="headerlink" title="3. 固定定位"></a>3. 固定定位</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>参考视口 </p></blockquote><ol><li><code>脱离文档流</code>,但文字不环绕,<code>会给后面的兄弟元素、父元素右有影响</code></li><li>上与下，左与右不可以同时写，同时有听left,top</li><li>不能float,同时写听固定定位</li><li>可以设置margin,但不推荐</li><li>设置绝对定位的任意元素均变为<code>定位元素</code>（默认宽高被内容撑开，且能自由设置宽高）</li></ol><blockquote><p>总结：除参考点，其特点与绝对定位一致</p></blockquote><h3 id="4-粘性定位"><a href="#4-粘性定位" class="headerlink" title="4. 粘性定位"></a>4. 粘性定位</h3><p>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">2000px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.top</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.itema</span>,<span class="selector-class">.itemb</span>,<span class="selector-class">.itemc</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.first</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: sticky;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 头部 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top&quot;</span>&gt;</span>头部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 内容 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;itema&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;first&quot;</span>&gt;</span>A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A3<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A4<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A5<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A6<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A7<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A8<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A9<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A10<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;itemb&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;first&quot;</span>&gt;</span>B<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>B1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>B2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>B3<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>B4<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>B5<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>B6<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>B7<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>B8<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>B9<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>B10<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;itemb&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;first&quot;</span>&gt;</span>C<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A3<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A4<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A5<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A6<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A7<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A8<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A9<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>A10<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>参考离他<code>最近</code>的一个<code>具有“滚动机制”</code>的<code>祖先元素</code>，即使这个祖先不是最近的<code>真实可滚动</code>祖先</li><li><code>不脱离文档流</code>，是一种<code>专门用于窗口滚动时</code>的新的定位方式</li><li>最常用的是<code>top值</code></li><li>可以margin与float,但不建议</li></ol><blockquote><p>与相对定位特点基本一致,但粘性定位可在元素到达某个位置时将其固定</p></blockquote><h3 id="5-定位的层级"><a href="#5-定位的层级" class="headerlink" title="5. 定位的层级"></a>5. 定位的层级</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 调整元素层级 */</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">99</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>定位元素<code>比普通元素高</code>;无论什么<code>定位，显示层级都是一样的</code></li><li>如果位置发生重叠，默认情况是<code>后面的元素</code>，会显示在前面元素之上</li><li>只有定位元素设置<code>z-index</code>才有效，可以通过他调整层级</li><li>z-index的属性是数字，没有单位，<code>值越大显示层级越高</code></li><li>如果z-index值大的元素，依然没有覆盖掉z-index值小的元素，那么是由于其<code>包含块的层级</code>是否过低</li></ol><h3 id="6-定位的特殊应用"><a href="#6-定位的特殊应用" class="headerlink" title="6. 定位的特殊应用"></a>6. 定位的特殊应用</h3><p><strong>应用一:让定位元素充满包含块</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#888</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">10px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span>111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>应用二:让方位元素在包含块中居中（该定位元素必须设置宽高！！）</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.outer</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#888</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>:<span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>：orange;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span>111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Road_Damages_Detection01</title>
      <link href="/2023/11/15/Road_Damages_Detection01/"/>
      <url>/2023/11/15/Road_Damages_Detection01/</url>
      
        <content type="html"><![CDATA[<h1 id="Road-Damages-Detection01"><a href="#Road-Damages-Detection01" class="headerlink" title="Road_Damages_Detection01"></a>Road_Damages_Detection01</h1><h2 id="一、研究数据"><a href="#一、研究数据" class="headerlink" title="一、研究数据"></a>一、研究数据</h2><ol><li>相机：图片数据</li><li>三维激光扫描：三维道路图片数据</li><li>三维探地雷达采集的雷达图谱多视图数据（最新，浙大毕设）</li></ol><h2 id="二、实现算法"><a href="#二、实现算法" class="headerlink" title="二、实现算法"></a>二、实现算法</h2><blockquote><p>主要分为基于传统图像技术和基于深度学习（先进且主流）</p></blockquote><h3 id="深度学习算法："><a href="#深度学习算法：" class="headerlink" title="深度学习算法："></a>深度学习算法：</h3><h4 id="1-RCNN-系列算法"><a href="#1-RCNN-系列算法" class="headerlink" title="1.RCNN 系列算法"></a>1.RCNN 系列算法</h4><h4 id="2-SSD-算法"><a href="#2-SSD-算法" class="headerlink" title="2.SSD 算法"></a>2.SSD 算法</h4><h4 id="3-YOLO-系列"><a href="#3-YOLO-系列" class="headerlink" title="3.YOLO 系列"></a>3.YOLO 系列</h4><ol><li>YOLOv1-v5</li><li><strong>YOLOv8</strong>(最新)</li></ol><h2 id="三、思路"><a href="#三、思路" class="headerlink" title="三、思路"></a>三、思路</h2><ol><li><strong>优化道路病害检测模型</strong>:<ol><li>提升模型效率与精度(召回率与准确率)</li><li>数据增强和对抗训练：使用数据增强技术来扩充训练集，以增加模型的泛化能力；对抗训练以提高模型对于噪声和干扰的鲁棒性。</li><li>迁移学习和自适应学习：考虑在不同道路和环境条件下的道路病害监测，利用迁移学习或自适应学习方法，使得模型在不同场景下都能取得好的性能。</li><li>针对某一种病害，特化检测模型，提高对该类病害检测的准确性</li></ol></li><li><strong>综合多模态数据</strong>： 整合多种数据来源，如<code>图像、激光雷达</code>等，以提高道路病害监测的准确性,由此构建新的模型结构或者特征融合的方法。<ul><li>需要获取<code>雷达点云数据</code></li><li>硬件性能？</li></ul></li><li><strong>实时监测和预测</strong>： 着重于开发实时监测和预测系统，使得病害可以在早期阶段被检测到，以便采取及时的维修措施，关注实时性能与模型轻量化。<ul><li>道路<code>高清监控摄像头数据</code>获取，<code>精度</code>是否足够？</li><li>覆盖范围不足</li></ul></li><li><strong>时空分布模式探究与趋势预测</strong><ol><li>分析析道路病害在不同季节、天气条件下的时空分布模式。</li><li>使用时间序列分析方法，建模道路病害的时序变化，预测未来病害的发生趋势。</li><li>空间相关性分析：探究道路病害在空间上的分布规律，使用空间统计方法来识别病害的集聚区域或者热点区域。</li></ol><ul><li>需要<code>时空连续数据</code> -&gt; 谷歌街景影像数据 </li><li>问题：存在环境、施工的干扰</li></ul></li><li><strong>开发完整的可视化GIS系统</strong>：通过可视化方法展示地理定位，病害影像等监测结果，便于交通道路管理部门清晰了解监测结果，科学规划道路养护工作；可融合病害统计、热点统计等空间分析功能。<ul><li><code>数据较易获取</code></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Graduation Design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Road Damages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS06.浮动</title>
      <link href="/2023/11/13/CSS06.%E6%B5%AE%E5%8A%A8/"/>
      <url>/2023/11/13/CSS06.%E6%B5%AE%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS06-浮动"><a href="#CSS06-浮动" class="headerlink" title="CSS06.浮动"></a>CSS06.浮动</h1><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h3><blockquote><p>最初的浮动是用来<code>实现文字环绕图片效果</code>的，现在的浮动是主流的<code>页面布局方式</code>之一</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-元素浮动后的特点"><a href="#2-元素浮动后的特点" class="headerlink" title="2. 元素浮动后的特点"></a>2. 元素浮动后的特点</h3><ol><li><code>脱离文档流</code>（元素默认布局方式）</li><li>不论浮动前是什么元素，浮动后<code>默认宽高都是被内容撑开</code>的（尽可能小），而且<code>可以设置宽高</code></li><li>不会独占一行，可以与其他元素<code>共用一行</code></li><li>不会与margin合并，也不会margin塌陷，<code>能够完美设置</code>四个方向的margin和padding</li><li>不会像其他行内块一样被当作文本处理（没有行内块的空白问题）</li></ol><h3 id="3-浮动后的影响"><a href="#3-浮动后的影响" class="headerlink" title="3. 浮动后的影响"></a>3. 浮动后的影响</h3><ol><li>对兄弟元素：后面的兄弟元素会占据浮动元素之前的位置，在浮动元素的下面；对前面的兄弟无影响</li><li>对父元素：不能撑起父元素的高度，导致父元素塌陷；但父元素的宽度仍然束缚浮动元素。</li></ol><h3 id="4-解决浮动的影响"><a href="#4-解决浮动的影响" class="headerlink" title="4. 解决浮动的影响"></a>4. 解决浮动的影响</h3><blockquote><p>解决元素浮动时<code>父元素高度丢失</code>和<code>最后一个元素藏到浮动元素后面</code>的问题</p></blockquote><p><strong>解决方法：</strong></p><ol><li>给父元素指定高度</li><li>给父元素也设置浮动，但会带来其他影响</li><li>给父元素设置<code>overflow: hidden;</code> -&gt; 解决父元素高度塌陷问题</li><li>在所有浮动元素的最后写一个块级元素，并为其设置样式：<code>clear: both</code>；-&gt;清除左右浮动元素的影响</li><li>给浮动的元素的父元素，设置伪元素，清除浮动，原理与方案四相同(推荐)</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>布局中的一个原则：设置浮动时，兄弟元素要么全部浮动，要么全都不浮动</p></blockquote><h3 id="5-浮动布局练习"><a href="#5-浮动布局练习" class="headerlink" title="5. 浮动布局练习"></a>5. 浮动布局练习</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Try<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.leftfix</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.rightfix</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">960px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.logo</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.banner1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">540px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.banner2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.logo</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.banner1</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.banner2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.menu</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.item1</span>,<span class="selector-class">.item2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">368px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">198px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">198px</span>;;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bottom</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.item3</span>,<span class="selector-class">.item4</span>,<span class="selector-class">.item5</span>,<span class="selector-class">.item6</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">178px</span>;;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">198px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">198px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.item7</span>,<span class="selector-class">.item8</span>,<span class="selector-class">.item9</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">198px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">128px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">128px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.item8</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.footer</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 头部 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;page-header clearfix&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo leftfix&quot;</span>&gt;</span>logo<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner1 leftfix&quot;</span>&gt;</span>banner1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner2 leftfix&quot;</span>&gt;</span>banner2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 菜单 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;menu&quot;</span>&gt;</span>菜单<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 内容区 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content clearfix&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left leftfix&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top clearfix&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item1 leftfix&quot;</span>&gt;</span>栏目一<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item2 leftfix&quot;</span>&gt;</span>栏目二<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom clearfix&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item3 leftfix&quot;</span>&gt;</span>栏目三<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item4 leftfix&quot;</span>&gt;</span>栏目四<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item5 leftfix&quot;</span>&gt;</span>栏目五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item6 leftfix&quot;</span>&gt;</span>栏目六<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right rightfix&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item7&quot;</span>&gt;</span>栏目七<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item8&quot;</span>&gt;</span>栏目八<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item9&quot;</span>&gt;</span>栏目九<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 页脚 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span>页脚<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS05.盒模型</title>
      <link href="/2023/11/07/CSS05.%E7%9B%92%E6%A8%A1%E5%9E%8B/"/>
      <url>/2023/11/07/CSS05.%E7%9B%92%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS05-盒模型"><a href="#CSS05-盒模型" class="headerlink" title="CSS05.盒模型"></a>CSS05.盒模型</h1><h2 id="一、基础知识"><a href="#一、基础知识" class="headerlink" title="一、基础知识"></a>一、基础知识</h2><h3 id="1-常用长度单位"><a href="#1-常用长度单位" class="headerlink" title="1. 常用长度单位"></a>1. 常用长度单位</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="comment">/* 第一种单位：px(像素) */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="comment">/* 第二种长度单位： em(相对于当前元素或其父元素的font-size的倍数) </span></span><br><span class="line"><span class="comment">    向上找父元素，找不到默认为16px*/</span></span><br><span class="line">    <span class="attribute">width</span>： <span class="number">10em</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="comment">/* 第三种长度单位： rem（root+em,相对于根元素的font-size的倍数） */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">5rem</span>;</span><br><span class="line">    <span class="comment">/* 第四种长度单位： %（相对于其父元素百分比） */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">125%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>css中<code>必须加单位</code></li></ul><h3 id="2-元素的显示模式"><a href="#2-元素的显示模式" class="headerlink" title="2. 元素的显示模式"></a>2. 元素的显示模式</h3><blockquote><p>块元素（block），块级元素</p></blockquote><ol><li>在页面中<code>独占一行</code>，不与任何元素一行，从上到下排列</li><li>默认宽度：撑满整个父元素</li><li>默认高度：由内容撑开的</li><li><code>可以</code>通过css设置宽高</li></ol><blockquote><p>行内元素（inline），内联元素</p></blockquote><ol><li>在页面中<code>不独占一行</code>，一行内不能容纳下的行内元素，会在下一行继续从左到右排列</li><li>默认宽高：由内容撑开</li><li><code>无法</code>通过CSS设置宽高</li></ol><blockquote><p>行内块元素（inline-block）</p></blockquote><ol><li>在页面中<code>不独占一行</code>，一行内不能容纳下的行内元素，会在下一行继续从左到右排列</li><li>默认宽高：由内容撑开</li><li><code>可以</code>通过CSS设置宽高</li><li>典型例子：<code>&lt;img&gt;</code></li></ol><img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/posts_01/20231108154707.png"/><h3 id="3-修改元素的显示模式"><a href="#3-修改元素的显示模式" class="headerlink" title="3. 修改元素的显示模式"></a>3. 修改元素的显示模式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none/block/inline-block/inline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、组成部分"><a href="#二、组成部分" class="headerlink" title="二、组成部分"></a>二、组成部分</h2><h3 id="1-盒模型-x3D-content-padding-内边距-border-边框-margin-外边距"><a href="#1-盒模型-x3D-content-padding-内边距-border-边框-margin-外边距" class="headerlink" title="1. 盒模型 &#x3D; content + padding(内边距) + border(边框) + margin(外边距)"></a>1. 盒模型 &#x3D; content + padding(内边距) + border(边框) + margin(外边距)</h3><img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/posts_01/20231108160752.png"/><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: gray;</span><br><span class="line">    <span class="comment">/* 内容区的宽高 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="comment">/* 内边距，设置的背景颜色会填充内边距区域（div变大） */</span></span><br><span class="line">    paddding：<span class="number">20px</span>;</span><br><span class="line">    <span class="comment">/* 边框，设置的背景颜色会填充边框区域（div变大）*/</span></span><br><span class="line">    <span class="attribute">border</span>：<span class="number">10px</span> solid red;</span><br><span class="line">    <span class="comment">/* 外边距 */</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>盒子的大小&#x3D;content+padding(内边距)+border(边框)<br>外边距margin不影响盒子大小，只影响盒子位置</p></blockquote><h3 id="2-content"><a href="#2-content" class="headerlink" title="2. content"></a>2. content</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">1000px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="comment">/* 最低50px,无上限，由内容撑开 */</span></span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">50px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">max-height</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-默认宽度"><a href="#3-默认宽度" class="headerlink" title="3. 默认宽度"></a>3. 默认宽度</h3><blockquote><p>不设置<code>width</code>属性时，元素所呈现出来的宽度</p></blockquote><p><strong>总宽度</strong>：父的content-自身左右的margin</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="comment">/* 未写width，margin影响宽度 */</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-padding"><a href="#4-padding" class="headerlink" title="4. padding"></a>4. padding</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">200px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 设置单边 */</span></span><br><span class="line">    <span class="attribute">padding-left</span>/<span class="attribute">top</span>/<span class="attribute">right</span>/<span class="attribute">bottom</span>：<span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/* 复合属性，写一个值,上下左右 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 复合属性，写2个值，含义：上下，左右 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 复合属性，写3个值，含义：上，左右，下 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 复合属性，写4个值，含义：上，右，下，左 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span> <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>不能写负值</li><li>行内元素左右可设置，<code>上下不占位</code>，<code>其他元素都可以完美设置</code></li></ol><h3 id="5-border"><a href="#5-border" class="headerlink" title="5. border"></a>5. border</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-left-width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-right-width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-top-width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-width</span>: <span class="number">10px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* color，style均可以和上下左右结合 */</span></span><br><span class="line">    <span class="attribute">border-color</span>: red;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid red;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">20px</span> dashed green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-margin"><a href="#6-margin" class="headerlink" title="6. margin"></a>6. margin</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="comment">/* 上下左右皆可 */</span></span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="comment">/* 与padding类似，可写1-4个值 */</span></span><br><span class="line">    <span class="attribute">margin</span>：<span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span> <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>子元素的margin是参考父元素的content的</li><li><code>上左margin</code>影响<code>自身位置</code>，<code>下右margin</code>影响<code>旁边的要素位置</code></li><li>对于行内元素，只有上下margin是可以完美设置的</li><li>margin的值可以是auto，对于块级元素，<strong>如果其左右margin设置为auto，则在其父元素中水平居中（实用）</strong></li><li>margin的值可以为负值</li></ol><h3 id="7-margin塌陷问题"><a href="#7-margin塌陷问题" class="headerlink" title="7. margin塌陷问题"></a>7. margin塌陷问题</h3><blockquote><p>第一个子元素的上margin会作用于父元素上，最后一个子元素的下margin会作用于父元素上</p></blockquote><p><strong>解决方法:</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="comment">/* 方法1 :添加border或padding（不为0）*/</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid red;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 方法2 :在父元素上添加overflow（控制溢出文字显示）*/</span></span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="8-margin的合并问题"><a href="#8-margin的合并问题" class="headerlink" title="8. margin的合并问题"></a>8. margin的合并问题</h3><blockquote><p>上部元素的margin-bottom与下部元素的margin-top合并，取最大值，而不是相加</p></blockquote><ul><li>无需解决，直接写最大值即可</li></ul><h2 id="三、元素补充"><a href="#三、元素补充" class="headerlink" title="三、元素补充"></a>三、元素补充</h2><h3 id="1-处理内容溢出"><a href="#1-处理内容溢出" class="headerlink" title="1. 处理内容溢出"></a>1. 处理内容溢出</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: <span class="built_in">hidden</span>(隐藏)/visible/<span class="built_in">scroll</span>(滚动条)/auto;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 不推荐 */</span></span><br><span class="line">    <span class="attribute">overflow-x</span>: hidden;</span><br><span class="line">    <span class="attribute">overflow-y</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>常用hidden和auto，除了能处理溢出显示方式，还可以解决许多<code>疑难杂症</code></li></ul><h3 id="2-隐藏元素的两种方式"><a href="#2-隐藏元素的两种方式" class="headerlink" title="2. 隐藏元素的两种方式"></a>2. 隐藏元素的两种方式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="comment">/* 不占位 */</span></span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="comment">/* 默认值为show，hidden时页面上仍然占位 */</span></span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-样式的继承"><a href="#3-样式的继承" class="headerlink" title="3. 样式的继承"></a>3. 样式的继承</h3><blockquote><p>有些样式会继承，如果有样式直接使用本身设置的样式；<br>但如果没有则会从父元素一级一级继承（优先继承离得近的祖先元素）</p></blockquote><ul><li>会继承的css属性：<br>字体属性、文本属性（除了vertical-align）、文字颜色等</li><li>不会继承的css属性：<br>边框、背景、内外边距、宽高、溢出方式等</li></ul><blockquote><p>规律：能继承的属性，都是不影响布局的，即不影响盒子模型的</p></blockquote><h3 id="4-元素的默认样式"><a href="#4-元素的默认样式" class="headerlink" title="4. 元素的默认样式"></a>4. 元素的默认样式</h3><ul><li>优先级：<code>默认样式&gt;继承样式</code></li><li>body有默认样式！</li><li>元素一般都有默认样式，如<code>&lt;a&gt;,&lt;h&gt;,&lt;p&gt;</code>…</li></ul><h3 id="5-布局小技巧"><a href="#5-布局小技巧" class="headerlink" title="5. 布局小技巧"></a>5. 布局小技巧</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 示例一 */</span></span><br><span class="line"><span class="selector-class">.outer</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: gray;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.inner</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">margin-top</span>:<span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 示例二 */</span></span><br><span class="line"><span class="selector-class">.outer</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: gray;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="comment">/* 行内与行内块元素皆可使用text-aligin */</span></span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 示例三 */</span></span><br><span class="line"><span class="selector-class">.outer</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: gray;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>行内元素、行内块元素，可以被父元素当作文本处理<blockquote><p>可以像处理文本对齐一样去处理：行内、行内块在父元素中的对齐<br>例如：text-align、line-height、text-indent等</p></blockquote></li><li>如何让子元素在父元素内<code>居中</code>：<ul><li>若子元素为<code>块元素</code>，给子元素加上：<code>margin:0 auto;</code></li><li>若子元素为<code>行内或行内块元素</code>，给父元素加上：<code>text-align: center;</code></li></ul></li><li>如何让子元素在父元素内<code>垂直居中</code>：<ul><li>若子元素为<code>块元素</code>，给子元素加上：<code>margin-top:（父元素content-子元素盒子总高）/2</code></li><li>若子元素为<code>行内或行内块元素</code>，给父元素加上：<code>height:=line-height; font-size:0;</code>,每个子元素加上:<code>vertical-align:middle;</code></li></ul></li></ol><h3 id="6-元素间的空白问题"><a href="#6-元素间的空白问题" class="headerlink" title="6. 元素间的空白问题"></a>6. 元素间的空白问题</h3><blockquote><p>行内元素、行内块元素彼此之间的换行会被浏览器解析为一个空白字符</p></blockquote><p><strong>解决方案：</strong></p><ol><li>去掉换行和空格（不推荐）</li><li>给父元素设置<code>font-size: 0;</code>再给需要显示的文字元素单独设置字体大小</li></ol><h3 id="7-行内块的幽灵空白问题"><a href="#7-行内块的幽灵空白问题" class="headerlink" title="7. 行内块的幽灵空白问题"></a>7. 行内块的幽灵空白问题</h3><blockquote><p>行内块元素与文本的基线对齐，而文本的基线与文本最低端之间有一定的距离</p></blockquote><p><strong>解决方案：</strong></p><ol><li>为行内块设置：<code>vertical-align: 不为baseline;</code></li><li>若父元素仅有一张图片，设置图片为：<code>display:block;</code></li><li>给父元素设置：<code>font-size:0px;</code>如果该行内块内部还有文本，则需单独设置font-size</li></ol>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS04.字体与文本属性</title>
      <link href="/2023/11/02/CSS04.%E5%AD%97%E4%BD%93%E4%B8%8E%E6%96%87%E6%9C%AC%E5%B1%9E%E6%80%A7/"/>
      <url>/2023/11/02/CSS04.%E5%AD%97%E4%BD%93%E4%B8%8E%E6%96%87%E6%9C%AC%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS04-字体与文本属性"><a href="#CSS04-字体与文本属性" class="headerlink" title="CSS04.字体与文本属性"></a>CSS04.字体与文本属性</h1><h2 id="一、常用字体属性"><a href="#一、常用字体属性" class="headerlink" title="一、常用字体属性"></a>一、常用字体属性</h2><h3 id="1-字体大小"><a href="#1-字体大小" class="headerlink" title="1. 字体大小"></a>1. 字体大小</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 继承性 */</span></span><br></pre></td></tr></table></figure><ol><li>常规最小字体大小：<code>12px</code></li><li>常规默认字体大小：<code>16px</code></li><li><code>0px</code>不显示</li><li>开发者工具可以临时调整查看和调整，还可以看到继承是否被覆盖（删除线）</li></ol><h3 id="2-字体族"><a href="#2-字体族" class="headerlink" title="2. 字体族"></a>2. 字体族</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>:  <span class="string">&quot;微软雅黑/Microsoft YaHei&quot;</span>, <span class="string">&quot;楷体&quot;</span>, <span class="string">&quot;宋体&quot;</span>,sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>字体为电脑字体库中的字体，设置-字体</li><li>默认字体为<code>微软雅黑</code></li><li>写多个值则从前往后搜索</li><li>衬线字体：”有钝感”</li><li>网页以<code>非衬线字体</code>为主</li><li>兼容性最好写英文名，<code>现用现查</code></li><li>sans-serif（泛指非衬线），serif(衬线字体)</li></ol><h3 id="3-字体风格"><a href="#3-字体风格" class="headerlink" title="3. 字体风格"></a>3. 字体风格</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: <span class="built_in">normal</span>(默认值)/<span class="built_in">italic</span>(斜体);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-字体粗细"><a href="#4-字体粗细" class="headerlink" title="4. 字体粗细"></a>4. 字体粗细</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: lighter/normal/bold/bolder;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">300</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>bolder多数字体不支持，主要字体就前三种类型</li><li>数值取值范围为100-1000：<ul><li>100-300&#x3D;lighter</li><li>400-500&#x3D;normal</li><li>600及其以上&#x3D;bold(具体看字体设计精度)</li></ul></li></ol><h3 id="5-字体复合属性"><a href="#5-字体复合属性" class="headerlink" title="5. 字体复合属性"></a>5. 字体复合属性</h3><blockquote><p>合并字体属性为一个属性</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>:  bold italic <span class="number">100px</span> <span class="string">&quot;宋体&quot;</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>空格隔开，最后两个<code>必须顺序</code>写<code>大小</code>和<code>字体族</code>，前面顺序无所谓</li></ul><h3 id="6-font-size说明"><a href="#6-font-size说明" class="headerlink" title="6. font-size说明"></a>6. font-size说明</h3><ol><li>字体设计时不一定位于字体框正中央（甚至可以超过上下边框），通常偏下一点</li><li>字体框会进行自适应调整长宽</li><li>由于字体设计的原因，文字最终呈现额大小，并不一定与font-size的值一致，大小都可能</li></ol><h2 id="二、常用文本属性"><a href="#二、常用文本属性" class="headerlink" title="二、常用文本属性"></a>二、常用文本属性</h2><h3 id="1-文本颜色"><a href="#1-文本颜色" class="headerlink" title="1. 文本颜色"></a>1. 文本颜色</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00f</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-文本间距"><a href="#2-文本间距" class="headerlink" title="2. 文本间距"></a>2. 文本间距</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="comment">/* 字母间距 */</span></span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="comment">/* 单词间距，通过空格 */</span></span><br><span class="line">    <span class="attribute">word-spacing</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可以为负值</li></ul><h3 id="3-文本修饰"><a href="#3-文本修饰" class="headerlink" title="3. 文本修饰"></a>3. 文本修饰</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="comment">/* 上划绿色虚线，下划红色波浪线，删除线，无 */</span></span><br><span class="line">    <span class="attribute">text-decoration</span>: overline dotted green;</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline wavy red;</span><br><span class="line">    <span class="attribute">text-decoration</span>: line-through;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可搭配<code>wavy</code>,<code>dotted</code>,<code>颜色</code>等</li></ul><h3 id="4-文本缩进"><a href="#4-文本缩进" class="headerlink" title="4. 文本缩进"></a>4. 文本缩进</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">120px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-文本对齐-水平方向"><a href="#5-文本对齐-水平方向" class="headerlink" title="5. 文本对齐-水平方向"></a>5. 文本对齐-水平方向</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: left/center/right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-行高"><a href="#6-行高" class="headerlink" title="6. 行高"></a>6. 行高</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="comment">/* 自适应行高 */</span></span><br><span class="line">    <span class="attribute">line-height</span>: normal;</span><br><span class="line">    <span class="comment">/* 数值为倍数，常用 */</span></span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">150%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>行高最好大于字体大小，为1.5倍-2倍</li><li>行高过小会导致文字重叠，且最小值为0，不能是负数</li><li>line-height<code>可以继承</code>，也是数值最常用的原因</li><li>设置了height，高度就是height的值；没有height，高度默认为line-height*行数（所以行高为0px时背景色消失）</li></ol><blockquote><p>应用场景：调整多行文字间距；单行文字的垂直居中。</p></blockquote><h3 id="7-垂直"><a href="#7-垂直" class="headerlink" title="7. 垂直"></a>7. 垂直</h3><ol><li>默认顶部对齐</li><li><code>垂直居中</code>：对于单行文字，使<code>height=line-height</code>即可</li><li>底部：line-height&#x3D;（height * 2） - font-size - 动态值（更好使用定位实现）</li></ol><h3 id="8-垂直对齐（vertical-aligen）"><a href="#8-垂直对齐（vertical-aligen）" class="headerlink" title="8. 垂直对齐（vertical-aligen）"></a>8. 垂直对齐（vertical-aligen）</h3><blockquote><p>用于指定<code>同一行元素之间</code>，或<code>表格单元格</code>内文字的<code>垂直对齐方式</code></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="comment">/* baseline为基线，默认值 */</span></span><br><span class="line">    <span class="comment">/* 使元素的中部与父元素的基线加上父元素字母x的一半对齐 */</span></span><br><span class="line">    vertical-aligen: top/bottom/baseline/middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>无法控制块级元素</li><li>可以控制单元格内的格式</li></ol><h2 id="三、其他属性"><a href="#三、其他属性" class="headerlink" title="三、其他属性"></a>三、其他属性</h2><h3 id="1-列表相关属性"><a href="#1-列表相关属性" class="headerlink" title="1. 列表相关属性"></a>1. 列表相关属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>,<span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="comment">/* 列表符号 */</span></span><br><span class="line">    <span class="attribute">list-style-type</span>: <span class="built_in">none</span>(常用)/square/<span class="built_in">lower-roman</span>(罗马数字<span class="number">123</span>)/<span class="built_in">decimal</span>(数字<span class="number">123</span>);</span><br><span class="line">    <span class="comment">/* 列表符号位置 */</span></span><br><span class="line">    list-<span class="attribute">position</span>: inside/outside;</span><br><span class="line">    <span class="comment">/* 自定义列表符号:图片，链接 */</span></span><br><span class="line">    list-type-image: <span class="built_in">url</span>(<span class="string">&quot;../data/xx.png&quot;</span>);</span><br><span class="line">    <span class="comment">/* 复合属性，无顺序 */</span></span><br><span class="line">    <span class="attribute">list-style</span>: decimal inside <span class="built_in">url</span>(<span class="string">...</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-边框相关属性"><a href="#2-边框相关属性" class="headerlink" title="2. 边框相关属性"></a>2. 边框相关属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: green;</span><br><span class="line">    <span class="attribute">border-style</span>: solid/dashed/dotted/double;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> green solid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">td</span>,<span class="selector-tag">th</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> blue solid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>边框相关的属性，不仅表格能用，其他元素也能用</li></ul><h3 id="3-表格独有属性"><a href="#3-表格独有属性" class="headerlink" title="3. 表格独有属性"></a>3. 表格独有属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> green solid;</span><br><span class="line">    <span class="comment">/* 控制表格列宽 */</span></span><br><span class="line">    <span class="attribute">table-layout</span>: auto/<span class="built_in">fixed</span>(统一宽度);</span><br><span class="line">    <span class="comment">/* 控制单元格间距（生效的前提是不能合并边框） */</span></span><br><span class="line">    <span class="attribute">border-spacing</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="comment">/* 合并相邻单元格的边框 */</span></span><br><span class="line">    <span class="attribute">border-collapse</span>: <span class="built_in">separate</span>(默认，分开)/<span class="built_in">collapse</span>(合并边框);</span><br><span class="line">    <span class="comment">/* 隐藏没有内容的单元格（前提不能合并边框） */</span></span><br><span class="line">    <span class="attribute">empty-cells</span>: hide;</span><br><span class="line">    <span class="comment">/* 设置表格标题位置 */</span></span><br><span class="line">    <span class="attribute">caption-side</span>: top;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">td</span>,<span class="selector-tag">th</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-背景相关属性"><a href="#4-背景相关属性" class="headerlink" title="4. 背景相关属性"></a>4. 背景相关属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> black solid;</span><br><span class="line">    <span class="comment">/* 设置背景颜色，默认为transparent */</span></span><br><span class="line">    <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">    <span class="comment">/* 设置背景图片 */</span></span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>();</span><br><span class="line">    <span class="comment">/* 设置背景图片的重复方式 */</span></span><br><span class="line">    <span class="attribute">background-repeat</span>: repeat-x/y/no-repeat;</span><br><span class="line">    <span class="comment">/* 控制背景图片的位置（关键词）,写一个词视情况 */</span></span><br><span class="line">    <span class="attribute">background-position</span>: left top/center bottom;</span><br><span class="line">    <span class="comment">/* 控制背景图片的位置（具体像素值）,相对于左上角 */</span></span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="comment">/* 复合属性,不限制顺序和数量 */</span></span><br><span class="line">    <span class="attribute">background</span>: skyblue <span class="built_in">url</span>() no-repeat <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-鼠标属性"><a href="#5-鼠标属性" class="headerlink" title="5. 鼠标属性"></a>5. 鼠标属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer/move/wait/crosshair/help;</span><br><span class="line">    <span class="comment">/* 自定义 */</span></span><br><span class="line">    <span class="attribute">cursor</span>；url(...,pointer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>MDN可查询更多属性值</li></ul>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS03.像素与颜色</title>
      <link href="/2023/11/02/CSS03.%E5%83%8F%E7%B4%A0%E4%B8%8E%E9%A2%9C%E8%89%B2/"/>
      <url>/2023/11/02/CSS03.%E5%83%8F%E7%B4%A0%E4%B8%8E%E9%A2%9C%E8%89%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS03-像素与颜色"><a href="#CSS03-像素与颜色" class="headerlink" title="CSS03.像素与颜色"></a>CSS03.像素与颜色</h1><h2 id="一、像素"><a href="#一、像素" class="headerlink" title="一、像素"></a>一、像素</h2><ul><li>电脑上的一个最小发光单元</li><li>电脑默认显示比例125% -&gt; 设置100px显示125px</li></ul><h2 id="二、颜色"><a href="#二、颜色" class="headerlink" title="二、颜色"></a>二、颜色</h2><h3 id="1-颜色名-直接使用颜色对应的英文单词"><a href="#1-颜色名-直接使用颜色对应的英文单词" class="headerlink" title="1. 颜色名-直接使用颜色对应的英文单词"></a>1. 颜色名-直接使用颜色对应的英文单词</h3><ul><li>编写简单</li><li>但有限且不精确</li><li>MDN官方文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/named-color">https://developer.mozilla.org/zh-CN/docs/Web/CSS/named-color</a></li></ul><h3 id="2-RGB与RGBA"><a href="#2-RGB与RGBA" class="headerlink" title="2. RGB与RGBA"></a>2. RGB与RGBA</h3><blockquote><p>格式：rgb(a,b,c)</p></blockquote><ul><li>红绿蓝，计算机三原色</li><li>数值全写成0-255，或者0%-100%</li><li>A代表透明度，值为0-1或百分比，由透至实</li></ul><h3 id="3-HEX与HEXA"><a href="#3-HEX与HEXA" class="headerlink" title="3. HEX与HEXA"></a>3. HEX与HEXA</h3><blockquote><p>格式:#??????(16进制)</p></blockquote><ul><li>每两位代表红绿蓝</li><li>A代表透明度</li><li>简写：#fcdf(将ff,cc,dd简写为f,c,d)</li><li>IE不支持HEXA，但支持HEX</li></ul><h3 id="4-HSL与HSLA（不常用）"><a href="#4-HSL与HSLA（不常用）" class="headerlink" title="4. HSL与HSLA（不常用）"></a>4. HSL与HSLA（不常用）</h3><blockquote><p>格式：hsl(hue,saturation,lightness)</p></blockquote><ul><li>色相（°），饱和度(色彩鲜艳度，越小黑色浓度越高)，亮度</li><li>例：hsl（0deg,100%，50%）-&gt;正红色</li><li>deg可以省略</li></ul>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS02.选择器</title>
      <link href="/2023/10/27/CSS02.%E9%80%89%E6%8B%A9%E5%99%A8/"/>
      <url>/2023/10/27/CSS02.%E9%80%89%E6%8B%A9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS02-选择器"><a href="#CSS02-选择器" class="headerlink" title="CSS02.选择器"></a>CSS02.选择器</h1><h2 id="一、基本选择器"><a href="#一、基本选择器" class="headerlink" title="一、基本选择器"></a>一、基本选择器</h2><h3 id="1-通配选择器"><a href="#1-通配选择器" class="headerlink" title="1. 通配选择器"></a>1. 通配选择器</h3><blockquote><p>选中所有HTML元素</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-元素选择器"><a href="#2-元素选择器" class="headerlink" title="2. 元素选择器"></a>2. 元素选择器</h3><blockquote><p>为页面中<strong>某种元素</strong>设置统一样式</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-类选择器"><a href="#3-类选择器" class="headerlink" title="3. 类选择器"></a>3. 类选择器</h3><blockquote><p>根据class属性，选择某一类元素</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.class1</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.class2</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--class不可以为纯数字；可以同时有多个值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;class1 class2&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-ID选择器"><a href="#4-ID选择器" class="headerlink" title="4. ID选择器"></a>4. ID选择器</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#id1</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#id2</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--ID最好以字母开头，无空格，区分大小写；</span></span><br><span class="line"><span class="comment">唯一；可以同时拥有class属性--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;id1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、交并集选择器"><a href="#二、交并集选择器" class="headerlink" title="二、交并集选择器"></a>二、交并集选择器</h2><h3 id="1-交集选择器"><a href="#1-交集选择器" class="headerlink" title="1. 交集选择器"></a>1. 交集选择器</h3><blockquote><p>选中同时符合多个条件的元素</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*常用：元素.类名*/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.class1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*.类.类*/</span></span><br><span class="line"><span class="selector-class">.class1</span><span class="selector-class">.class2</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-并集选择器"><a href="#2-并集选择器" class="headerlink" title="2. 并集选择器"></a>2. 并集选择器</h3><blockquote><p>选中多个选择器对应的元素</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*任何形式的选择器都可以作为并集选择器的一部分*/</span></span><br><span class="line"><span class="selector-class">.class1</span>,</span><br><span class="line"><span class="selector-class">.class2</span></span><br><span class="line"><span class="selector-class">.class3</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、其他选择器"><a href="#三、其他选择器" class="headerlink" title="三、其他选择器"></a>三、其他选择器</h2><p><strong>HTML元素间的关系</strong>：</p><ul><li>父元素：<code>直接</code>包裹某个元素的元素，即该元素的元素。</li><li>子元素：被父元素<code>直接</code>包含的元素。</li><li>祖先元素：父亲的父亲的…,都是祖先</li><li>后代元素：儿子的儿子…</li><li>兄弟元素：具有相同父元素的元素</li></ul><h3 id="1-后代选择器"><a href="#1-后代选择器" class="headerlink" title="1. 后代选择器"></a>1. 后代选择器</h3><blockquote><p>选中指定元素中，符合要求的后代元素。</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*祖先 后代，可以写任意选择器搭配*/</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ol</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.class1</span> <span class="selector-class">.class2</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-子代选择器"><a href="#2-子代选择器" class="headerlink" title="2. 子代选择器"></a>2. 子代选择器</h3><blockquote><p>选中指定元素中，符合要求的儿子元素</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*仅看儿子*/</span></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="selector-class">.foot</span>&gt;<span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-兄弟选择器"><a href="#3-兄弟选择器" class="headerlink" title="3. 兄弟选择器"></a>3. 兄弟选择器</h3><blockquote><p>选中指定元素中，符合要求的兄弟元素</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*相邻兄弟选择器：选择div之后紧邻的兄弟p元素*/</span></span><br><span class="line"><span class="selector-tag">div</span>+<span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">/*通用兄弟选择器：选择div之后所有的兄弟p元素*/</span></span><br><span class="line"><span class="selector-tag">div</span>~<span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h3 id="4-属性选择器"><a href="#4-属性选择器" class="headerlink" title="4. 属性选择器"></a>4. 属性选择器</h3><blockquote><p>选中属性值符合一定要求的元素</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*1.选中具有title属性的元素*/</span></span><br><span class="line"><span class="selector-attr">[title]</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;   </span><br><span class="line"><span class="comment">/*2.选中title为abc的元素*/</span></span><br><span class="line"><span class="selector-attr">[title=<span class="string">&quot;abc&quot;</span>]</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;   </span><br><span class="line"><span class="comment">/*3.选中title以b开头的元素*/</span></span><br><span class="line"><span class="selector-attr">[title^=<span class="string">&quot;b&quot;</span>]</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">/*4.选中title以c结尾的元素*/</span></span><br><span class="line"><span class="selector-attr">[title$=<span class="string">&quot;c&quot;</span>]</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">/*5.选中title属性值中有d的元素*/</span></span><br><span class="line"><span class="selector-attr">[title*=<span class="string">&quot;d&quot;</span>]</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="四、伪类选择器"><a href="#四、伪类选择器" class="headerlink" title="四、伪类选择器"></a>四、伪类选择器</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1. 概念"></a>1. 概念</h3><blockquote><p>像类但不是类，选中特殊状态的元素</p></blockquote><h3 id="2-动态伪类"><a href="#2-动态伪类" class="headerlink" title="2. 动态伪类"></a>2. 动态伪类</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*选中的是没有访问过的a元素*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*选中的是访问过的a元素*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>：gray;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*选中的是鼠标悬浮状态的a元素*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:skyblue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*选中的是激活状态的a元素*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*仅有表单类元素才能使用*/</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:orange;</span><br><span class="line">    backgroound-<span class="attribute">color</span>:green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>遵守<code>LVHA</code>的顺序！</p></blockquote><h3 id="3-常用结构伪类"><a href="#3-常用结构伪类" class="headerlink" title="3. 常用结构伪类"></a>3. 常用结构伪类</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/*选中的是1.div的第一个p子元素。2.必须同时满足p元素和div的大儿子（考虑所有的兄弟）！*/</span></span><br><span class="line"> <span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:first</span>-child&#123;</span><br><span class="line">     <span class="attribute">color</span>:red;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/*选中的是1.div的后代p元素，2.父亲是谁无所谓(任何都可以)，但3.必须是其父亲div的大儿子（考虑所有的兄弟）*/</span></span><br><span class="line"> <span class="selector-tag">div</span> <span class="selector-tag">p</span><span class="selector-pseudo">:first</span>-child&#123;</span><br><span class="line">     <span class="attribute">color</span>:red;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/*选中的是1.p元素，2.且父亲是谁无所谓，但3.必须是其父亲的大儿子（考虑所有的兄弟）*/</span></span><br><span class="line"> <span class="selector-tag">p</span><span class="selector-pseudo">:first</span>-child&#123;</span><br><span class="line">     <span class="attribute">color</span>：red;</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*选中的是div的小儿子p元素，必须同时满足p元素和小儿子*/</span></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:last-child</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是div的第n个子元素，必须同时满足p元素和三儿子*/</span></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是div的第2n个子元素，必须同时满足p元素和偶数even;奇数2n+1*/</span></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>n/even) &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是div的前五个子元素，参数内公式一定为an+b*/</span></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:nth-child</span>(-n+<span class="number">5</span>) &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;    </span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是div的p元素第n个子元素(同类型儿子)*/</span></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:first</span>-of-type &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:last-of-type</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:nth-of-type</span>(n) &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h3 id="4-其他结构伪类"><a href="#4-其他结构伪类" class="headerlink" title="4. 其他结构伪类"></a>4. 其他结构伪类</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*选中的是div中倒数第n个p子元素*/</span></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:nth-last-child</span>(n) &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是div的倒数，同类型第n个p子元素*/</span></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:nth-last-of-type</span>(n) &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是div的独生子女（所有元素）*/</span></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:only-child</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;    </span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是没有同类型兄弟的p元素（p元素）*/</span></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:only-of-type</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;    </span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是根元素html*/</span></span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是没有内容的元素*/</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:empty</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-否定伪类"><a href="#5-否定伪类" class="headerlink" title="5. 否定伪类"></a>5. 否定伪类</h3><blockquote><p>排除<strong>满足括号内条件</strong>的元素</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*选中的是div的儿子p元素，但是排除类名为fail的元素*/</span></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.fail</span>) &#123;</span><br><span class="line">    <span class="attribute">color</span>：red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是div的儿子p元素，但是排除title属性值以“aaaa”开头的元素*/</span></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:not</span>(<span class="selector-attr">[title^=<span class="string">&quot;aaaa&quot;</span>]</span>) &#123;</span><br><span class="line">    <span class="attribute">color</span>：red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是div的儿子p元素，但排除大儿子*/</span></span><br><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:not</span>(<span class="selector-pseudo">:first</span>-child) &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-UI伪类"><a href="#6-UI伪类" class="headerlink" title="6. UI伪类"></a>6. UI伪类</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*选中的是勾选的复选框或单选按钮,单选复选框不可以调颜色*/</span></span><br><span class="line"><span class="selector-tag">input</span>：checked &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>：<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是被禁用的input元素*/</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:disabled</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: gray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是被可用的input元素*/</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:enabled</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-目标伪类"><a href="#7-目标伪类" class="headerlink" title="7. 目标伪类"></a>7. 目标伪类</h3><blockquote><p>选中锚点所指向的元素</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>：target &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-语言伪类"><a href="#8-语言伪类" class="headerlink" title="8. 语言伪类"></a>8. 语言伪类</h3><blockquote><p>根据指定的语言选择元素（本质是看lang属性的值）</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:lang</span>(en) &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-pseudo">:lang</span>(zh-CN) &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="五、伪元素选择器"><a href="#五、伪元素选择器" class="headerlink" title="五、伪元素选择器"></a>五、伪元素选择器</h2><blockquote><p>很像元素，但不是元素，选中元素中的一些特殊位置</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 选中的是div中的第一个文字*/</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">::first-letter</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是div中的第一行文字*/</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">::first-line</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是div中被鼠标选中的文字*/</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">::selection</span> &#123;</span><br><span class="line">     <span class="attribute">background-color</span>: green;</span><br><span class="line">     <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是input元素中的提示文字*/</span> </span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::placeholder</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是P元素最开始的位置，随后创建一个子元素*/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;￥&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中的是p元素最后的位置，随后创建一个子元素*/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;.00&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="六、选择器优先级"><a href="#六、选择器优先级" class="headerlink" title="六、选择器优先级"></a>六、选择器优先级</h2><ol><li>行内&gt;内联&#x3D;外联</li><li>后写覆盖新写：要求必须为同类型选择器</li><li>属性值后的<code>!important</code>（慎用）&gt;（行内）&gt;ID选择器&gt;类选择器&gt;元素选择器&gt;通配选择器&gt;继承的样式</li><li>复杂选择器的优先级<blockquote><p>权重格式：（a,b,c），从前往后选择那种样式<br>a: ID选择器的个数<br>b: 类、伪类、属性选择器的个数<br>c: 元素、伪元素选择器的个数</p></blockquote></li></ol><ul><li>权重相同时后写覆盖</li><li>VScode鼠标悬浮可以直接查看权重</li><li>并集选择器的每一部分是分开计算的</li></ul><h2 id="七、CSS三大特性"><a href="#七、CSS三大特性" class="headerlink" title="七、CSS三大特性"></a>七、CSS三大特性</h2><ol><li>层叠性<blockquote><p>如果发生了<code>样式冲突</code>，那就会根据<code>选择器的优先级</code>进行样式的层叠（覆盖）</p></blockquote></li><li>继承性<blockquote><p>元素会自动拥有其<code>父元素或其祖先元素</code>上所设置的<code>某些样式</code><br>常见可继承属性：text-??,font-??,line-??,color…</p></blockquote></li></ol><ul><li>规则：优先继承距离近的</li><li>可以在MDN中查看是否继承</li></ul><ol start="3"><li>优先级</li></ol>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS01.基础知识</title>
      <link href="/2023/10/27/CSS01.%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/10/27/CSS01.%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS01-基础知识"><a href="#CSS01-基础知识" class="headerlink" title="CSS01.基础知识"></a>CSS01.基础知识</h1><blockquote><p>全称：层叠样式表(<strong>Cascading Style Sheets</strong>),也是一种标记语言，用于给HTML结构设置样式</p></blockquote><h2 id="一、-编写位置"><a href="#一、-编写位置" class="headerlink" title="一、 编写位置"></a>一、 编写位置</h2><h3 id="1-行内样式-x2F-内联样式-不推荐"><a href="#1-行内样式-x2F-内联样式-不推荐" class="headerlink" title="1. 行内样式&#x2F;内联样式(不推荐)"></a>1. 行内样式&#x2F;内联样式(不推荐)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--style中均为键值对，推荐小写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color:red;font-size:40px;&quot;</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-内部样式"><a href="#2-内部样式" class="headerlink" title="2. 内部样式"></a>2. 内部样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>:<span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h2</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:blue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>:<span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-外部样式（推荐）"><a href="#3-外部样式（推荐）" class="headerlink" title="3. 外部样式（推荐）"></a>3. 外部样式（推荐）</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>:red;</span><br><span class="line">            <span class="attribute">font-size</span>:<span class="number">40px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">h2</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>:blue;</span><br><span class="line">            <span class="attribute">font-size</span>:<span class="number">60px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;CSS文件位置&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>优点：<ol><li>可以多页面复用</li><li>结构清晰，结构与样式完全分离</li><li>可以触发缓存机制，提高访问速度</li></ol></li><li>优先级1：行内&gt;内部&#x3D;外部</li><li>优先级2：后写的覆盖先写的</li></ul><h2 id="二、语法规范"><a href="#二、语法规范" class="headerlink" title="二、语法规范"></a>二、语法规范</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--选择器+声明块&#123;声明&#125;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*加样式*/</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="三、代码风格"><a href="#三、代码风格" class="headerlink" title="三、代码风格"></a>三、代码风格</h2><h3 id="1-展开风格-平时开发"><a href="#1-展开风格-平时开发" class="headerlink" title="1. 展开风格-平时开发"></a>1. 展开风格-平时开发</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-紧凑风格-项目上线"><a href="#2-紧凑风格-项目上线" class="headerlink" title="2. 紧凑风格-项目上线"></a>2. 紧凑风格-项目上线</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">color</span>: red;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML05.HTML补充</title>
      <link href="/2023/10/27/HTML05.HTML%E8%A1%A5%E5%85%85/"/>
      <url>/2023/10/27/HTML05.HTML%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML05-HTML补充"><a href="#HTML05-HTML补充" class="headerlink" title="HTML05.HTML补充"></a>HTML05.HTML补充</h1><h2 id="1-框架标签"><a href="#1-框架标签" class="headerlink" title="1. 框架标签"></a>1. 框架标签</h2><blockquote><p>嵌入其他资源</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;嵌入网页网址/广告/图片/视频等&quot;</span> <span class="attr">width</span>=<span class="string">&quot;&quot;</span> <span class="attr">height</span>=<span class="string">&quot;&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0/1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--与超链接的target属性配合使用--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https//www.taobao.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;tb&quot;</span>&gt;</span>看淘宝<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">&quot;tb&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--与表单的target属性配合使用--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;https://so.toutiao.com/search&quot;</span> <span class="attr">target</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;keyword&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;搜索&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">&quot;container&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-字符实体（Entity）"><a href="#2-字符实体（Entity）" class="headerlink" title="2.字符实体（Entity）"></a>2.字符实体（Entity）</h2><blockquote><p>用特殊形式表达某一字符</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="symbol">&amp;#160;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="symbol">&amp;lt;</span>h1<span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="symbol">&amp;amp;</span>nbsp;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="symbol">&amp;yen;</span>199<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="symbol">&amp;copy;</span>版权所有<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>2 <span class="symbol">&amp;times;</span> 2 = 4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>2 <span class="symbol">&amp;divide;</span> 2 = 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="symbol">&amp;quot;</span>引号<span class="symbol">&amp;quot;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>MDN字符实体查询表：<br><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Entity">https://developer.mozilla.org/zh-CN/docs/Glossary/Entity</a></p><h2 id="3-全局属性"><a href="#3-全局属性" class="headerlink" title="3. 全局属性"></a>3. 全局属性</h2><ol><li>id<ul><li>id不可重复</li><li>作用：可以与表单控件关联，也可以CSS与JS配合</li><li>以下HTML元素中不可以使用：<code>html,head,mata,script,style,title</code></li></ul></li><li>class<ul><li>给标签指定类名，通过CSS给标签设置样式</li></ul></li><li>style<ul><li>设置CSS样式</li></ul></li><li>dir<ul><li>内容的方向，值：ltr,rtl</li><li>以下HTML元素中不可以使用：<code>html,head,mata,script,style,title</code></li></ul></li><li>title<ul><li>文字提示</li></ul></li><li>lang<ul><li>以下HTML元素中不可以使用：<code>html,head,mata,script,style,title</code></li></ul></li></ol><blockquote><p>全局属性列表：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes</a></p></blockquote><h2 id="4-meta元信息"><a href="#4-meta元信息" class="headerlink" title="4.meta元信息"></a>4.meta元信息</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置字符编码--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--针对IE浏览器的一个兼容性设置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--适配移动端--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span> &gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置网页关键字--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;1,2,3,4(英文逗号隔开)&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置网页描述信息--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;80字以内&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置搜索网页爬虫--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;robots&quot;</span> <span class="attr">content</span>=<span class="string">&quot;index/noindex...&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置网页作者，网页生成工具，网页版权信息--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;auther/generator/copyright&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置网页自动刷新，无url为本网页定时刷新--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;3；url=跳转网站&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>完整元数据元素：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML04.列表、表格与表单</title>
      <link href="/2023/10/25/HTML04.%E5%88%97%E8%A1%A8%E3%80%81%E8%A1%A8%E6%A0%BC%E4%B8%8E%E8%A1%A8%E5%8D%95/"/>
      <url>/2023/10/25/HTML04.%E5%88%97%E8%A1%A8%E3%80%81%E8%A1%A8%E6%A0%BC%E4%B8%8E%E8%A1%A8%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML04-列表、表格与表单"><a href="#HTML04-列表、表格与表单" class="headerlink" title="HTML04.列表、表格与表单"></a>HTML04.列表、表格与表单</h1><h2 id="一、列表"><a href="#一、列表" class="headerlink" title="一、列表"></a>一、列表</h2><h3 id="1-有序列表（Ordered-List）"><a href="#1-有序列表（Ordered-List）" class="headerlink" title="1. 有序列表（Ordered List）"></a>1. 有序列表（Ordered List）</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span>(List Item)</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;xxx&quot;</span>&gt;</span>用li包裹其他元素<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-无序列表（Unordered-List）"><a href="#2-无序列表（Unordered-List）" class="headerlink" title="2. 无序列表（Unordered List）"></a>2. 无序列表（Unordered List）</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>可以嵌套<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>可以嵌套<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-自定义列表（Definition-List）"><a href="#3-自定义列表（Definition-List）" class="headerlink" title="3. 自定义列表（Definition List）"></a>3. 自定义列表（Definition List）</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>列表项<span class="tag">&lt;/<span class="name">dt</span>&gt;</span>(Definition Title术语名称)</span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>列表项<span class="tag">&lt;/<span class="name">dd</span>&gt;</span>(Definition Description术语描述)</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、表格"><a href="#二、表格" class="headerlink" title="二、表格"></a>二、表格</h2><h3 id="1-基本结构"><a href="#1-基本结构" class="headerlink" title="1. 基本结构"></a>1. 基本结构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--border仅仅控制外围边框宽度，宽度受单元格字数影响，高度表示表格至少的高度--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;边框距离&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--无属性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span> <span class="attr">height</span>=<span class="string">&quot;&quot;</span> <span class="attr">align</span>=<span class="string">&quot;left/center/right&quot;</span> <span class="attr">valign</span>=<span class="string">&quot;top/middle/bottom&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">&quot;&quot;</span> <span class="attr">align</span>=<span class="string">&quot;left/center/right&quot;</span> <span class="attr">valign</span>=<span class="string">&quot;top/middle/bottom&quot;</span>&gt;</span>(行)</span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">&quot;&quot;</span> <span class="attr">height</span>=<span class="string">&quot;&quot;</span> <span class="attr">align</span>=<span class="string">&quot;left/center/right&quot;</span> <span class="attr">valign</span>=<span class="string">&quot;top/middle/bottom&quot;</span>&gt;</span>单元格<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>单元格<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>单元格<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">height</span>=<span class="string">&quot;&quot;</span> <span class="attr">align</span>=<span class="string">&quot;left/center/right&quot;</span> <span class="attr">valign</span>=<span class="string">&quot;top/middle/bottom&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span>(行)</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>data1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容单元格<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容单元格<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span>(行)</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>data2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容单元格<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容单元格<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">tfoot</span> <span class="attr">height</span>=<span class="string">&quot;&quot;</span> <span class="attr">align</span>=<span class="string">&quot;left/center/right&quot;</span> <span class="attr">valign</span>=<span class="string">&quot;top/middle/bottom&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span>(行)</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>共计<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-跨行与跨列"><a href="#2-跨行与跨列" class="headerlink" title="2. 跨行与跨列"></a>2. 跨行与跨列</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;跨几列&quot;</span>&gt;</span>跨列<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;跨几行&quot;</span>&gt;</span>跨行<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="三、表单"><a href="#三、表单" class="headerlink" title="三、表单"></a>三、表单</h2><h3 id="1-基本结构-1"><a href="#1-基本结构-1" class="headerlink" title="1. 基本结构"></a>1. 基本结构</h3><blockquote><p>基本流程：提交表单-响应</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--action(表单提交地址)与name的值为搜索引擎规定的,method默认get--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;htts://www.baidu.com/s&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_self/_blank&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get/post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;wd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>百度搜索<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;htts://search.jd.com/search&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;keyword&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>京东搜索<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-常用控件"><a href="#2-常用控件" class="headerlink" title="2. 常用控件"></a>2. 常用控件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;htts://search.jd.com/search&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--文本输入框--&gt;</span></span><br><span class="line">    账户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;account&quot;</span> <span class="attr">value</span>=<span class="string">&quot;default&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;最大长度&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--密码输入框--&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;最大长度&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--单选框与复选框--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span> <span class="attr">checked</span>&gt;</span>女</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;smoke&quot;</span> &gt;</span>抽烟</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dsrink&quot;</span> <span class="attr">checked</span>&gt;</span>喝酒</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;perm&quot;</span> <span class="attr">checked</span>&gt;</span>烫头</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--文本域，可以换行--&gt;</span></span><br><span class="line">    其他：<span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;other&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;列数&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;行数&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--下拉框--&gt;</span></span><br><span class="line">    籍贯：</span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;place&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;冀&quot;</span> <span class="attr">selected</span>&gt;</span>河北<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;沪&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--隐藏域,作用：提交表单时，携带一些固定的信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tag&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>确认<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--也是确认，不能写name属性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;这也是确认&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--重置按钮--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;这也是重置&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--普通按钮，button默认为submits_type控件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span>普通按钮，不提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;这也是普通按钮&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>input控件总结：<ol><li>type:组件类型</li><li>name：指定数据名称，submit控件不需要</li><li>value：对于输入框：默认值；对于单选与复选框：选项对应的提交值；对于按钮：按钮文字</li><li>disabled：不可见</li><li>maxlength：用于输入框，设置最大可输入长度</li><li>checked:用于单选和复选，默认选中</li></ol></li></ul><h3 id="3-禁用表单控件"><a href="#3-禁用表单控件" class="headerlink" title="3. 禁用表单控件"></a>3. 禁用表单控件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">disabled</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> &gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-label标签"><a href="#4-label标签" class="headerlink" title="4. label标签"></a>4. label标签</h3><blockquote><p>实现表单空间与文字的关联，即点击文字对应表单空间就会获取焦点</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--第一种，for与id对应，与name无关--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;zh&quot;</span>&gt;</span>账户：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;zh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;account&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--第二种--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">    账户：</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;zh&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;account&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-fieldset与legend"><a href="#5-fieldset与legend" class="headerlink" title="5. fieldset与legend"></a>5. fieldset与legend</h3><blockquote><p>fieldset对表单控件进行分类，legend是分类的标题</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">legend</span>&gt;</span>主要信息<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML03.HTML超链接</title>
      <link href="/2023/10/25/HTML03.HTML%E8%B6%85%E9%93%BE%E6%8E%A5/"/>
      <url>/2023/10/25/HTML03.HTML%E8%B6%85%E9%93%BE%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML03-HTML超链接"><a href="#HTML03-HTML超链接" class="headerlink" title="HTML03.HTML超链接"></a>HTML03.HTML超链接</h1><h2 id="1-跳转网页"><a href="#1-跳转网页" class="headerlink" title="1.跳转网页"></a>1.跳转网页</h2><blockquote><p>从当前页面进行跳转</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;本地网页/网络网页&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank(新页签打开)/_self(默认，当前页签打开)&quot;</span> &gt;</span> </span><br></pre></td></tr></table></figure><ul><li>多空格或多回车均识别为一个空格</li><li>特殊规则：行内元素，但可以包裹除自身以外的任何元素</li></ul><h2 id="2-跳转文件"><a href="#2-跳转文件" class="headerlink" title="2.跳转文件"></a>2.跳转文件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;文件地址&quot;</span> <span class="attr">download</span>=<span class="string">&quot;下载时文件名（默认为文件名）&quot;</span> &gt;</span> </span><br></pre></td></tr></table></figure><ul><li>浏览器可以直接打开的文件: 直接打开</li><li>浏览器不可以直接打开的文件：默认下载</li><li>可以打开，但强制下载，添加属性<code>download</code>(值可省略)：</li></ul><h2 id="3-跳转锚点"><a href="#3-跳转锚点" class="headerlink" title="3.跳转锚点"></a>3.跳转锚点</h2><blockquote><p>跳转至网页中的标记点</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#锚点名&quot;</span>&gt;</span>跳转至锚点<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--name和id区分大小写，id不要以数字开头，均需要唯一--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;锚点名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">或者</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;锚点名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>  (推荐这种)</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>回到顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>刷新页面<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:JS脚本;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--还可以跳转其他页面的锚点--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://wangzhan.com#锚点&quot;</span>&gt;</span>跳转至其他网页的锚点<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-唤起指定应用"><a href="#4-唤起指定应用" class="headerlink" title="4.唤起指定应用"></a>4.唤起指定应用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--唤起设备拨号--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;tel:10010&quot;</span>&gt;</span>电话联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--唤起设备发送邮件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:10010@qq.com&quot;</span>&gt;</span>邮箱联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--唤起设备发送短信--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;sms:10086&quot;</span>&gt;</span>短信联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-最后"><a href="#5-最后" class="headerlink" title="5.最后"></a>5.最后</h2><ul><li>“超文本”(hypertext)是指连接单个网站内或多个网站间的网页的链接。 ————MDN</li></ul><blockquote><p>超文本是一种组织信息的方式，通过超链接将不同空间的<strong>文字、图片</strong>等各种信息组织在一起，能从当前阅读的内容，跳转到超链接所指向的内容(<code>页面,文件,锚点,应用</code>)。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML02.HTML4标签</title>
      <link href="/2023/10/23/HTML02.HTML4%E6%A0%87%E7%AD%BE/"/>
      <url>/2023/10/23/HTML02.HTML4%E6%A0%87%E7%AD%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML02-HTML4标签"><a href="#HTML02-HTML4标签" class="headerlink" title="HTML02.HTML4标签"></a>HTML02.HTML4标签</h1><blockquote><p>《标签参考手册》：<a href="https://www.w3school.com.cn/tags/index.asp">https://www.w3school.com.cn/tags/index.asp</a></p></blockquote><h2 id="1-排版标签"><a href="#1-排版标签" class="headerlink" title="1. 排版标签"></a>1. 排版标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--标题标签最多到h6，且不允许互相嵌套--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>最重要的标题且最好唯一<span class="tag">&lt;/<span class="name">h1</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--段落标签中不能有h,p,div--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>容器<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-语义化标签"><a href="#2-语义化标签" class="headerlink" title="2.语义化标签"></a>2.语义化标签</h2><blockquote><p>语义化：<strong>标签默认的效果不重要，语义最重要！</strong><br>语义化标签：用特定的标签去表达特定的含义</p></blockquote><ul><li>语义化<code>优势</code>：<ol><li>代码可读性强</li><li>有利于SEO(搜索引擎优化)</li><li>方便设备解析（屏幕&#x2F;盲人阅读器）</li></ol></li></ul><h2 id="3-块级元素与行内元素"><a href="#3-块级元素与行内元素" class="headerlink" title="3.块级元素与行内元素"></a>3.块级元素与行内元素</h2><blockquote><p>块级元素：独占一行，如h,p,div等<br>行内元素：不独占一行，如input,span等</p></blockquote><ul><li>使用规则：<ol><li><code>块级元素</code>中能写块级元素和行内元素（几乎都可以）</li><li><code>行内元素</code>中能写行内元素，但不能写<code>块级元素</code></li><li>特殊规则：h1-h6不能互相嵌套</li><li>特殊规则：p标签中不能写块元素</li></ol></li></ul><h2 id="4-文本标签"><a href="#4-文本标签" class="headerlink" title="4.文本标签"></a>4.文本标签</h2><blockquote><p>定义用于包裹词汇、短语，微观层面。</p></blockquote><ul><li>排版标签相对更加宏观。</li></ul><ol><li><p>常用标签</p><table><thead><tr><th>标签名</th><th>标签语义</th></tr></thead><tbody><tr><td>em</td><td>着重内容</td></tr><tr><td>strong</td><td>十分重要的内容</td></tr><tr><td>span</td><td>无语义，包裹短语的通用容器</td></tr></tbody></table></li><li><p>其他文本标签</p><table><thead><tr><th>标签名</th><th>标签语义</th></tr></thead><tbody><tr><td>del</td><td>删除线</td></tr><tr><td>ins</td><td>下划线</td></tr><tr><td>sub</td><td>下标</td></tr><tr><td>sup</td><td>上标</td></tr></tbody></table></li></ol><h2 id="5-图片标签"><a href="#5-图片标签" class="headerlink" title="5.图片标签"></a>5.图片标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--alt属性用于网站搜索+图片缺失时显示+盲人阅读器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">width</span>=<span class="string">&quot;宽&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高&quot;</span> <span class="attr">src</span>=<span class="string">&quot;地址&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;描述文本&quot;</span> &gt;</span></span><br></pre></td></tr></table></figure><ul><li>补充：<ol><li><code>&lt;map&gt;</code>标签定义一个客户端图像映射。图像映射指带有可点击区域的一幅图像</li><li><code>&lt;area&gt;</code>标签定义图像映射中的区域；area元素总是嵌套在<code>&lt;map&gt;</code>标签中</li></ol></li></ul><h2 id="6-其他常用标签"><a href="#6-其他常用标签" class="headerlink" title="6.其他常用标签"></a>6.其他常用标签</h2><ol><li>换行标签-单标签<code>&lt;br&gt;</code></li><li>分割线标签-单标签<code>&lt;hr&gt;</code></li><li>按原文显示<code>&lt;pre&gt;&lt;/pre&gt;</code></li></ol><h2 id="7-图片格式"><a href="#7-图片格式" class="headerlink" title="7.图片格式"></a>7.图片格式</h2><ol><li>.jpg: <strong>有损压缩</strong>，<strong>支持颜色丰富、占用空间较小</strong>、不支持透明背景、不支持动态图</li><li>.png: <strong>无损压缩</strong>，<strong>支持颜色丰富</strong>、占用空间略大、<strong>支持透明背景</strong>、不支持动态图 -&gt; 透明背景logo或高质量图片</li><li>.bmp: <strong>不压缩</strong>，<strong>支持颜色丰富、保留细节更多</strong>、占用空间极大、不支持透明背景、不支持动态图 </li><li>.gif: 支持颜色256种较少、<strong>支持简单透明背景</strong>、<strong>支持动态图</strong></li><li>.webp:谷歌推出，兼容性不佳,未来可期（.jpg.webp）</li><li>.base64：将图片编码<br><a href="https://c.runoob.com/front-end/59/">https://c.runoob.com/front-end/59/</a></li></ol><h2 id="8-文件路径"><a href="#8-文件路径" class="headerlink" title="8.文件路径"></a>8.文件路径</h2><ol><li>相对路径：<ul><li><code>./文件名</code> -&gt; 当前文件夹；同级文件夹可以直接写文件名（省略.&#x2F;）</li><li><code>/</code> -&gt; 下一级</li><li><code>../</code> -&gt; 上一级文件夹</li></ul></li><li>绝对路径<ul><li>本地绝对路径（不可取）</li><li>网络绝对路径</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML01.Web与HTML基础知识</title>
      <link href="/2023/10/23/HTML01.Web%E4%B8%8EHTML%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/10/23/HTML01.Web%E4%B8%8EHTML%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML01-Web与HTML基础知识"><a href="#HTML01-Web与HTML基础知识" class="headerlink" title="HTML01.Web与HTML基础知识"></a>HTML01.Web与HTML基础知识</h1><h2 id="一、Web基础知识"><a href="#一、Web基础知识" class="headerlink" title="一、Web基础知识"></a>一、Web基础知识</h2><h3 id="1-架构区别"><a href="#1-架构区别" class="headerlink" title="1. 架构区别"></a>1. 架构区别</h3><ul><li>C&#x2F;S架构：Client（客户端） server -&gt; App</li><li>B&#x2F;S架构：Browser（服务器）server -&gt; Web</li></ul><h3 id="2-五大浏览器，四大内核"><a href="#2-五大浏览器，四大内核" class="headerlink" title="2. 五大浏览器，四大内核"></a>2. 五大浏览器，四大内核</h3><ul><li>Chrome:早期使用webkit,现在使用Blink内核</li><li>Safari:webkit</li><li>IE:Trident</li><li>Firefox:Cecko</li><li>Opera:Presto(已放弃维护)</li></ul><h3 id="3-网页组成（网页标准）"><a href="#3-网页组成（网页标准）" class="headerlink" title="3. 网页组成（网页标准）"></a>3. 网页组成（网页标准）</h3><ul><li>结构+表现+行为 -&gt; HTML+CSS+JS</li></ul><h3 id="4-HTML"><a href="#4-HTML" class="headerlink" title="4. HTML"></a>4. HTML</h3><blockquote><p>全称：<strong>HyperText Markdown Language(超文本标记语言)</strong></p></blockquote><ul><li>超文本：内容更加丰富</li><li>标记：标记符号</li></ul><blockquote><p>Web浏览器的作用是读取HTML文档，并以网页的形式显示出它们。<br>浏览器不会显示HTML标签，而是使用标签来解释页面的内容。</p></blockquote><h2 id="二、HTML基础知识"><a href="#二、HTML基础知识" class="headerlink" title="二、HTML基础知识"></a>二、HTML基础知识</h2><h3 id="1-标签"><a href="#1-标签" class="headerlink" title="1. 标签"></a>1. 标签</h3><ol><li>绝大部分均为双标签，起始&#x2F;结束标签</li><li>单标签，如 <code>input</code></li><li>可嵌套</li></ol><h3 id="2-标签属性"><a href="#2-标签属性" class="headerlink" title="2. 标签属性"></a>2. 标签属性</h3><ol><li>有通用属性，也有特有属性</li><li>属性名均为<em>W3C</em>规定好的</li><li>属性名与值不区分大小写，但<code>推荐小写</code></li><li>值推荐<code>双引号</code></li><li>特殊属性只有名无值，如 <code>disabled</code></li><li>不写同名属性，后写失效</li></ol><h3 id="3-HTML标准结构"><a href="#3-HTML标准结构" class="headerlink" title="3. HTML标准结构"></a>3. HTML标准结构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-注释"><a href="#4-注释" class="headerlink" title="4. 注释"></a>4. 注释</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注释,不可嵌套--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-HTML5文档声明"><a href="#5-HTML5文档声明" class="headerlink" title="5. HTML5文档声明"></a>5. HTML5文档声明</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-编辑器与插件"><a href="#6-编辑器与插件" class="headerlink" title="6. 编辑器与插件"></a>6. 编辑器与插件</h3><blockquote><p>VSCode+LiveServer（方便调试）</p></blockquote><ul><li>直接打开HTML文件：直接通过浏览器打开</li><li>LiveServer:开启服务器，并通过浏览器访问 -&gt; 贴近项目上线</li></ul><h3 id="7-字符编码"><a href="#7-字符编码" class="headerlink" title="7. 字符编码"></a>7. 字符编码</h3><ol><li><p><strong>字符集</strong>：</p> <img src="https://raw.githubusercontent.com/Bzy924604345/My_Drawing_bed/master/personal_works/20231023195700.png"/></li><li><p>存取原则</p><ul><li><code>存储</code>时采用合适字符编码 -&gt; 否则<code>丢失数据</code></li><li><code>读取</code>时采用存储相同的字符编码 -&gt; 否则<code>乱码</code></li><li>网页默认<code>UTF-8</code><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">chatset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="8-设置语言"><a href="#8-设置语言" class="headerlink" title="8. 设置语言"></a>8. 设置语言</h3><blockquote><p>写法：语言-国家&#x2F;地区</p></blockquote><ul><li>《语言代码参考手册》：<a href="https://www.w3school.com.cn/tags/html_ref_language_codes.asp">https://www.w3school.com.cn/tags/html_ref_language_codes.asp</a></li><li>《国家&#x2F;地区代码参考手册》：<a href="https://www.w3school.com.cn/tags/html_ref_country_codes.asp">https://www.w3school.com.cn/tags/html_ref_country_codes.asp</a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span> #中文-中国大陆（简体中文）</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-TW&quot;</span>&gt;</span> #中文-中国台湾（繁体中文）</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span> #中文</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en-US&quot;</span>&gt;</span> #英语-美国</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en-GB&quot;</span>&gt;</span> #英语-英国</span><br></pre></td></tr></table></figure></li></ul><h3 id="9-开发者文档"><a href="#9-开发者文档" class="headerlink" title="9.开发者文档"></a>9.开发者文档</h3><ul><li>W3C</li><li>W3School:<a href="https://www.w3school.com.cn/index.html">https://www.w3school.com.cn/index.html</a></li><li>MDN:<a href="https://developer.mozilla.org/zh-CN/">https://developer.mozilla.org/zh-CN/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> WebGIS_Study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建 jsoncpp 动态库</title>
      <link href="/2023/06/27/%E6%9E%84%E5%BB%BA%20jsoncpp%20%E5%8A%A8%E6%80%81%E5%BA%93/"/>
      <url>/2023/06/27/%E6%9E%84%E5%BB%BA%20jsoncpp%20%E5%8A%A8%E6%80%81%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h2 id="1-GeoJSON-格式"><a href="#1-GeoJSON-格式" class="headerlink" title="1. GeoJSON 格式"></a>1. GeoJSON 格式</h2><p><a href="https://zhuanlan.zhihu.com/p/539689986">https://zhuanlan.zhihu.com/p/539689986</a></p><h2 id="2-集成jsoncpp库"><a href="#2-集成jsoncpp库" class="headerlink" title="2. 集成jsoncpp库"></a>2. 集成jsoncpp库</h2><ol><li>下载JsonCpp库<br><a href="https://github.com/open-source-parsers/jsoncpp">https://github.com/open-source-parsers/jsoncpp</a></li><li>下载CMake工具（一路默认安装即可）<br><a href="https://cmake.org/download/">https://cmake.org/download/</a></li><li>设置CMake配置-生成项目</li></ol><ul><li>源文件目录</li><li>生成项目目录</li><li>项目config设置<br><img src="/../img/Cpp%E6%9C%9F%E6%9C%AB%E4%BD%9C%E4%B8%9A/4-1.png" alt="4-1"></li></ul><p><strong>尽量不要包含中文路径，可能有BUG</strong><br>4. 编译json_lib动态库<br>5. 将输出的lib、dll、与incude文件存放至项目根目录下<br><img src="/../img/Cpp%E6%9C%9F%E6%9C%AB%E4%BD%9C%E4%B8%9A/4-2.png" alt="4-2"><br>6. 新建项目配置编译器设置</p><ul><li>C&#x2F;C++-附加包含目录：..&#x2F;jsoncpp&#x2F;include</li><li>链接器-常规-附加库目录：..&#x2F;jsoncpp&#x2F;lib</li><li>链接器-输入-附加依赖项：jsoncpp.lib</li></ul><p><strong>至此，使用#include &lt;json&#x2F;json.h&gt;与using namespace Json即可调用jsoncpp接口</strong></p>]]></content>
      
      
      <categories>
          
          <category> Learn_C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>遥感反演模型</title>
      <link href="/2023/06/16/%E9%81%A5%E6%84%9F%E5%8F%8D%E6%BC%94%E6%A8%A1%E5%9E%8B/"/>
      <url>/2023/06/16/%E9%81%A5%E6%84%9F%E5%8F%8D%E6%BC%94%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="遥感反演模型实验"><a href="#遥感反演模型实验" class="headerlink" title="遥感反演模型实验"></a>遥感反演模型实验</h1><h2 id="1-实验内容"><a href="#1-实验内容" class="headerlink" title="1. 实验内容"></a>1. 实验内容</h2><p>利用环境小卫星CCD-18图像反演太湖叶绿素浓度的完整流程，涉及环境小卫星的数据读取、辐射定标、几何校正、大气校正、反演模型建立、遥感反演过程、反演结果验证等内容。</p><h2 id="2-实验过程"><a href="#2-实验过程" class="headerlink" title="2. 实验过程"></a>2. 实验过程</h2><h3 id="2-1-导入环境"><a href="#2-1-导入环境" class="headerlink" title="2.1 导入环境"></a>2.1 导入环境</h3><p>copy文件“ENVI_HJ1A1B_Tools.sav”至路径：安装目录-ENV53-classic-save_add<br><strong>【文件说明】</strong></p><ol><li>.jpg:文件缩略图</li><li>.tif:存储不同波段数据</li><li>.xml:记录产品id，场景id，采集时间，分辨率等说明信息、定标参数</li></ol><h3 id="2-2-导入数据"><a href="#2-2-导入数据" class="headerlink" title="2.2 导入数据"></a>2.2 导入数据</h3><ol><li>加载</li></ol><p><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE.png" alt="导入数据"><br><strong>导入结果：</strong><br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E5%AF%BC%E5%85%A5%E7%BB%93%E6%9E%9C.png" alt="result"><br>2. 右键-load-cir：显示假彩色结果<br>3. 右键图像-Z profile:查看地物光谱</p><h3 id="2-3-辐射定标（裁剪区域）"><a href="#2-3-辐射定标（裁剪区域）" class="headerlink" title="2.3 辐射定标（裁剪区域）"></a>2.3 辐射定标（裁剪区域）</h3><ol><li>File-Save File As-envi standard：提取感兴趣区域<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E6%8F%90%E5%8F%96%E6%84%9F%E5%85%B4%E8%B6%A3%E5%8C%BA%E5%9F%9F.png" alt="提取感兴趣区域"><br>2.输出文件：HJ1B-CCD1-cal-subset.dat<br><strong>裁剪结果：</strong><br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E8%A3%81%E5%89%AA%E7%BB%93%E6%9E%9C.png" alt="裁剪结果"></li></ol><h3 id="2-4-几何校正-x2F-图像配准"><a href="#2-4-几何校正-x2F-图像配准" class="headerlink" title="2.4 几何校正&#x2F;图像配准"></a>2.4 几何校正&#x2F;图像配准</h3><ol><li>文件小窗File-Open Image File-选择TM_baseimage.img</li><li>主窗口Map-Registration-Automatic Registration</li><li>band4-近红外波段-band4</li><li>“No”；设置参数：<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E8%AE%BE%E7%BD%AE%E5%8F%82%E6%95%B0.png" alt="设置参数"></li><li>Image to Image GCP List-Options-Order points by Error<br>RMS误差较大，需进行手动校准<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/RMS.png" alt="RMS"></li><li>对各点依次进行手动校准并Update，删除无法配准的点<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E6%89%8B%E5%8A%A8%E6%A0%A1%E5%87%86.png" alt="手动校准"><br><strong>校准结果：RMS为0.975</strong><br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E6%A0%A1%E5%87%86%E7%BB%93%E6%9E%9C.png" alt="校准结果"></li><li>Save Table to ASCII保存控制点文件</li><li>Ground Control File-OPtions-Wrap File as Image to Map-设置校准参数<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E6%A0%A1%E6%AD%A3%E5%8F%82%E6%95%B0.png" alt="校正参数"></li></ol><h3 id="2-5-查看处理结果"><a href="#2-5-查看处理结果" class="headerlink" title="2.5 查看处理结果"></a>2.5 查看处理结果</h3><p>Geographic Link:<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E5%A4%84%E7%90%86%E7%BB%93%E6%9E%9C.png" alt="处理结果"><br>同步定位结果良好</p><h3 id="2-6-数据格式转换"><a href="#2-6-数据格式转换" class="headerlink" title="2.6 数据格式转换"></a>2.6 数据格式转换</h3><p><strong>原因：</strong>对校准后的数据进行大气校正对数据存储格式有一定要求BSQ&#x3D;&gt;BIL</p><ol><li>Edit header查看文件数据格式</li><li>Basic Tools-Convert data-Output Interleave(BIL)</li></ol><h3 id="2-7-大气校正"><a href="#2-7-大气校正" class="headerlink" title="2.7 大气校正"></a>2.7 大气校正</h3><h4 id="2-7-1-制作波谱响应函数"><a href="#2-7-1-制作波谱响应函数" class="headerlink" title="2.7.1 制作波谱响应函数"></a>2.7.1 制作波谱响应函数</h4><ol><li>Window-Start New Plot Window-File-Input data-681_HJ1ACCD1.txt<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E6%B3%A2%E8%B0%B1%E5%93%8D%E5%BA%94%E5%87%BD%E6%95%B0.png" alt="波谱响应函数"></li><li>Output Plots to Spectral Library-全选-OK-输出路径-.sli</li></ol><h4 id="2-7-2-大气校正"><a href="#2-7-2-大气校正" class="headerlink" title="2.7.2 大气校正"></a>2.7.2 大气校正</h4><ol><li>Spectral-FLAASH-use single socale-10</li><li>右键图像-Pixel Locator-输入参数<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E5%A4%A7%E6%B0%94%E6%A0%A1%E6%AD%A3%E5%9F%BA%E7%A1%80%E8%AE%BE%E7%BD%AE.png" alt="大气校正基础设置"><br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E5%A4%A7%E6%B0%94%E6%A0%A1%E6%AD%A3%E5%A4%9A%E5%85%89%E8%B0%B1%E8%AE%BE%E7%BD%AE.png" alt="大气校正多光谱设置"><br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E5%A4%A7%E6%B0%94%E6%A0%A1%E6%AD%A3%E9%AB%98%E7%BA%A7%E8%AE%BE%E7%BD%AE.png" alt="大气校正高级设置"></li><li>大气校正结果<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E5%A4%A7%E6%B0%94%E6%A0%A1%E6%AD%A3%E7%BB%93%E6%9E%9C.png" alt="大气校正结果"></li></ol><h3 id="2-8-矢量数据裁剪-ROI裁切"><a href="#2-8-矢量数据裁剪-ROI裁切" class="headerlink" title="2.8 矢量数据裁剪-ROI裁切"></a>2.8 矢量数据裁剪-ROI裁切</h3><ol><li>Overlay-Vectors-File-Open<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E5%8A%A0%E8%BD%BD%E5%A4%AA%E6%B9%96%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE.png" alt="加载太湖矢量数据"></li><li>导出ROI:Export Active Layer to ROIs-all-apply</li><li>加载ROI：Overlay-ROI</li><li>裁剪：File-subset Data via ROIs-m</li></ol><p><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E8%A3%81%E5%89%AA.png" alt="裁剪"></p><ol start="5"><li>结果<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E8%A3%81%E5%89%AA%E7%BB%93%E6%9E%9C2.png" alt="裁剪结果"><br><strong>目的：</strong>获取地物真实的光谱信息是遥感反演的前提，大气校正可消除大气影响，还原地物的真实信息，是定量遥感数据预处理中比不可少的环节</li></ol><h3 id="2-9-叶绿素浓度反演"><a href="#2-9-叶绿素浓度反演" class="headerlink" title="2.9 叶绿素浓度反演"></a>2.9 叶绿素浓度反演</h3><p>将地面实测点与星上点的反演模型接案例，涉及到定量遥感的知识<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E5%8F%B6%E7%BB%BF%E7%B4%A0%E5%8F%8D%E6%BC%94%E6%A6%82%E5%BF%B5.png" alt="叶绿素反演概念"></p><h4 id="2-9-1-导入实测点位置"><a href="#2-9-1-导入实测点位置" class="headerlink" title="2.9.1 导入实测点位置"></a>2.9.1 导入实测点位置</h4><ol><li>Basic Tools-Band Math-expression:float(b4)&#x2F;b3</li><li>选取b4-band4;b3-band3-taihu-b4-b3.dat</li><li>显示数据-Overlay-ROI-input-反演点.txt</li></ol><p><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E5%8F%8D%E6%BC%941.png" alt="Alt text"></p><ol><li>File-output-b4-b3.dat(导出实测反演点星上值)<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E5%AF%BC%E5%87%BA%E5%AE%9E%E6%B5%8B%E5%8F%8D%E6%BC%94%E7%82%B9%E6%98%9F%E4%B8%8A%E5%80%BC.png" alt="导出实测反演点星上值"></li></ol><h4 id="2-9-2-构建反演模型"><a href="#2-9-2-构建反演模型" class="headerlink" title="2.9.2 构建反演模型"></a>2.9.2 构建反演模型</h4><ol><li>拟合曲线：<strong>y &#x3D; 0.0443x + 0.0158</strong><br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E6%8B%9F%E5%90%88%E6%9B%B2%E7%BA%BF.png" alt="拟合曲线"></li><li>Band Math<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/BM.png" alt="BM">-选择b1-输出Chla.dat</li></ol><h4 id="2-9-3-模型精度检验"><a href="#2-9-3-模型精度检验" class="headerlink" title="2.9.3 模型精度检验"></a>2.9.3 模型精度检验</h4><ol><li>ROI tool-Inout points验证点，设置同反演点-output验证点反演值</li><li>误差计算<br><img src="/../img/%E9%81%A5%E6%84%9F%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/%E8%AF%AF%E5%B7%AE%E7%BB%93%E6%9E%9C.png" alt="误差结果"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 日常心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 遥感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>提取美国国内航班程序</title>
      <link href="/2023/05/16/%E6%8F%90%E5%8F%96%E7%BE%8E%E5%9B%BD%E5%9B%BD%E5%86%85%E8%88%AA%E7%8F%AD%E7%A8%8B%E5%BA%8F/"/>
      <url>/2023/05/16/%E6%8F%90%E5%8F%96%E7%BE%8E%E5%9B%BD%E5%9B%BD%E5%86%85%E8%88%AA%E7%8F%AD%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p><strong>背景：地图设计小组作业需要对opensky公开的航班数据进行筛选，提取美国国内的航班</strong></p><h1 id="一、代码源码："><a href="#一、代码源码：" class="headerlink" title="一、代码源码："></a>一、代码源码：</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> geopandas <span class="keyword">as</span> gpd</span><br><span class="line"><span class="keyword">from</span> shapely.geometry <span class="keyword">import</span> Point</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定需要读取的列和数据类型</span></span><br><span class="line">dtypes = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;latitude_1&quot;</span>: <span class="built_in">float</span>,</span><br><span class="line">    <span class="string">&quot;longitude_1&quot;</span>: <span class="built_in">float</span>,</span><br><span class="line">    <span class="string">&quot;latitude_2&quot;</span>: <span class="built_in">float</span>,</span><br><span class="line">    <span class="string">&quot;longitude_2&quot;</span>: <span class="built_in">float</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取CSV文件，并指定数据类型</span></span><br><span class="line">df = pd.read_csv(<span class="string">&quot;test100.csv&quot;</span>, usecols=dtypes.keys(), dtype=dtypes)</span><br><span class="line"></span><br><span class="line"><span class="comment"># # 合并成一个多边形，包含美国边界多边形</span></span><br><span class="line"><span class="comment"># USA = gpd.read_file(&#x27;USA_low.json&#x27;)</span></span><br><span class="line"><span class="comment"># merged_polygon = USA.geometry.unary_union</span></span><br><span class="line"><span class="comment"># merged_gdf = gpd.GeoDataFrame(geometry=[merged_polygon])</span></span><br><span class="line"><span class="comment"># merged_gdf.to_file(&#x27;merged_USA.geojson&#x27;, driver=&#x27;GeoJSON&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # 读取合并geojson文件</span></span><br><span class="line">USA = gpd.read_file(<span class="string">&#x27;merged_USA.geojson&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查几何类型</span></span><br><span class="line"><span class="comment"># print(USA.geometry.geom_type.unique())</span></span><br><span class="line"></span><br><span class="line">in_USA = []</span><br><span class="line"><span class="keyword">for</span> index, row <span class="keyword">in</span> df.iterrows():</span><br><span class="line">    <span class="comment"># 控制循环数量</span></span><br><span class="line">    <span class="keyword">if</span> index &gt; <span class="number">400000</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    point1 = Point(row[<span class="string">&quot;longitude_1&quot;</span>], row[<span class="string">&quot;latitude_1&quot;</span>])</span><br><span class="line">    point2 = Point(row[<span class="string">&quot;longitude_2&quot;</span>], row[<span class="string">&quot;latitude_2&quot;</span>])</span><br><span class="line">    num_polygons1 = USA.contains(point1).<span class="built_in">sum</span>()</span><br><span class="line">    num_polygons2 = USA.contains(point2).<span class="built_in">sum</span>()</span><br><span class="line">    <span class="keyword">if</span> (num_polygons1 &gt; <span class="number">0</span>) <span class="keyword">and</span> (num_polygons2 &gt; <span class="number">0</span>):</span><br><span class="line">        <span class="built_in">print</span>(point1.y,point1.x,point2.y,point2.x)</span><br><span class="line">        in_USA.append(row)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="comment"># 将筛选后的数据保存到CSV文件</span></span><br><span class="line">in_USA_df = pd.DataFrame(in_USA)</span><br><span class="line">in_USA_df.to_csv(<span class="string">&quot;2006in_USA.csv&quot;</span>, index=<span class="literal">False</span>,header=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数据预处理完成！&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="二、源码介绍"><a href="#二、源码介绍" class="headerlink" title="二、源码介绍"></a>二、源码介绍</h1><p>之后再补……</p><h1 id="三、使用指南"><a href="#三、使用指南" class="headerlink" title="三、使用指南"></a>三、使用指南</h1><ol><li>安装程序必须库（如果之前python课上的虚拟环境还在的话可以直接用）<br><strong>geopandas可能不太好装，需要安装前置依赖库，建议百度！！！</strong></li></ol><ul><li>pandas</li><li>shapely</li><li>geopandas</li></ul><ol start="2"><li>运行“合并成一个多边形，包含美国边界多边形”程序，输出merged_USA.geojson,类型为“mulitpolygon”<br><strong>这一步不用做，我已经帮你们做完了！</strong></li><li>修改读取CSV,geojson文件名，修改输出文件名</li></ol><ul><li>json读取为修改后的merged_USA.geojson</li><li>跑这个csv:flightlist_20200601_20200630.csv</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日常心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 坐标转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>火车采集器</title>
      <link href="/2023/05/15/%E7%81%AB%E8%BD%A6%E9%87%87%E9%9B%86%E5%99%A8/"/>
      <url>/2023/05/15/%E7%81%AB%E8%BD%A6%E9%87%87%E9%9B%86%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="安居客房产爬取实验"><a href="#安居客房产爬取实验" class="headerlink" title="安居客房产爬取实验"></a>安居客房产爬取实验</h1><h2 id="一、实验目的"><a href="#一、实验目的" class="headerlink" title="一、实验目的"></a>一、实验目的</h2><p>利用“火车采集器”软件对安居客网站房产数据进行采集，采集范围为南京</p><h2 id="二、实验步骤"><a href="#二、实验步骤" class="headerlink" title="二、实验步骤"></a>二、实验步骤</h2><h3 id="1-任务配置"><a href="#1-任务配置" class="headerlink" title="1. 任务配置"></a>1. 任务配置</h3><p>1.1 新建任务-任务规则名：安居客<br>1.2 向导添加-批量网站-选择等差数列-设置参数：数字变化1-3<br>输入地址 <a href="https://nj.fang.anjuke.com/loupan/all/p[%E5%9C%B0%E5%9D%80%E5%8F%82%E6%95%B0]">https://nj.fang.anjuke.com/loupan/all/p[地址参数]</a><br>其中[地址参数]代表循环变量。<br><img src="/../img/%E7%81%AB%E8%BD%A6%E9%87%87%E9%9B%86%E5%99%A8/%E6%89%B9%E9%87%8F%E7%BD%91%E7%AB%99.png" alt="批量网站"></p><h3 id="2-采集规则设置"><a href="#2-采集规则设置" class="headerlink" title="2. 采集规则设置"></a>2. 采集规则设置</h3><p>2.1 添加标签列表：名称，均价,地址<br>2.2 分别编辑开头字符串和结尾字符串<br><strong>注：不要加图片中的[标签：xx],属于收费项目</strong><br><img src="/../img/%E7%81%AB%E8%BD%A6%E9%87%87%E9%9B%86%E5%99%A8/01.png" alt="名称"><br><img src="/../img/%E7%81%AB%E8%BD%A6%E9%87%87%E9%9B%86%E5%99%A8/02.png" alt="均价"><br>添加+-内容替换&#x2F;排除<br><img src="/../img/%E7%81%AB%E8%BD%A6%E9%87%87%E9%9B%86%E5%99%A8/03.png" alt="地址"><br>2.3 在采集内容规则界面点击“网址采集测试”，成功采集</p><h3 id="3-发布内容设置"><a href="#3-发布内容设置" class="headerlink" title="3. 发布内容设置"></a>3. 发布内容设置</h3><p><strong>注：免费版只能导出.txt文件</strong><br>3.1 新建导出格式txt,冒号最好用英文的<br><img src="/../img/%E7%81%AB%E8%BD%A6%E9%87%87%E9%9B%86%E5%99%A8/example.png" alt="example.txt"><br>3.2 设置输出文件信息如下：<br><img src="/../img/%E7%81%AB%E8%BD%A6%E9%87%87%E9%9B%86%E5%99%A8/04.png" alt="输出文件信息"></p><h3 id="4-采集测试"><a href="#4-采集测试" class="headerlink" title="4. 采集测试"></a>4. 采集测试</h3><p>4.1 在主界面中勾选“采网址”、“采内容”、“发布”，并开始采集<br>4.2 失败的话，点击网站链接进行验证码验证后再次运行即可</p><h2 id="三、实验结果"><a href="#三、实验结果" class="headerlink" title="三、实验结果"></a>三、实验结果</h2><p>5.1 运行日志<br><img src="/../img/%E7%81%AB%E8%BD%A6%E9%87%87%E9%9B%86%E5%99%A8/%E7%BB%93%E6%9E%9C01.png" alt="Alt text"><br>5.2 实时数据<br><img src="/../img/%E7%81%AB%E8%BD%A6%E9%87%87%E9%9B%86%E5%99%A8/%E7%BB%93%E6%9E%9C02.png" alt="Alt text"><br>5.3 文本输出<br><img src="/../img/%E7%81%AB%E8%BD%A6%E9%87%87%E9%9B%86%E5%99%A8/05.png" alt="Alt text"></p>]]></content>
      
      
      <categories>
          
          <category> 日常心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>keplergl库学习2</title>
      <link href="/2023/05/12/keplergl%E5%BA%93%E5%AD%A6%E4%B9%A02/"/>
      <url>/2023/05/12/keplergl%E5%BA%93%E5%AD%A6%E4%B9%A02/</url>
      
        <content type="html"><![CDATA[<ol><li>安装nodejs</li><li>cd 工程根目录</li><li>使用npm&#x2F;yarn(需安装)安装依赖项。<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn</span><br></pre></td></tr></table></figure>或者<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure></li><li>强制替换token<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// webpack.config.js</span><br><span class="line">plugins: [</span><br><span class="line">      new webpack.EnvironmentPlugin(&#123;</span><br><span class="line">        MapboxAccessToken: &#x27;your_token&#x27;</span><br><span class="line">      &#125;)</span><br><span class="line">];</span><br></pre></td></tr></table></figure></li><li>npm start</li><li>建议参考工程：<br><img src="/../img/%E5%8F%82%E8%80%83%E5%B7%A5%E7%A8%8B.png" alt="Alt text"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 地图设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> keplergl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>坐标转换</title>
      <link href="/2023/05/12/%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2/"/>
      <url>/2023/05/12/%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>背景：去汤山实习用全站仪测了一些平面坐标，需要将其转化为地理坐标</p></blockquote><h1 id="转换步骤"><a href="#转换步骤" class="headerlink" title="转换步骤"></a>转换步骤</h1><ol><li>下载COORD坐标转换工具</li><li>设置源坐标类型与目标坐标类型（平面坐标-&gt;大地坐标）</li><li>设置椭球基准：根据自己源文件坐标类型来选，选择WGS84</li><li>投影设置（很重要，否则算出来的经纬度偏差很大）：UTM投影，中央经线：117（分带号50-无需设置）</li><li>输入数据</li></ol><h1 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h1><h2 id="坐标输入"><a href="#坐标输入" class="headerlink" title="坐标输入"></a>坐标输入</h2><ol><li>东西向Y不带带号6位，南北向X7位：在测绘工作中，北为X轴正方向，东为Y轴正方向。加上上北下南左西右东的习惯，这与数学上的右为X正方向、上为Y轴正方向不一致。</li><li>BLH</li></ol><h2 id="投影设置"><a href="#投影设置" class="headerlink" title="投影设置"></a>投影设置</h2><ol><li>UTM投影和高斯克吕格带号和中央经线计算方式不同</li><li>UTM投影说明：</li></ol><ul><li>参考：<a href="http://www.taodudu.cc/news/show-4197824.html?action=onClick">http://www.taodudu.cc/news/show-4197824.html?action=onClick</a></li><li>UTM (Universal Transverse Mercator)坐标系是由美国军方在1947提出的。虽然我们仍然将其看作与“高斯－克吕格”相似的坐标系统，但实际上UTM采用了网格的分带（或分块）。除在美国本土采用Clarke 1866椭球体以外，UTM在世界其他地方都采用WGS84。</li><li>由于UTM是由美国制定，因此起始分带并不在本初子午线，而是在180度，因而所有美国本土都处于0－30带内。UTM投影采用6度分带，从东经180度（或西经180度）开始，自西向东算起，因此1带的中央经线为-177（-180 -(-6)），而0度经线为30带和31带的分界，这两带的分界分别是-3和3度。纬度采用8度分带，从80S到84N共20个纬度带（X带多4度），分别用C到X的字母来表示。为了避免和数字混淆，I和O没有采用。UTM的“false easting”值为500km，而南半球UTM带的“false northing”为10000km</li><li>“WGS 1984”坐标系的墨卡托投影分度带（UTM ZONE）选择方法如下：<br>（1）北半球地区，选择最后字母为“N”的带；<br>（2）可根据公式计算，带数&#x3D;（经度整数位&#x2F;6）的整数部分+31<br>如：江西省南昌新建县某调查单元经度范围115°35′20″—115°36′00″，<br>带数&#x3D;115&#x2F;6+31&#x3D;50，选50N，即WGS 1984 UTM ZONE 50N</li></ul><ol start="3"><li>直接查询投影设置的中央经线，可参考以下博客：<br><a href="https://blog.csdn.net/qq_24641385/article/details/99959802">https://blog.csdn.net/qq_24641385/article/details/99959802</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 日常心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 坐标转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>keplergl库学习1</title>
      <link href="/2023/05/11/keplergl%E5%BA%93%E5%AD%A6%E4%B9%A01/"/>
      <url>/2023/05/11/keplergl%E5%BA%93%E5%AD%A6%E4%B9%A01/</url>
      
        <content type="html"><![CDATA[<h1 id="安装指南（jupyter）"><a href="#安装指南（jupyter）" class="headerlink" title="安装指南（jupyter）"></a>安装指南（jupyter）</h1><p>参考：<a href="https://github.com/keplergl/kepler.gl/issues/557">https://github.com/keplergl/kepler.gl/issues/557</a><br><strong>安装环境：</strong></p><ul><li>64位操作系统</li><li>py –version &#x3D; 3.11</li></ul><ol><li>创建新的虚拟环境<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n pykpl</span><br></pre></td></tr></table></figure></li><li>安装pip和wheel<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda install pip </span><br><span class="line">pip install wheel</span><br></pre></td></tr></table></figure></li><li>安装jupyter<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install nb_conda_kernels</span><br></pre></td></tr></table></figure></li><li>手动安装shapely,gdal,fiona<br><strong>64位选amd64,32位选win32;cp对应python版本</strong><br><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#shapely">https://www.lfd.uci.edu/~gohlke/pythonlibs/#shapely</a><br><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#gdal">https://www.lfd.uci.edu/~gohlke/pythonlibs/#gdal</a><br><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#fiona">https://www.lfd.uci.edu/~gohlke/pythonlibs/#fiona</a><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd .whl_dir #文件目录</span><br><span class="line">pip install name.whl #文件名 </span><br></pre></td></tr></table></figure></li><li>安装Keplergl库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install keplergl</span><br></pre></td></tr></table></figure></li><li>开始使用<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd workspace #工作目录</span><br><span class="line">conda activate pykpl #工作环境</span><br><span class="line">jupyter notebook #开玩！</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 地图设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> keplergl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cpp第七章</title>
      <link href="/2023/04/26/Cpp%E7%AC%AC%E4%B8%83%E7%AB%A0/"/>
      <url>/2023/04/26/Cpp%E7%AC%AC%E4%B8%83%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="GIS内核的结构与基础环境实验"><a href="#GIS内核的结构与基础环境实验" class="headerlink" title="GIS内核的结构与基础环境实验"></a>GIS内核的结构与基础环境实验</h1><h2 id="一、UML"><a href="#一、UML" class="headerlink" title="一、UML"></a>一、UML</h2><p>统一的建模语言</p><h2 id="二、GMap"><a href="#二、GMap" class="headerlink" title="二、GMap"></a>二、GMap</h2><p>简单的GIS内核</p><ol><li>gamp-core.dll</li></ol><ul><li>base:公用的类型定义和支持类</li><li>geometry:几何</li><li>datasource:数据源</li><li>coordsys:投影转换</li><li>map:地图和图层</li><li>style:符号化</li><li>graphics:绘图元素</li><li>editing-uitool:交互和编辑</li></ul><ol start="2"><li>gamp-simple-image-source:栅格数据源</li><li>gamp-mdb-datasource:Access数据源</li><li>gamp-view:MFC桌面程序</li></ol><h2 id="三、构造动态库并调用"><a href="#三、构造动态库并调用" class="headerlink" title="三、构造动态库并调用"></a>三、构造动态库并调用</h2><h3 id="1-思考"><a href="#1-思考" class="headerlink" title="1. 思考"></a>1. 思考</h3><p><strong>将所有类构造为一个动态库和将源码分类构造动态库的区别？</strong></p><ul><li>一整个动态库：如果源码过长，而实践中只调用了一部分类，虽然代码更加简洁，简化项目的依赖关系，并使项目更易于使用和部署，但同时因为包含了所有的模块，它可能会导致库的大小更大。</li><li>不同部分分别构建库：根据不同需求引用库，使代码更加轻便，并且可以更好地控制您的代码库的大小和复杂度；同时可以使项目更加模块化，易于维护和更新。</li></ul><h3 id="2-本实验分别构建库"><a href="#2-本实验分别构建库" class="headerlink" title="2. 本实验分别构建库"></a>2. 本实验分别构建库</h3><p>主要原因是变与轻便按需调用</p><h3 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h3><h4 id="构建动态库"><a href="#构建动态库" class="headerlink" title="构建动态库"></a>构建动态库</h4><ol start="0"><li>可以先把第三、四步做了，将源代码中的安全警告和兼容问题解决，再导入新建的动态库。</li><li>新建src（复制库需要源码：base和geometry）和include目录，新建动态库项目GGeometryCore并添加src现有项</li><li>属性配置：设置为启动项；不使用预编译头；添加预处理器宏GMAPCORE_EXPORTS，与GCoreBase.h保持一致；</li><li>安全警告：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">IWriteFile* <span class="title">FileUtil::CreateWriteFile</span><span class="params">(<span class="type">const</span> <span class="type">wchar_t</span>* fn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE* file = <span class="literal">NULL</span>;</span><br><span class="line">_wfopen_s(&amp;file,fn, <span class="string">L&quot;w+&quot;</span>);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>E0167“const wchar_t *” 类型的实参与 “LPCSTR” 类型的形参不兼容GGeometry</li></ol><p></p><p><strong>原因：</strong><br>这个错误通常出现在您在代码中将 const wchar_t* 类型的字符串传递给接受 LPCSTR 类型的形参的函数中。</p><p>const wchar_t* 是指向 Unicode 字符串的指针，而 LPCSTR 是指向 ANSI 字符串的指针。在 Windows 平台上，ANSI 字符串是使用单字节字符集（如 ISO-8859-1）编码的字符串，而 Unicode 字符串则使用双字节字符集（UTF-16）编码。因此，这两种类型的字符串是不兼容的。</p><p>要解决这个问题，您可以将 const wchar_t* 类型的字符串转换为 LPCSTR 类型的字符串。有多种方法可以完成这个转换，例如使用 WideCharToMultiByte 函数或使用 CStringW 类型和 CStringA 类型的转换操作符。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">IReadFile* <span class="title">FileUtil::CreateReadFile</span><span class="params">(<span class="type">const</span> <span class="type">wchar_t</span>* fn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE file = <span class="built_in">CreateFileW</span>(fn, GENERIC_READ, FILE_SHARE_READ, <span class="literal">NULL</span>, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (file != INVALID_HANDLE_VALUE)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">std::wstring <span class="title">wfn</span><span class="params">(fn)</span></span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">CReadFile</span>(wfn, file);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>生成事件-生成后事件命令行-<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy $(ProjectDir)src\*.h $(ProjectDir)include\*.*</span><br></pre></td></tr></table></figure><strong>不行建议直接手动复制</strong></li><li>设置文件输出路径</li><li>生成动态库喔，不是运行。。。成功！</li></ol><h4 id="调用库"><a href="#调用库" class="headerlink" title="调用库"></a>调用库</h4><ol><li>新建控制台项目example并调用:</li></ol><ul><li>附加包含目录(链接头文件地址)：include</li><li>附加依赖项(包含引用库名)：GGeometryCore.lib</li><li>附加库目录(链接库的文件地址)：.lib文件位置</li></ul><ol start="2"><li><p>简短代码试运行：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GGeometry.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GPoint.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;IFile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> gmap;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hello World!\n&quot;</span>;</span><br><span class="line">    GPoint* p1 = GPoint::<span class="built_in">Create</span>(<span class="number">123</span>, <span class="number">456</span>);</span><br><span class="line">    std::cout &lt;&lt; p1-&gt;<span class="built_in">GetX</span>() &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; p1-&gt;<span class="built_in">GetY</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    IWriteFile* file = FileUtil::<span class="built_in">CreateWriteFile</span>(<span class="string">L&quot;./abc.data&quot;</span>);</span><br><span class="line">    GGeometry::<span class="built_in">SaveToStream</span>(p1, file);</span><br><span class="line">    file-&gt;<span class="built_in">Release</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>疑问？？？<br>本实验遇到一个很奇怪的问题，虽然已经解决，但原因仍然不甚明白，具体如下：<br>当动态库输出目录为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(SolutionDir)\$(Configuration)\</span><br></pre></td></tr></table></figure><p>新建项目调用库会找不到.dll文件，而将动态库输出到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(SolutionDir)$(Platform)\$(Configuration)\</span><br></pre></td></tr></table></figure><p>位置，并调用即可顺利完成，不太明白找不到的原因<br>建议将输出目录改为后者并在调用库时添加附加库目录</p></li><li><p>报错<br>严重性代码说明项目文件行禁止显示状态<br>错误LNK2019无法解析的外部符号 “public: static class gmap::IWriteFile * __cdecl gmap::FileUtil::CreateWriteFile(wchar_t const *)” (?CreateWriteFile@FileUtil@gmap@@SAPEAVIWriteFile@2@PEB_W@Z)，函数 main 中引用了该符号exampleD:\桌面\大三下学科\C++\07\GMap_test\GGeometry\example\example.obj1</p></li></ol><p></p><ul><li>疑问：上一段代码成功调用函数说明建库和链接没有问题，example项目是能找在头文件里找到这个函数的，说明问题在建库的源文件中，经过查找，发现FileUtil类缺少宏定义，添加即可</li><li>IFile.h：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">GMAPCORE_API</span> FileUtil&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-实验结果"><a href="#4-实验结果" class="headerlink" title="4. 实验结果"></a>4. 实验结果</h3><p><img src="/../img/Cpp%E7%AC%AC%E4%B8%83%E7%AB%A0/01.png" alt="控制台输出"><br><img src="/../img/Cpp%E7%AC%AC%E4%B8%83%E7%AB%A0/02.png" alt="文件输出"></p>]]></content>
      
      
      <categories>
          
          <category> Learn_C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cpp第八章</title>
      <link href="/2023/04/26/Cpp%E7%AC%AC%E5%85%AB%E7%AB%A0/"/>
      <url>/2023/04/26/Cpp%E7%AC%AC%E5%85%AB%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="第八章-地图渲染与符号模型实验"><a href="#第八章-地图渲染与符号模型实验" class="headerlink" title="第八章 地图渲染与符号模型实验"></a>第八章 地图渲染与符号模型实验</h1><h2 id="一、实验步骤"><a href="#一、实验步骤" class="headerlink" title="一、实验步骤"></a>一、实验步骤</h2><h3 id="创建动态库"><a href="#创建动态库" class="headerlink" title="创建动态库"></a>创建动态库</h3><ol start="0"><li>可以先把第三、四步做了，将源代码中的安全警告和兼容问题解决，再导入新建的动态库。</li><li>新建src（复制库需要源码：base和style）和include目录，新建动态库项目GMapStyleCore并添加src现有项</li><li>属性配置：设置为启动项；不使用预编译头；添加预处理器宏GMAPSTYLECORE_EXPORTS，与GCoreBase.h保持一致；</li><li>安全警告：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">IWriteFile* <span class="title">FileUtil::CreateWriteFile</span><span class="params">(<span class="type">const</span> <span class="type">wchar_t</span>* fn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE* file = <span class="literal">NULL</span>;</span><br><span class="line">_wfopen_s(&amp;file,fn, <span class="string">L&quot;w+&quot;</span>);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>E0167“const wchar_t <em>“ 类型的实参与 “LPCSTR” 类型的形参不兼容 GGeometry<br><strong>原因：</strong><br>这个错误通常出现在您在代码中将 const wchar_t</em> 类型的字符串传递给接受 LPCSTR 类型的形参的函数中。<br>const wchar_t* 是指向 Unicode 字符串的指针，而 LPCSTR 是指向 ANSI 字符串的指针。在 Windows 平台上，ANSI 字符串是使用单字节字符集（如 ISO-8859-1）编码的字符串，而 Unicode 字符串则使用双字节字符集（UTF-16）编码。因此，这两种类型的字符串是不兼容的。<br>要解决这个问题，可以将 const wchar_t* 类型的字符串转换为 LPCSTR 类型的字符串。有多种方法可以完成这个转换，例如使用 WideCharToMultiByte 函数或使用 CStringW 类型和 CStringA 类型的转换操作符。<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">IReadFile* <span class="title">FileUtil::CreateReadFile</span><span class="params">(<span class="type">const</span> <span class="type">wchar_t</span>* fn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE file = <span class="built_in">CreateFileW</span>(fn, GENERIC_READ, FILE_SHARE_READ, <span class="literal">NULL</span>, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (file != INVALID_HANDLE_VALUE)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">std::wstring <span class="title">wfn</span><span class="params">(fn)</span></span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">CReadFile</span>(wfn, file);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>生成事件-生成后事件命令行<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy $(ProjectDir)src\*.h $(ProjectDir)include\*.*</span><br></pre></td></tr></table></figure><strong>不行建议直接手动复制</strong></li><li>设置文件输出路径</li><li>附加依赖项：guiplus.lib</li><li>生成动态库喔，不是运行。。。成功！</li></ol><h3 id="调用库"><a href="#调用库" class="headerlink" title="调用库"></a>调用库</h3><ol><li>新建MFC项目StyleMFC</li></ol><ul><li>单文档-取消勾选文档&#x2F;视图结构支持</li></ul><ol start="2"><li>调用库</li></ol><ul><li>附加包含目录(链接头文件地址)：include</li><li>附加依赖项(包含引用库名)：GMapStyleCore.lib</li><li>附加库目录(链接库的文件地址)：.lib文件位置</li></ul><ol><li>简单代码调试</li></ol><ul><li>初始化<ul><li>StyleMFC.cpp：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CStyleMFCApp theApp;</span><br><span class="line">ULONG_PTR token;</span><br><span class="line">GdiplusStartupInput input;</span><br><span class="line">GdiplusStartupOutput output;</span><br><span class="line"></span><br><span class="line"><span class="built_in">GdiplusStartup</span>(&amp;token, &amp;input, &amp;output);</span><br></pre></td></tr></table></figure></li></ul></li><li>数据存储<ul><li>ChildView.h：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gdiplus.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GStyle.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GImageMarkerStyle.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GSimpleLineStyle.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GMarkerStyle.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Gdiplus;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> gmap;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="function">afx_msg <span class="type">void</span> <span class="title">OnPaint</span><span class="params">()</span></span>;</span><br><span class="line"><span class="built_in">DECLARE_MESSAGE_MAP</span>()</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">//存储点数据</span></span><br><span class="line">vector&lt;PointF&gt; m_points;</span><br><span class="line">GImageMarkerStyle* m_points_sy;</span><br><span class="line">GSimpleLineStyle* m_line_style;</span><br></pre></td></tr></table></figure></li></ul></li><li>实例化并设置style<ul><li>ChildView.cpp<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">CChildView::<span class="built_in">CChildView</span>()</span><br><span class="line">&#123;</span><br><span class="line">m_points_sy = <span class="keyword">new</span> <span class="built_in">GImageMarkerStyle</span>(<span class="literal">NULL</span>,<span class="number">0</span>,<span class="string">L&quot;A&quot;</span>);</span><br><span class="line">m_points_sy-&gt;<span class="built_in">SetImageFile</span>(<span class="string">L&quot;D:\\桌面\\大三下学科\\C++\\07\\GMap_test\\GGeometry\\StyleMFC\\res\\地图.png&quot;</span>);</span><br><span class="line">m_points_sy-&gt;<span class="built_in">SetLayoutRect</span>(<span class="built_in">Rect</span>(<span class="number">-20</span>, <span class="number">-20</span>, <span class="number">20</span>, <span class="number">20</span>));</span><br><span class="line"></span><br><span class="line">m_line_style = <span class="keyword">new</span> <span class="built_in">GSimpleLineStyle</span>(<span class="literal">NULL</span>, <span class="number">1</span>, <span class="string">L&quot;L&quot;</span>);</span><br><span class="line">m_line_style-&gt;<span class="built_in">SetColor</span>(Color::Black);</span><br><span class="line">m_line_style-&gt;<span class="built_in">SetDashStyle</span>(DashStyle::DashStyleDash);</span><br><span class="line">m_line_style-&gt;<span class="built_in">SetLineWidth</span>(<span class="number">8</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>响应与绘制<ul><li>ChildView.cpp 添加消息响应<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CChildView::OnPaint</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// 用于绘制的设备上下文</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此处添加消息处理程序代码</span></span><br><span class="line"><span class="function">Graphics <span class="title">g</span><span class="params">(dc.GetSafeHdc())</span></span>;</span><br><span class="line"><span class="function">Pen <span class="title">pen</span><span class="params">(Color::Red,<span class="number">8</span>)</span></span>;</span><br><span class="line">g.<span class="built_in">DrawLines</span>(&amp;pen, m_points.<span class="built_in">data</span>(), m_points.<span class="built_in">size</span>());</span><br><span class="line"></span><br><span class="line">m_line_style-&gt;<span class="built_in">Draw</span>(&amp;g,m_points.<span class="built_in">data</span>(),m_points.<span class="built_in">size</span>(),<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制每个点的style</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m_points.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">PointF p = m_points[i];</span><br><span class="line">m_points_sy-&gt;<span class="built_in">Draw</span>(&amp;g, p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不要为绘制消息而调用 CWnd::OnPaint()</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CChildView::OnLButtonUp</span><span class="params">(UINT nFlags, CPoint point)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加消息处理程序代码和/或调用默认值</span></span><br><span class="line">m_points.<span class="built_in">push_back</span>(<span class="built_in">PointF</span>(point.x, point.y));</span><br><span class="line">CWnd::<span class="built_in">OnLButtonUp</span>(nFlags, point);</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">Invalidate</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="二、实验结果"><a href="#二、实验结果" class="headerlink" title="二、实验结果"></a>二、实验结果</h2><p><img src="/../img/Cpp%E7%AC%AC%E5%85%AB%E7%AB%A0/%E5%AE%9E%E9%AA%8C%E7%BB%93%E6%9E%9C.png" alt="实验结果"></p>]]></content>
      
      
      <categories>
          
          <category> Learn_C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cpp第六章</title>
      <link href="/2023/04/18/Cpp%E7%AC%AC%E5%85%AD%E7%AB%A0/"/>
      <url>/2023/04/18/Cpp%E7%AC%AC%E5%85%AD%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="第六章-图形API——GDI-的使用"><a href="#第六章-图形API——GDI-的使用" class="headerlink" title="第六章 图形API——GDI+的使用"></a>第六章 图形API——GDI+的使用</h1><h2 id="一、实验目的"><a href="#一、实验目的" class="headerlink" title="一、实验目的"></a>一、实验目的</h2><ol><li>理解代码的基本框架和运行逻辑</li><li>基于课程提供的第六章代码，完成自己的一个GDI+图形API的调用案例。draw函数中，绘图代码量不少于100行，并把案例集成到案例框架中。</li></ol><h2 id="二、实验过程及结果"><a href="#二、实验过程及结果" class="headerlink" title="二、实验过程及结果"></a>二、实验过程及结果</h2><h3 id="2-1-理解代码基本框架"><a href="#2-1-理解代码基本框架" class="headerlink" title="2.1 理解代码基本框架"></a>2.1 理解代码基本框架</h3><ul><li>GDIPlusDemo.cpp，初始化GDI+库（启用）<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CGDIPlusDemoApp 初始化</span></span><br><span class="line">ULONG_PTR gpToken;</span><br><span class="line">Gdiplus::GdiplusStartupInput gpInput;</span><br><span class="line">Gdiplus::GdiplusStartupOutput gpOutput;</span><br><span class="line"><span class="function">BOOL <span class="title">CGDIPlusDemoApp::InitInstance</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">GdiplusStartup</span>(&amp;gpToken, &amp;gpInput, &amp;gpOutput);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>ChildView.cpp绘制</li></ul><ol><li>创建画布、获取用户窗口大小并调用Draw方法绘制图形，DrawString绘制各页面标题<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CChildView::OnPaint</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">CPaintDC <span class="title">dc</span><span class="params">(<span class="keyword">this</span>)</span></span>; <span class="comment">// 用于绘制的设备上下文</span></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此处添加消息处理程序代码</span></span><br><span class="line"><span class="function">Gdiplus::Graphics  <span class="title">g</span><span class="params">(dc.GetSafeHdc())</span></span>;<span class="comment">//创建画布</span></span><br><span class="line">CRect rc;</span><br><span class="line"><span class="built_in">GetClientRect</span>(&amp;rc);</span><br><span class="line"><span class="function">Rect <span class="title">rc2</span><span class="params">(rc.left, rc.top, rc.Width(), rc.Height())</span></span>;<span class="comment">//获取用户界面矩形</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CGdiplusUsage* usage = mUsageList[mCurrentUsage];</span><br><span class="line">usage-&gt;<span class="built_in">draw</span>(g, rc2);</span><br><span class="line">USES_CONVERSION;</span><br><span class="line">wstring tile = <span class="built_in">A2T</span>(usage-&gt;<span class="built_in">caption</span>());</span><br><span class="line"><span class="function">Gdiplus::Font <span class="title">font</span><span class="params">(<span class="string">L&quot;宋体&quot;</span>,<span class="number">14</span>)</span></span>;</span><br><span class="line"><span class="function">SolidBrush <span class="title">sb</span><span class="params">(Color::Black)</span></span>;</span><br><span class="line">g.<span class="built_in">ResetTransform</span>();</span><br><span class="line">g.<span class="built_in">DrawString</span>(tile.<span class="built_in">c_str</span>(),tile.<span class="built_in">size</span>(),  &amp;font, <span class="built_in">PointF</span>( <span class="number">3</span>, <span class="number">3</span>), &amp;sb);</span><br><span class="line"><span class="comment">//// 不要为绘制消息而调用 CWnd::OnPaint()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>键盘消息响应与绘制内容切换<br><em>创建mUsageList并存储各绘制类，通过OnKeyUp进行按键响应，切换绘制内容</em><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CChildView::OnKeyUp</span><span class="params">(UINT nChar, UINT nRepCnt, UINT nFlags)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加消息处理程序代码和/或调用默认值</span></span><br><span class="line">mCurrentUsage++;</span><br><span class="line">mCurrentUsage %= mUsageList.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">Invalidate</span>();<span class="comment">//使整个窗口客户区无效, 并进行更新显示的函数</span></span><br><span class="line">CWnd::<span class="built_in">OnKeyUp</span>(nChar, nRepCnt, nFlags);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>GDIPlusUsage.h,定义各绘制类，继承CGdiplusUsage父类，主要包括name(),chapion()和draw()函数</li></ul><h3 id="2-2-绘制类理解"><a href="#2-2-绘制类理解" class="headerlink" title="2.2 绘制类理解"></a>2.2 绘制类理解</h3><p>主要包括线面的绘制、颜色画笔与涂刷的使用、几何对象的构建、文字图片的显示和坐标系的转换等，具体将在下一部分进行实践</p><h3 id="2-3-项目改造和添加"><a href="#2-3-项目改造和添加" class="headerlink" title="2.3 项目改造和添加"></a>2.3 项目改造和添加</h3><ol><li>改变按键响应，利用上下左右键可上下切换<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CChildView::OnKeyUp</span><span class="params">(UINT nChar, UINT nRepCnt, UINT nFlags)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (nChar)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> VK_UP:</span><br><span class="line">mCurrentUsage--;</span><br><span class="line">mCurrentUsage %= mUsageList.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">Invalidate</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> VK_DOWN:</span><br><span class="line">mCurrentUsage++;</span><br><span class="line">mCurrentUsage %= mUsageList.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">Invalidate</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> VK_LEFT:</span><br><span class="line">mCurrentUsage--;</span><br><span class="line">mCurrentUsage %= mUsageList.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">Invalidate</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> VK_RIGHT:</span><br><span class="line">mCurrentUsage++;</span><br><span class="line">mCurrentUsage %= mUsageList.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">Invalidate</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//// <span class="doctag">TODO:</span> 在此添加消息处理程序代码和/或调用默认值</span></span><br><span class="line"><span class="comment">//mCurrentUsage++;</span></span><br><span class="line"><span class="comment">//mCurrentUsage %= mUsageList.size();</span></span><br><span class="line"><span class="comment">//this-&gt;Invalidate();//使整个窗口客户区无效, 并进行更新显示的函数</span></span><br><span class="line">CWnd::<span class="built_in">OnKeyUp</span>(nChar, nRepCnt, nFlags);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>右上角显示所有界面名称，加红加粗显示当前界面名称<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">CGdiplusUsage* usage0 = mUsageList[i];</span><br><span class="line">USES_CONVERSION;</span><br><span class="line">wstring tile = <span class="built_in">A2T</span>(usage0-&gt;<span class="built_in">caption</span>());</span><br><span class="line"><span class="keyword">if</span> (mCurrentUsage == i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Gdiplus::Font <span class="title">font</span><span class="params">(<span class="string">L&quot;微软雅黑&quot;</span>, <span class="number">16</span>,FontStyleBold)</span></span>;</span><br><span class="line"><span class="function">SolidBrush <span class="title">sb</span><span class="params">(Color::Red)</span></span>;</span><br><span class="line">g.<span class="built_in">ResetTransform</span>();</span><br><span class="line">g.<span class="built_in">DrawString</span>(tile.<span class="built_in">c_str</span>(), tile.<span class="built_in">size</span>(), &amp;font, <span class="built_in">PointF</span>(rc.<span class="built_in">Width</span>()/<span class="number">6</span>*<span class="number">5</span>, i * rc.<span class="built_in">Height</span>()/ (mUsageList.<span class="built_in">size</span>() +<span class="number">1</span>)), &amp;sb);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Gdiplus::Font <span class="built_in">font</span>(<span class="string">L&quot;宋体&quot;</span>, <span class="number">12</span>);</span><br><span class="line"><span class="function">SolidBrush <span class="title">sb</span><span class="params">(Color::Black)</span></span>;</span><br><span class="line">g.<span class="built_in">ResetTransform</span>();</span><br><span class="line">g.<span class="built_in">DrawString</span>(tile.<span class="built_in">c_str</span>(), tile.<span class="built_in">size</span>(), &amp;font, <span class="built_in">PointF</span>(rc.<span class="built_in">Width</span>() / <span class="number">6</span> * <span class="number">5</span>, i * rc.<span class="built_in">Height</span>() / (mUsageList.<span class="built_in">size</span>() + <span class="number">1</span>)), &amp;sb);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>实现新绘制界面<br><strong>主要实现思路：</strong>利用贝塞尔曲线绘制爱心，使用path合并为一个图形，利用渐变路径涂刷填充内部，最后进行旋转形成四叶草；另外还添加了位图和文字。基本覆盖课程内容。<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新绘制</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CGdiplusUsage_new_Draw</span> :<span class="keyword">public</span> CGdiplusUsage</span><br><span class="line">&#123;</span><br><span class="line">Gdiplus::Bitmap* bitmap;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CGdiplusUsage_new_Draw</span>()</span><br><span class="line">&#123;</span><br><span class="line">bitmap = Gdiplus::Bitmap::<span class="built_in">FromFile</span>(<span class="string">L&quot;..\\resource\\head.png&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">CGdiplusUsage_new_Draw</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> bitmap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">char</span>* <span class="title">name</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="string">&quot;draw_new&quot;</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">char</span>* <span class="title">caption</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="string">&quot;新绘制&quot;</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">draw_rotate_heart</span><span class="params">(Graphics&amp; g,</span></span></span><br><span class="line"><span class="params"><span class="function"><span class="type">float</span> angle, Rect&amp; rc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Matrix mt0;</span><br><span class="line">mt0.<span class="built_in">Translate</span>(rc.Width/<span class="number">2</span>,rc.Height/<span class="number">2</span>);</span><br><span class="line">Matrix mtRT;</span><br><span class="line">mtRT.<span class="built_in">Rotate</span>(angle);</span><br><span class="line">mt0.<span class="built_in">Multiply</span>(&amp;mtRT);</span><br><span class="line">Matrix mt1;</span><br><span class="line">mt1.<span class="built_in">Translate</span>(-rc.Width / <span class="number">2</span>, -rc.Height / <span class="number">2</span>);</span><br><span class="line">mt0.<span class="built_in">Multiply</span>(&amp;mt1);</span><br><span class="line"></span><br><span class="line">g.<span class="built_in">SetTransform</span>(&amp;mt0);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Pen penOutline(Color(222, 45, 38), 2); penOutline.SetDashStyle(DashStyleDashDot);</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> width = rc.Width;</span><br><span class="line"><span class="type">int</span> height = rc.Height;</span><br><span class="line">PointF points[] = &#123;</span><br><span class="line"><span class="built_in">PointF</span>(rc.Width / <span class="number">2</span>,rc.Height / <span class="number">8</span>),</span><br><span class="line"><span class="built_in">PointF</span>(rc.Width / <span class="number">2</span> - <span class="number">100</span>,rc.Height / <span class="number">5</span> - <span class="number">150</span>),</span><br><span class="line"><span class="built_in">PointF</span>(rc.Width / <span class="number">2</span> - <span class="number">200</span>,rc.Height / <span class="number">5</span> - <span class="number">150</span>),</span><br><span class="line"><span class="built_in">PointF</span>(rc.Width / <span class="number">2</span> - <span class="number">230</span>,rc.Height / <span class="number">5</span>),</span><br><span class="line"><span class="built_in">PointF</span>(rc.Width / <span class="number">2</span> - <span class="number">210</span>,rc.Height / <span class="number">5</span> + <span class="number">150</span>),</span><br><span class="line"><span class="built_in">PointF</span>(rc.Width / <span class="number">2</span> - <span class="number">100</span>,rc.Height / <span class="number">5</span> + <span class="number">200</span>),</span><br><span class="line"><span class="built_in">PointF</span>(width / <span class="number">2</span>,height / <span class="number">2</span>),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">PointF points1[] = &#123;</span><br><span class="line"><span class="built_in">PointF</span>(rc.Width / <span class="number">2</span>,rc.Height / <span class="number">8</span>),</span><br><span class="line"><span class="built_in">PointF</span>(rc.Width / <span class="number">2</span> + <span class="number">100</span>,rc.Height / <span class="number">5</span> - <span class="number">150</span>),</span><br><span class="line"><span class="built_in">PointF</span>(rc.Width / <span class="number">2</span> + <span class="number">200</span>,rc.Height / <span class="number">5</span> - <span class="number">150</span>),</span><br><span class="line"><span class="built_in">PointF</span>(rc.Width / <span class="number">2</span> + <span class="number">230</span>,rc.Height / <span class="number">5</span>),</span><br><span class="line"><span class="built_in">PointF</span>(rc.Width / <span class="number">2</span> + <span class="number">210</span>,rc.Height / <span class="number">5</span> + <span class="number">150</span>),</span><br><span class="line"><span class="built_in">PointF</span>(rc.Width / <span class="number">2</span> + <span class="number">100</span>,rc.Height / <span class="number">5</span> + <span class="number">200</span>),</span><br><span class="line"><span class="built_in">PointF</span>(width / <span class="number">2</span>,height / <span class="number">2</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//g.DrawLines(&amp;penOutline, points, 7);</span></span><br><span class="line"><span class="comment">//g.DrawLines(&amp;penOutline, points1, 7);</span></span><br><span class="line">GraphicsPath path;</span><br><span class="line">path.<span class="built_in">AddBeziers</span>(points, <span class="number">7</span>);</span><br><span class="line">path.<span class="built_in">AddBeziers</span>(points1, <span class="number">7</span>);</span><br><span class="line"></span><br><span class="line"><span class="function">Rect <span class="title">rc2</span><span class="params">(<span class="number">100</span>, <span class="number">100</span>, <span class="number">1000</span>, <span class="number">1000</span>)</span></span>;</span><br><span class="line"><span class="function">Gdiplus::PathGradientBrush <span class="title">brush</span><span class="params">(&amp;path)</span></span>;</span><br><span class="line">brush.<span class="built_in">SetCenterColor</span>(<span class="built_in">Color</span>(<span class="number">0</span>, <span class="number">109</span>, <span class="number">44</span>));</span><br><span class="line">brush.<span class="built_in">SetCenterPoint</span>(<span class="built_in">PointF</span>(rc.Width / <span class="number">2</span>, rc.Height / <span class="number">4</span>));</span><br><span class="line">Color colors[] = &#123; <span class="built_in">Color</span>(<span class="number">44</span>,<span class="number">162</span>,<span class="number">95</span>),<span class="built_in">Color</span>(<span class="number">102</span>,<span class="number">194</span>,<span class="number">164</span>),<span class="built_in">Color</span>(<span class="number">178</span>,<span class="number">226</span>,<span class="number">226</span>) &#125;;</span><br><span class="line"><span class="type">int</span> n = <span class="number">1</span>;</span><br><span class="line">brush.<span class="built_in">SetSurroundColors</span>(colors, &amp;n);</span><br><span class="line"></span><br><span class="line">g.<span class="built_in">FillPath</span>(&amp;brush, &amp;path);</span><br><span class="line"></span><br><span class="line">g.<span class="built_in">ResetTransform</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">draw</span><span class="params">(Graphics&amp; g, <span class="type">const</span> Rect&amp; rc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//背景</span></span><br><span class="line">Color background_color = <span class="built_in">Color</span>(<span class="number">204</span>, <span class="number">204</span>, <span class="number">204</span>);</span><br><span class="line">g.<span class="built_in">Clear</span>(Color::White);</span><br><span class="line"><span class="function">Gdiplus::HatchBrush <span class="title">brush1</span><span class="params">((Gdiplus::HatchStyle)<span class="number">3</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">background_color, Color::AlphaShift)</span></span>;</span><br><span class="line">g.<span class="built_in">FillRectangle</span>(&amp;brush1, rc);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> cx = rc.X + rc.Width / <span class="number">2</span>;</span><br><span class="line"><span class="type">int</span> cy = rc.Y + rc.Height / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> a = <span class="number">0</span>; a &lt; <span class="number">360</span>; a += <span class="number">90</span>)</span><br><span class="line">&#123;</span><br><span class="line">Rect rc2 = rc;</span><br><span class="line"><span class="built_in">draw_rotate_heart</span>(g, a, rc2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">g.<span class="built_in">DrawImage</span>(bitmap,rc.Width/<span class="number">2</span><span class="number">-100</span>,rc.Height/<span class="number">2</span><span class="number">-100</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> x = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> y = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> w = <span class="number">520</span>;</span><br><span class="line"><span class="type">int</span> h = <span class="number">300</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">RectF <span class="title">rc1</span><span class="params">(x,y,w,h)</span></span>;</span><br><span class="line"><span class="function">wstring <span class="title">text</span><span class="params">(<span class="string">L&quot;送你一片四叶草，祝生活幸福，好运连连！嘻嘻~&quot;</span>)</span></span>;</span><br><span class="line"><span class="function">SolidBrush <span class="title">brush</span><span class="params">(Color(<span class="number">21</span>,<span class="number">135</span>,<span class="number">73</span>))</span></span>;</span><br><span class="line"><span class="function">Pen <span class="title">pen</span><span class="params">(Color::Red)</span></span>;</span><br><span class="line"><span class="function">Gdiplus::Font <span class="title">font</span><span class="params">(<span class="string">L&quot;微软雅黑&quot;</span>, <span class="number">26</span>, FontStyleBold)</span></span>;</span><br><span class="line">Gdiplus::StringFormat fmt;</span><br><span class="line">fmt.<span class="built_in">SetAlignment</span>(StringAlignmentCenter);</span><br><span class="line">g.<span class="built_in">DrawString</span>(text.<span class="built_in">c_str</span>(), text.<span class="built_in">size</span>(), &amp;font, rc1, &amp;fmt, &amp;brush);</span><br><span class="line"><span class="comment">//g.DrawRectangle(&amp;pen, rc1);</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><strong>结果图：</strong><br><img src="/../img/06.png" alt="结果图"></li></ol>]]></content>
      
      
      <categories>
          
          <category> Learn_C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cpp第五章</title>
      <link href="/2023/04/17/Cpp%E7%AC%AC%E4%BA%94%E7%AB%A0/"/>
      <url>/2023/04/17/Cpp%E7%AC%AC%E4%BA%94%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="一、GUI实例"><a href="#一、GUI实例" class="headerlink" title="一、GUI实例"></a>一、GUI实例</h1><h2 id="1-创建Windows桌面应用程序"><a href="#1-创建Windows桌面应用程序" class="headerlink" title="1. 创建Windows桌面应用程序"></a>1. 创建Windows桌面应用程序</h2><h2 id="2-理解创建项目"><a href="#2-理解创建项目" class="headerlink" title="2. 理解创建项目"></a>2. 理解创建项目</h2><h3 id="2-1-代码部分"><a href="#2-1-代码部分" class="headerlink" title="2.1 代码部分"></a>2.1 代码部分</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// GUI_new.cpp : 定义应用程序的入口点。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;framework.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;GUI_new.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_LOADSTRING 100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局变量:</span></span><br><span class="line">HINSTANCE hInst;                                <span class="comment">// 当前实例</span></span><br><span class="line">WCHAR szTitle[MAX_LOADSTRING];                  <span class="comment">// 标题栏文本</span></span><br><span class="line">WCHAR szWindowClass[MAX_LOADSTRING];            <span class="comment">// 主窗口类名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 此代码模块中包含的函数的前向声明:</span></span><br><span class="line"><span class="function">ATOM                <span class="title">MyRegisterClass</span><span class="params">(HINSTANCE hInstance)</span></span>;</span><br><span class="line"><span class="function">BOOL                <span class="title">InitInstance</span><span class="params">(HINSTANCE, <span class="type">int</span>)</span></span>;</span><br><span class="line"><span class="function">LRESULT CALLBACK    <span class="title">WndProc</span><span class="params">(HWND, UINT, WPARAM, LPARAM)</span></span>;</span><br><span class="line"><span class="function">INT_PTR CALLBACK    <span class="title">About</span><span class="params">(HWND, UINT, WPARAM, LPARAM)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//程序入口函数</span></span><br><span class="line"><span class="comment">//参数含义：</span></span><br><span class="line"><span class="comment">//应用程序实例句柄 </span></span><br><span class="line"><span class="comment">//上一个应用程序句柄，在win32环境下，参数一般为NULL，不起作用了</span></span><br><span class="line"><span class="comment">//char * argv[] </span></span><br><span class="line"><span class="comment">//显示命令 最大化、最小化 正常</span></span><br><span class="line"><span class="comment">//w代表多字节应用程序</span></span><br><span class="line"><span class="function"><span class="type">int</span> APIENTRY <span class="title">wWinMain</span><span class="params">(_In_ HINSTANCE hInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">                     _In_opt_ HINSTANCE hPrevInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">                     _In_ LPWSTR    lpCmdLine,</span></span></span><br><span class="line"><span class="params"><span class="function">                     _In_ <span class="type">int</span>       nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">UNREFERENCED_PARAMETER</span>(hPrevInstance);</span><br><span class="line">    <span class="built_in">UNREFERENCED_PARAMETER</span>(lpCmdLine);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 在此处放置代码。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化全局字符串（资源中加载）</span></span><br><span class="line">    <span class="built_in">LoadStringW</span>(hInstance, IDS_APP_TITLE, szTitle, MAX_LOADSTRING);</span><br><span class="line">    <span class="built_in">LoadStringW</span>(hInstance, IDC_GUINEW, szWindowClass, MAX_LOADSTRING);</span><br><span class="line">    <span class="built_in">MyRegisterClass</span>(hInstance);<span class="comment">//1.设计并注册窗口</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 执行应用程序初始化:</span></span><br><span class="line">    <span class="comment">// 3.创建窗口</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">InitInstance</span> (hInstance, nCmdShow))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    HACCEL hAccelTable = <span class="built_in">LoadAccelerators</span>(hInstance, <span class="built_in">MAKEINTRESOURCE</span>(IDC_GUINEW));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     HWND        hwnd; 主窗口句柄</span></span><br><span class="line"><span class="comment">     UINT        message; 具体消息名称</span></span><br><span class="line"><span class="comment">     WPARAM      wParam; 附加消息 键盘消息</span></span><br><span class="line"><span class="comment">     LPARAM      lParam; 附加消息 鼠标消息</span></span><br><span class="line"><span class="comment">     DWORD       time;  消息产生时间</span></span><br><span class="line"><span class="comment">     POINT       pt;    附加消息  鼠标消息  x y</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    MSG msg;<span class="comment">//消息结构体，包括以上参数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//5、 通过循环取消息</span></span><br><span class="line">    <span class="comment">// 主消息循环:</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">GetMessage</span>(&amp;msg, <span class="literal">nullptr</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">          _Out_ LPMSG lpMsg, 消息</span></span><br><span class="line"><span class="comment">          _In_opt_ HWND hWnd, 捕获窗口 填NULL代表捕获所有的窗口</span></span><br><span class="line"><span class="comment">          _In_ UINT wMsgFilterMin,  //最小和最大的过滤的消息  一般填入0</span></span><br><span class="line"><span class="comment">          _In_ UINT wMsgFilterMax)  //填0代表捕获所有消息</span></span><br><span class="line"><span class="comment">          */</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">TranslateAccelerator</span>(msg.hwnd, hAccelTable, &amp;msg))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//翻译消息</span></span><br><span class="line">            <span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line">            <span class="comment">//分发消息</span></span><br><span class="line">            <span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (<span class="type">int</span>) msg.wParam;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  函数: MyRegisterClass()</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  目标: 注册窗口类。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function">ATOM <span class="title">MyRegisterClass</span><span class="params">(HINSTANCE hInstance)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    WNDCLASSEXW wcex;</span><br><span class="line"></span><br><span class="line">    wcex.cbSize = <span class="built_in">sizeof</span>(WNDCLASSEX);</span><br><span class="line"></span><br><span class="line">    wcex.style          = CS_HREDRAW | CS_VREDRAW;<span class="comment">//显示风格</span></span><br><span class="line">    wcex.lpfnWndProc    = WndProc;<span class="comment">//回调函数  窗口过程</span></span><br><span class="line">    wcex.cbClsExtra     = <span class="number">0</span>; <span class="comment">//类的额外的内存</span></span><br><span class="line">    wcex.cbWndExtra     = <span class="number">0</span>; <span class="comment">//窗口额外的内存</span></span><br><span class="line">    wcex.hInstance      = hInstance;<span class="comment">//应用程序实例句柄</span></span><br><span class="line">    wcex.hIcon          = <span class="built_in">LoadIcon</span>(hInstance, <span class="built_in">MAKEINTRESOURCE</span>(IDI_GUINEW));<span class="comment">//图标   如果第一个参数为NULL，代表使用系统提供的光标</span></span><br><span class="line">    wcex.hCursor        = <span class="built_in">LoadCursor</span>(<span class="literal">nullptr</span>, IDC_ARROW);<span class="comment">//设置光标 如果第一个参数为NULL，代表使用系统提供的光标</span></span><br><span class="line">    wcex.hbrBackground  = (HBRUSH)(COLOR_WINDOW+<span class="number">1</span>);<span class="comment">//设置背景</span></span><br><span class="line">    wcex.lpszMenuName   = <span class="built_in">MAKEINTRESOURCEW</span>(IDC_GUINEW);<span class="comment">//菜单名称</span></span><br><span class="line">    wcex.lpszClassName  = szWindowClass;<span class="comment">//指定窗口类名称</span></span><br><span class="line">    wcex.hIconSm        = <span class="built_in">LoadIcon</span>(wcex.hInstance, <span class="built_in">MAKEINTRESOURCE</span>(IDI_SMALL));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RegisterClassExW</span>(&amp;wcex);<span class="comment">//注册窗口类</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//   函数: InitInstance(HINSTANCE, int)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//   目标: 保存实例句柄并创建主窗口</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//   注释:</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        在此函数中，我们在全局变量中保存实例句柄并</span></span><br><span class="line"><span class="comment">//        创建和显示主程序窗口。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function">BOOL <span class="title">InitInstance</span><span class="params">(HINSTANCE hInstance, <span class="type">int</span> nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   hInst = hInstance; <span class="comment">// 将实例句柄存储在全局变量中</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    szWindowClass,  类名</span></span><br><span class="line"><span class="comment">    szTitle, 标题名</span></span><br><span class="line"><span class="comment">    dwStyle,  WS_OVERLAPPEDWINDOW 风格</span></span><br><span class="line"><span class="comment">    x,  显示坐标    CW_USEDEFAULT  默认值</span></span><br><span class="line"><span class="comment">    y,</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   HWND hWnd = <span class="built_in">CreateWindowW</span>(szWindowClass, szTitle, WS_OVERLAPPEDWINDOW,</span><br><span class="line">      CW_USEDEFAULT, <span class="number">0</span>, CW_USEDEFAULT, <span class="number">0</span>, <span class="literal">nullptr</span>, <span class="literal">nullptr</span>, hInstance, <span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (!hWnd)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> FALSE;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 4.显示和更新</span></span><br><span class="line">   <span class="built_in">ShowWindow</span>(hWnd, nCmdShow);</span><br><span class="line">   <span class="built_in">UpdateWindow</span>(hWnd);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  函数: WndProc(HWND, UINT, WPARAM, LPARAM)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  目标: 处理主窗口的消息。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// CALLBACK  代表__stdcall 参数的传递顺序：从右到左以此入栈，并且在函数返回前清空堆栈</span></span><br><span class="line"><span class="comment">// HWND hWnd 消息所属的窗口句柄</span></span><br><span class="line"><span class="comment">// UINT message //具体消息名称  WM_XXXX 消息名</span></span><br><span class="line"><span class="comment">// WPARAM wParam, //键盘附加消息</span></span><br><span class="line"><span class="comment">// LPARAM lParam  //鼠标附加消息</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//WM_COMMAND - 处理应用程序菜单</span></span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">            <span class="comment">// 分析菜单选择:</span></span><br><span class="line">            <span class="keyword">switch</span> (wmId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">                <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">                <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="comment">//  WM_PAINT    - 绘制主窗口</span></span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            PAINTSTRUCT ps;<span class="comment">//绘图结构体</span></span><br><span class="line">            HDC hdc = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> 在此处添加使用 hdc 的任何绘图代码...</span></span><br><span class="line">            <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_KEYDOWN: <span class="comment">//键盘</span></span><br><span class="line">        <span class="built_in">MessageBox</span>(hWnd, <span class="built_in">TEXT</span>(<span class="string">&quot;键盘按下&quot;</span>), <span class="built_in">TEXT</span>(<span class="string">&quot;键盘按下&quot;</span>), MB_OK);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  WM_DESTROY  - 发送退出消息并返回</span></span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// “关于”框的消息处理程序。</span></span><br><span class="line"><span class="function">INT_PTR CALLBACK <span class="title">About</span><span class="params">(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">UNREFERENCED_PARAMETER</span>(lParam);</span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_INITDIALOG:</span><br><span class="line">        <span class="keyword">return</span> (INT_PTR)TRUE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">LOWORD</span>(wParam) == IDOK || <span class="built_in">LOWORD</span>(wParam) == IDCANCEL)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">EndDialog</span>(hDlg, <span class="built_in">LOWORD</span>(wParam));</span><br><span class="line">            <span class="keyword">return</span> (INT_PTR)TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (INT_PTR)FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-2-资源部分"><a href="#2-2-资源部分" class="headerlink" title="2.2 资源部分"></a>2.2 资源部分</h3><ul><li>Dialog:对话框模板</li><li>Menu：菜单模板</li><li>Icon：图标</li><li>Cursor：光标</li><li>Bitmap：位图</li><li>Accelerators：加速键表</li><li>Stringtable：字符串表</li><li>Toolbar：工具条模板</li></ul><h3 id="2-3-绘制与交互实例"><a href="#2-3-绘制与交互实例" class="headerlink" title="2.3 绘制与交互实例"></a>2.3 绘制与交互实例</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  WM_PAINT    - 绘制主窗口</span></span><br><span class="line"> <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">     &#123;</span><br><span class="line">         PAINTSTRUCT ps;<span class="comment">//绘图结构体</span></span><br><span class="line">         HDC hdc = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">         <span class="comment">// <span class="doctag">TODO:</span> 在此处添加使用 hdc 的任何绘图代码...</span></span><br><span class="line">         POINT p;</span><br><span class="line">         RECT rc;</span><br><span class="line">         <span class="built_in">OutputDebugStringA</span>(<span class="string">&quot;-----painting.\n&quot;</span>);</span><br><span class="line">         <span class="built_in">GetClientRect</span>(hWnd, &amp;rc);</span><br><span class="line">         <span class="type">int</span> width = rc.right - rc.left;</span><br><span class="line">         <span class="type">int</span> height = rc.bottom - rc.top;</span><br><span class="line">         <span class="built_in">MoveToEx</span>(hdc, <span class="number">0</span>, <span class="number">0</span>, &amp;p);</span><br><span class="line">         <span class="built_in">LineTo</span>(hdc, width, height);</span><br><span class="line">         <span class="built_in">MoveToEx</span>(hdc, <span class="number">0</span>, height, &amp;p);</span><br><span class="line">         <span class="built_in">LineTo</span>(hdc, width, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">         <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">break</span>;</span><br><span class="line"> <span class="keyword">case</span> WM_LBUTTONDOWN:</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="type">wchar_t</span> text[<span class="number">256</span>];</span><br><span class="line">     <span class="type">int</span> x = <span class="built_in">LOWORD</span>(lParam);</span><br><span class="line">     <span class="type">int</span> y = <span class="built_in">HIWORD</span>(lParam);</span><br><span class="line">     <span class="built_in">wsprintf</span>(text, <span class="string">L&quot;mouse position x = % d,y = %d&quot;</span>, x, y);</span><br><span class="line">     <span class="built_in">MessageBox</span>(hWnd, text, <span class="string">L&quot;show message for mouse&quot;</span>, MB_OK);</span><br><span class="line">     <span class="keyword">break</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><h1 id="二、MFC实例"><a href="#二、MFC实例" class="headerlink" title="二、MFC实例"></a>二、MFC实例</h1><p>Microsoft Foundation Class</p><h2 id="1-创建MFC应用工程"><a href="#1-创建MFC应用工程" class="headerlink" title="1. 创建MFC应用工程"></a>1. 创建MFC应用工程</h2><p>demo:多文档（可选）-VS样式2008（可选不同样式）-（设为启动项）<br>demo1:单文档-MFC standard样式（实验demo）</p><h2 id="2-MFC相关要点"><a href="#2-MFC相关要点" class="headerlink" title="2. MFC相关要点"></a>2. MFC相关要点</h2><ul><li>MFC利用消息映射（Message Map）机制取代C&#x2F;C++语言中的switch-case结构来处理消息<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">BEGIN_MESSAGE_MAP</span>(CMFCDemo1View, CView)</span><br><span class="line"><span class="comment">// 标准打印命令</span></span><br><span class="line"><span class="built_in">ON_COMMAND</span>(ID_FILE_PRINT, &amp;CView::OnFilePrint)</span><br><span class="line"><span class="built_in">ON_COMMAND</span>(ID_FILE_PRINT_DIRECT, &amp;CView::OnFilePrint)</span><br><span class="line"><span class="built_in">ON_COMMAND</span>(ID_FILE_PRINT_PREVIEW, &amp;CView::OnFilePrintPreview)</span><br><span class="line"><span class="built_in">ON_WM_LBUTTONDOWN</span>()</span><br><span class="line"><span class="built_in">ON_COMMAND</span>(ID_Click_Me, &amp;CMFCDemo1View::On32771)</span><br><span class="line"><span class="built_in">ON_WM_MOUSEMOVE</span>()</span><br><span class="line"><span class="built_in">END_MESSAGE_MAP</span>()</span><br></pre></td></tr></table></figure></li><li><strong>理解:</strong></li></ul><ol><li>MainFrm.cpp:主窗口类,加载工具栏、状态栏</li><li>可利用类视图查看已有class和函数，并进行重写</li><li>在类视图中可以调用属性中的小图标“事件”（ID_XXX）“重写”、“消息”(交互操作)进行设置-选择某一种消息-add-自动添加对应函数（也可以用类向导）</li></ol><h3 id="实现一、左键弹窗显示坐标"><a href="#实现一、左键弹窗显示坐标" class="headerlink" title="实现一、左键弹窗显示坐标"></a>实现一、左键弹窗显示坐标</h3><ul><li>添加OnLButtonDown()函数，并添加绘制代码：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CMFCDemo1View::OnLButtonDown</span><span class="params">(UINT nFlags, CPoint point)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加消息处理程序代码和/或调用默认值</span></span><br><span class="line"><span class="type">wchar_t</span> text[<span class="number">256</span>];</span><br><span class="line"><span class="built_in">wsprintf</span>(text, <span class="string">L&quot;mouse position x = % d,y = %d&quot;</span>, point.x, point.y);</span><br><span class="line">::<span class="built_in">MessageBoxW</span>(<span class="keyword">this</span>-&gt;<span class="built_in">GetSafeHwnd</span>(), text, <span class="string">L&quot;show message for mouse&quot;</span>, MB_OK);</span><br><span class="line"></span><br><span class="line">CView::<span class="built_in">OnLButtonDown</span>(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="实现二、菜单点击响应"><a href="#实现二、菜单点击响应" class="headerlink" title="实现二、菜单点击响应"></a>实现二、菜单点击响应</h3><ul><li>CDC* pDC是图形设备的指针，可以在OnDraw()函数中进行绘制</li><li>在资源的Menu内添加或修改菜单栏-设置菜单选项ID-创建事件函数command<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CMFCDemo1View::On32771</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">::<span class="built_in">MessageBoxW</span>(<span class="keyword">this</span>-&gt;<span class="built_in">GetSafeHwnd</span>(), <span class="string">L&quot;Hello!&quot;</span>, <span class="string">L&quot;show message for mouse&quot;</span>, MB_OK);</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加命令处理程序代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="实现三、状态栏更新坐标"><a href="#实现三、状态栏更新坐标" class="headerlink" title="实现三、状态栏更新坐标"></a>实现三、状态栏更新坐标</h3><ul><li>在主窗口类中添加函数，并且设置对应消息<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MFCDemo1View.cpp</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CMFCDemo1View::OnMouseMove</span><span class="params">(UINT nFlags, CPoint point)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加消息处理程序代码和/或调用默认值</span></span><br><span class="line">CMainFrame* frame =(CMainFrame*) <span class="built_in">AfxGetMainWnd</span>();</span><br><span class="line">frame-&gt;<span class="built_in">show_mouse_message</span>(point);</span><br><span class="line">CView::<span class="built_in">OnMouseMove</span>(nFlags, point);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MainFrm.cpp</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CMainFrame::show_mouse_message</span><span class="params">(CPoint p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">wchar_t</span> text[<span class="number">256</span>];</span><br><span class="line"><span class="built_in">wsprintf</span>(text, <span class="string">L&quot;mouse position x = %d,y = %d&quot;</span>, p.x, p.y);</span><br><span class="line"></span><br><span class="line">m_wndStatusBar.<span class="built_in">SetPaneText</span>(<span class="number">0</span>, text, <span class="number">1</span>);<span class="comment">//设置状态栏信息</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="实现四、记录点坐标（窗口变化后仍保存）"><a href="#实现四、记录点坐标（窗口变化后仍保存）" class="headerlink" title="实现四、记录点坐标（窗口变化后仍保存）"></a>实现四、记录点坐标（窗口变化后仍保存）</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MFCDemo1Doc.h</span></span><br><span class="line"><span class="comment">// 操作</span></span><br><span class="line"><span class="comment">// 将坐标保存在文档中</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">std::vector&lt;CPoint&gt; points;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// MFCDemo1View.cpp</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CMFCDemo1View::OnDraw</span><span class="params">(CDC* pDC)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CMFCDemo1Doc* pDoc = <span class="built_in">GetDocument</span>();</span><br><span class="line"><span class="built_in">ASSERT_VALID</span>(pDoc);</span><br><span class="line"><span class="keyword">if</span> (!pDoc)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此处为本机数据添加绘制代码</span></span><br><span class="line"></span><br><span class="line">pDC-&gt;<span class="built_in">MoveTo</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">pDC-&gt;<span class="built_in">LineTo</span>(<span class="number">1000</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> points = pDoc-&gt;points;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> it = points.<span class="built_in">begin</span>(); it != points.<span class="built_in">end</span>(); it++,i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">auto</span> p = *it;</span><br><span class="line">pDC-&gt;<span class="built_in">Rectangle</span>(p.x - <span class="number">10</span>, p.y - <span class="number">10</span>, p.x + <span class="number">10</span>, p.y + <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">wchar_t</span> text[<span class="number">256</span>];</span><br><span class="line"><span class="built_in">wsprintf</span>(text, <span class="string">L&quot;mouse position x = %d,y = %d&quot;</span>, p.x, p.y);</span><br><span class="line">pDC-&gt;<span class="built_in">TextOutW</span>(<span class="number">0</span>, i * <span class="number">20</span>, text);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CMFCDemo1View::OnLButtonDown</span><span class="params">(UINT nFlags, CPoint point)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加消息处理程序代码和/或调用默认值</span></span><br><span class="line"><span class="comment">//wchar_t text[256];</span></span><br><span class="line"><span class="comment">//wsprintf(text, L&quot;mouse position x = %d,y = %d&quot;, point.x, point.y);</span></span><br><span class="line"><span class="comment">//::MessageBoxW(this-&gt;GetSafeHwnd(), text, L&quot;show message for mouse&quot;, MB_OK);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//CView::OnLButtonDown(nFlags, point);</span></span><br><span class="line"><span class="built_in">GetDocument</span>()-&gt;points.<span class="built_in">push_back</span>(point);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">Invalidate</span>();</span><br><span class="line">CView::<span class="built_in">OnLButtonUp</span>(nFlags, point);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn_C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cpp第四章</title>
      <link href="/2023/04/04/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/"/>
      <url>/2023/04/04/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="第四章-复杂项目的组织和代码复用实验"><a href="#第四章-复杂项目的组织和代码复用实验" class="headerlink" title="第四章 复杂项目的组织和代码复用实验"></a>第四章 复杂项目的组织和代码复用实验</h1><h2 id="一、实验目的"><a href="#一、实验目的" class="headerlink" title="一、实验目的"></a>一、实验目的</h2><p>分别实现静态库、动态库以及接口化动态库的代码复用实验</p><h2 id="二、实验过程及结果"><a href="#二、实验过程及结果" class="headerlink" title="二、实验过程及结果"></a>二、实验过程及结果</h2><h3 id="2-1-静态库实现"><a href="#2-1-静态库实现" class="headerlink" title="2.1 静态库实现"></a>2.1 静态库实现</h3><p><strong>要实现静态库的代码复用，首先我们要拥有一个静态库</strong></p><h4 id="1-打开已有的static-lib解决方案并创建静态库shaping-lib"><a href="#1-打开已有的static-lib解决方案并创建静态库shaping-lib" class="headerlink" title="1. 打开已有的static-lib解决方案并创建静态库shaping.lib"></a>1. 打开已有的static-lib解决方案并创建静态库shaping.lib</h4><p>首先需设置项目属性页的配置（<strong>可单独设置</strong>）、输出目录、配置类型（<strong>影响文件运行方式与输出内容</strong>）<br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/00.png" alt="图0配置属性-常规"><br>发现.cpp文件的主要报错为：<strong>“后面有“::”的名称一定是类名或命名空间名”</strong><br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/01.png" alt="图1.cpp文件报错"><br>为此打开属性页并设置附加包含目录<br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/02.png" alt="图2附加包含目录"><br>报错解决<br>同时.h文件主要报错如下图3<br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/03.png" alt="图3.h文件报错"><br>不使用预编译头即可解决，图略<br>预编译头解释如下：<br><em>将头文件中的代码预先编译成中间代码（中间语言），然后在后续的编译中直接引用这些中间代码，从而避免了重复编译和处理头文件的时间。</em></p><p>设置配置为release，平台为x64，重新生成解决方案即可获得静态库文件..\static-lib\x64\Debug\shaping.lib\shaping.lib</p><p><strong>获得了生成的静态库，下一步就是将其在测试项目中调用</strong></p><h4 id="2-引用静态库"><a href="#2-引用静态库" class="headerlink" title="2. 引用静态库"></a>2. 引用静态库</h4><p>设置Shapeing_lib_test为启动项</p><p>设置项目附加包含目录，找到头文件<br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/04.png" alt="图4附加包含目录"><br>指定链接库文件——设置附加依赖项、附加库目录<br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/05.png" alt="图5附加依赖项"><br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/06.png" alt="图6附加库目录"></p><p>设置完以上内容后，仍然无法运行程序，经过尝试发现以上的设定需要同时配置debug与release，一般情况下<strong>可以在设置时改为所有配置和所有平台</strong><br>至此，程序可以正常运行：<br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/07.png" alt="图7运行结果"></p><h3 id="2-2-动态库实现"><a href="#2-2-动态库实现" class="headerlink" title="2.2 动态库实现"></a>2.2 动态库实现</h3><h4 id="1-打开已有的dyna-lib解决方案并创建动态库库shaping-dll"><a href="#1-打开已有的dyna-lib解决方案并创建动态库库shaping-dll" class="headerlink" title="1. 打开已有的dyna-lib解决方案并创建动态库库shaping.dll"></a>1. 打开已有的dyna-lib解决方案并创建动态库库shaping.dll</h4><p>与静态库相同，更改配置，输出目录，配置类型（.dll）；同时选择不使用预编译头</p><p>添加附加包含目录<br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/08.png" alt="图8添加附加包含目录"></p><p>增添预处理器定义<br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/09.png" alt="图9增添预处理器定义"></p><p>生成动态库文件：<br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/10.png" alt="图10动态库文件"><br><strong>各部分文件作用：</strong></p><ul><li>.dll动态库文件</li><li>.lib用以链接信息</li><li>.exp导出文件，共链接器使用</li></ul><h4 id="2-链接动态库"><a href="#2-链接动态库" class="headerlink" title="2.链接动态库"></a>2.链接动态库</h4><p>与静态库链接相同，依次进行：</p><ul><li>设为启动项</li><li>添加包含目录</li><li>链接器附加库目录与依赖项。<br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/11.png" alt="图11运行结果"></li></ul><h3 id="2-3-动态库接口化"><a href="#2-3-动态库接口化" class="headerlink" title="2.3 动态库接口化"></a>2.3 动态库接口化</h3><p><strong>dll导出的缺陷：</strong></p><ul><li>导出符号庞大</li><li>类的实现暴露<ul><li>实现依赖</li><li>破坏封装</li></ul></li></ul><p><strong>解决方式：</strong></p><ul><li>类接口化<ul><li>使用抽象类</li><li>只暴露公用函数</li></ul></li><li>对象创建工厂化<ul><li>使用工厂函数创建</li></ul></li></ul><h4 id="1-生成动态库"><a href="#1-生成动态库" class="headerlink" title="1. 生成动态库"></a>1. 生成动态库</h4><p>利用 <em>“动态库实现”</em>相同设置及步骤生成动态库<img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/12.png" alt="图12生成动态库"></p><h4 id="2-链接接口化动态库"><a href="#2-链接接口化动态库" class="headerlink" title="2. 链接接口化动态库"></a>2. 链接接口化动态库</h4><p>主要步骤包括：</p><ul><li>设为启动项</li><li>附加包含目录</li><li>附加库目录</li><li>附加依赖项</li></ul><p><strong>运行结果：</strong><br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/13.png" alt="图13运行结果"></p><h2 id="三、实验心得与总结"><a href="#三、实验心得与总结" class="headerlink" title="三、实验心得与总结"></a>三、实验心得与总结</h2><p>本次实验加深了我对复杂项目组织结构的理解，对项目创建库、链接使用库等代码复用流程有了初步地认识，打开了c++新的知识大门。最周通过在实践中的多次试错，我逐渐熟悉了生成库与链接库的配置要求。<br>具体总结如下：</p><h3 id="1-配置常规属性"><a href="#1-配置常规属性" class="headerlink" title="1. 配置常规属性"></a>1. 配置常规属性</h3><p>配置属性中需要关注的有：</p><ul><li>配置：debug,release,区别在于程序的运行模式</li><li>平台：win32,x64等<br><strong>配置和平台相互独立，可自由搭配设置，也可以直接所有配置与平台一起设置</strong></li><li>输出目录：可利用宏地址$()</li><li>配置类型：主要包括.lib,.dll,.exe,用作输出不同类型的文件，用于生成库和运行程序</li><li>SDK和工具集：不同版本的VS默认不同类型，在利用别人的代码时报错可以查看一下这里</li></ul><p><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/14.png" alt="图14配置常规属性"></p><h3 id="2-C-x2F-C-设置"><a href="#2-C-x2F-C-设置" class="headerlink" title="2. C&#x2F;C++设置"></a>2. C&#x2F;C++设置</h3><p>需要关注的有：</p><ul><li>常规-附加包含目录：这里主要需要链接程序所需的头文件地址</li><li>预处理器</li><li>预编译头：没有需要设置“不使用编译头”<br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/15.png" alt="图15C/C++设置"></li></ul><h3 id="3-链接器设置"><a href="#3-链接器设置" class="headerlink" title="3. 链接器设置"></a>3. 链接器设置</h3><p>需要关注的有：</p><ul><li>常规-附加库目录：链接库的文件地址</li><li>输入-附加依赖项：包含引用库名<br><img src="/../img/Cpp%E7%AC%AC%E5%9B%9B%E7%AB%A0/16.png" alt="图16链接器设置"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Learn_C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cpp第三章</title>
      <link href="/2023/03/29/Cpp%E7%AC%AC%E4%B8%89%E7%AB%A0/"/>
      <url>/2023/03/29/Cpp%E7%AC%AC%E4%B8%89%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="一、模板"><a href="#一、模板" class="headerlink" title="一、模板"></a>一、模板</h1><h2 id="1-模板使用template-typename-x2F-class关键词定义-一般使用typename"><a href="#1-模板使用template-typename-x2F-class关键词定义-一般使用typename" class="headerlink" title="1. 模板使用template,typename&#x2F;class关键词定义,一般使用typename"></a>1. 模板使用template,typename&#x2F;class关键词定义,一般使用typename</h2><ul><li>函数模板定义格式<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Ta,<span class="keyword">typename</span> Tb,...&gt;</span></span><br><span class="line"><span class="function">return_type <span class="title">tfunction_name</span><span class="params">(argTa a,argTb b,...)</span></span></span><br><span class="line"><span class="function"></span>&#123;...&#125;;</span><br></pre></td></tr></table></figure></li><li>类模板定义格式<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Ta,<span class="keyword">typename</span> Tb,...&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">tclass_name</span></span><br><span class="line">&#123;...&#125;;</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-模板实例化"><a href="#2-模板实例化" class="headerlink" title="2. 模板实例化"></a>2. 模板实例化</h2><ul><li>模板在使用时才真正编译成可执行代码</li><li>可以将模板简单地理解为类型的替换</li><li>函数模板定义：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span></span><br><span class="line"><span class="function">T <span class="title">sq2</span><span class="params">(T&amp; a,T&amp; b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a*a+b*b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>函数模板调用实例：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="built_in">sq2</span>&lt;<span class="type">int</span>&gt;(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"><span class="type">float</span> f= <span class="built_in">sq2</span>&lt;<span class="type">float</span>&gt;(<span class="number">1.0f</span>,<span class="number">2.0f</span>);</span><br></pre></td></tr></table></figure></li><li>类模板定义：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">T</span>=<span class="type">float</span>&gt; <span class="comment">//C++模板支持默认模板参数</span></span><br><span class="line"><span class="keyword">class</span> Point2D</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    T x;</span><br><span class="line">    T y;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>类模板调用：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> Point2D&lt;<span class="type">float</span>&gt; Point2i; <span class="comment">//使用类模板定义类型</span></span><br><span class="line"><span class="function">Point2D&lt;<span class="type">int</span>&gt; <span class="title">p1</span><span class="params">(<span class="number">0</span>,<span class="number">0</span>)</span> <span class="title">p2</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>)</span></span>;</span><br></pre></td></tr></table></figure></li><li>只要T支持*和+就可以，可以重载实现</li><li>数值可以作为模板参数，类型包括：各种整数和枚举值</li><li>模板可以嵌套</li></ul><h1 id="二、STL"><a href="#二、STL" class="headerlink" title="二、STL"></a>二、STL</h1><p>Standard Template Library:基于模板实现的C++基础库</p><ul><li>包括通用数据结构和算法</li><li>遵循一致的设计模式</li><li>C++标准库的一部分</li><li>位于std命名空间</li><li>特性：准跨平台，清晰的结构</li><li>主要内容：容器、迭代器、算法等</li><li>容器、迭代器实例：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//vector模板初始化</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; x&#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第一种遍历方法：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; x.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; x[i] &lt;&lt; <span class="string">&quot;,&quot;</span>;<span class="comment">//下标访问</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt; endl &lt;&lt; <span class="string">&quot;第二种遍历方法：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i = x.<span class="built_in">begin</span>(); i &lt; x.<span class="built_in">end</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; *i &lt;&lt; <span class="string">&quot;,&quot;</span>;<span class="comment">//迭代器访问,迭代器模拟指针行为</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;第三种遍历方法：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i = x.<span class="built_in">begin</span>(); i != x.<span class="built_in">end</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; *i &lt;&lt; <span class="string">&quot;,&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;第四种遍历方法：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">auto</span> i = x.<span class="built_in">begin</span>();</span><br><span class="line"><span class="keyword">while</span> (i &lt; x.<span class="built_in">end</span>())</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; *i &lt;&lt; <span class="string">&quot;,&quot;</span>;</span><br><span class="line">i += <span class="number">2</span>;<span class="comment">//随机访问迭代器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>主要顺序容器：</li></ul><ol><li>array&lt;T,N&gt;:数组容器，表示可以存储N个T类型的元素，长度固定<br>输入数组元素：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.<span class="built_in">at</span>(i) = x;</span><br></pre></td></tr></table></figure></li><li>vector<T>:向量容器，一个长度可变的序列容器，尾部插入更高效，自动申请更多内存<br>设置容器大小：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vector.<span class="built_in">reserve</span>(<span class="number">20</span>);</span><br></pre></td></tr></table></figure>使用其他数组内容初始化<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vector.&lt;<span class="type">int</span>&gt; <span class="built_in">values2</span>(<span class="built_in">begin</span>(values1),<span class="built_in">begin</span>(values1)+<span class="number">3</span>);</span><br></pre></td></tr></table></figure></li><li>deque<T>:双端队列容器，与vector类似，头部尾部插入删除高效</li><li>list<T>：链表容器，双向链表形式组织元素，高效增删，访问较慢</li><li>forward_list<T>:正向链表容器，单链表形式组织元素</li></ol><ul><li>键-值容器：map,set，multimap,multiset等</li></ul>]]></content>
      
      
      <categories>
          
          <category> Learn_C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cpp第二章</title>
      <link href="/2023/03/29/Cpp%E7%AC%AC%E4%BA%8C%E7%AB%A0/"/>
      <url>/2023/03/29/Cpp%E7%AC%AC%E4%BA%8C%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="一、继承"><a href="#一、继承" class="headerlink" title="一、继承"></a>一、继承</h1><ol><li>C++支持多重继承（可以有多个父类）</li><li>父类的所有内容在子类函数中均可见<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Point</span>(<span class="type">double</span> x, <span class="type">double</span> y)</span><br><span class="line">:_x(x), _y(y) &#123;&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">move</span><span class="params">(<span class="type">double</span> x, <span class="type">double</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_x = x;</span><br><span class="line">_y = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">double</span> _x;</span><br><span class="line"><span class="type">double</span> _y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span> :<span class="keyword">public</span> Point</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Circle</span>(<span class="type">double</span> x, <span class="type">double</span> y, <span class="type">double</span> r)</span><br><span class="line">:<span class="built_in">Point</span>(x,y), _r(r) &#123;&#125;;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">double</span> _r;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><strong>类型转换</strong></li><li>static_cast&lt;&gt; 经过静态类型检查的转换</li><li>dynamic_cast&lt;&gt; 具有继承关系的类才能转</li><li>const_cast&lt;&gt; 去掉const约束</li><li>reinterpret_cast&lt;&gt; 任意指针的地址级转换<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Point* p1, * c1, * r1;</span><br><span class="line">p1 = <span class="keyword">new</span> <span class="built_in">Point</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">c1 = <span class="keyword">new</span> <span class="built_in">Circle</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">r1 = <span class="keyword">new</span> <span class="built_in">Rectangle</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">Circle* c2 = (Circle*)(c1);<span class="comment">//强制类型转换</span></span><br><span class="line">c2-&gt;<span class="built_in">set_r</span>(<span class="number">3</span>);</span><br><span class="line">Rectangle* r2 = <span class="built_in">static_cast</span>&lt;Rectangle*&gt;(r1);</span><br><span class="line">r2-&gt;<span class="built_in">move</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure></li></ol><h1 id="二、多态与虚函数"><a href="#二、多态与虚函数" class="headerlink" title="二、多态与虚函数"></a>二、多态与虚函数</h1><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><ol><li>在C++中，向对象发送信息，就是调用对象上的方法</li><li>多态意味着调用成员函数时，会根据调用函数的对象类型来执行不同的函数过程</li><li>基类定义一个函数，子类对父类函数重新是心啊并覆盖父类的实现</li></ol><h2 id="virtual关键字"><a href="#virtual关键字" class="headerlink" title="virtual关键字"></a>virtual关键字</h2><ol><li>被重载的虚函数，在调用时总是调用到最终的实现上</li></ol><h1 id="三、函数重载与运算符重载"><a href="#三、函数重载与运算符重载" class="headerlink" title="三、函数重载与运算符重载"></a>三、函数重载与运算符重载</h1><ol><li>函数重载<br>编译器根据参数类型产生代码，调用适当的函数</li><li>运算符重载<br>运算符是一种特殊名称的函数<br>&#x2F;&#x2F; 友元函数<br>2.1 Complex operator+ (Complex&amp; c1,Cjomplex&amp; c2);<br>&#x2F;&#x2F; 成员函数<br>2.2 Complex Complex::operator(Complex&amp; c2);<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Complex</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Complex <span class="keyword">operator</span>+(Complex&amp; c2);</span><br><span class="line"><span class="built_in">Complex</span>() &#123; real = <span class="number">0</span>; imag = <span class="number">0</span>; &#125;</span><br><span class="line"><span class="built_in">Complex</span>(<span class="type">double</span>  r, <span class="type">double</span> i) &#123; real = r; imag = i; &#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">double</span> real;</span><br><span class="line"><span class="type">double</span> imag;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现</span></span><br><span class="line">Complex Complex::<span class="keyword">operator</span>+(Complex&amp; c2)</span><br><span class="line">&#123;</span><br><span class="line">Complex c;</span><br><span class="line">c.real = real + c2.real;</span><br><span class="line">c.imag = imag + c2.imag;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Complex::display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::cout &lt;&lt; real &lt;&lt;<span class="string">&quot;,&quot;</span>&lt;&lt;imag &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用</span></span><br><span class="line"><span class="function">Complex <span class="title">c1</span><span class="params">(<span class="number">3</span>, <span class="number">4</span>)</span>, <span class="title">c2</span><span class="params">(<span class="number">5</span>, <span class="number">-10</span>)</span>, c3</span>;</span><br><span class="line">c3 = c1 + c2;</span><br><span class="line">c1.<span class="built_in">display</span>();</span><br><span class="line">c2.<span class="built_in">display</span>();</span><br><span class="line">c3.<span class="built_in">display</span>();</span><br></pre></td></tr></table></figure><strong>运算符重载规则</strong></li><li>不允许用户自己定义新的运算符</li><li>五个运算符不能重载</li><li>不能改变运算符运算对象的个数<br><strong>双目运算符重载</strong><br>有两个操作数，例如+ - * &#x2F; &#x3D;&#x3D; &#x3D; &lt; &gt; &gt;&#x3D; &lt;&#x3D;<br><strong>单目运算符重载</strong><br>只有一个参数，例如++ – ！<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Time operator++()；//前置自增运算</span><br><span class="line">Time operator++(int);//后置自增运算</span><br></pre></td></tr></table></figure><strong>下标运算符</strong><br>[]<br><strong>括号运算符</strong><br>()</li></ol><h1 id="四、命名空间"><a href="#四、命名空间" class="headerlink" title="四、命名空间"></a>四、命名空间</h1><p>C++标准库的命名空间是std<br>各种第三方库都使用了命名空间</p><h1 id="五、标准C-流库"><a href="#五、标准C-流库" class="headerlink" title="五、标准C++流库"></a>五、标准C++流库</h1><ol><li>cin:标准输入</li><li>cout:标准输出</li><li>clog：标准日志</li><li>cerrL:标准错误</li><li>格式控制<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cout&lt;&lt;<span class="built_in">setiosflags</span>(ios::left|ios::showpoint);<span class="comment">//左对齐，一般实数显示</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="六、字符串与string类"><a href="#六、字符串与string类" class="headerlink" title="六、字符串与string类"></a>六、字符串与string类</h1><ol><li>以’\0’结尾</li><li>string 字符串；wstring 双字节字符串</li><li><ul><li>+&#x3D; substr(2,4)&#x2F;&#x2F;截取子串</li></ul></li><li>查找方法族</li></ol>]]></content>
      
      
      <categories>
          
          <category> Learn_C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++第一章</title>
      <link href="/2023/03/28/Cpp%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
      <url>/2023/03/28/Cpp%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="一、类与对象的基本使用"><a href="#一、类与对象的基本使用" class="headerlink" title="一、类与对象的基本使用"></a>一、类与对象的基本使用</h1><h2 id="实现1"><a href="#实现1" class="headerlink" title="实现1"></a>实现1</h2><p><strong>注意堆栈上对象的调用的区别</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">double</span> x;</span><br><span class="line"><span class="type">double</span> y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Line</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Point start;</span><br><span class="line">Point end;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getlength</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>((start.x - end.x) * (start.x - end.x)</span><br><span class="line">+ (start.y - end.y) * (start.y - end.y));</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#123;</span><br><span class="line">Line line1; <span class="comment">//栈上对象，出作用域自动销毁</span></span><br><span class="line">line1.start.x = <span class="number">0</span>;</span><br><span class="line">line1.start.y = <span class="number">0</span>;</span><br><span class="line">line1.end.x = <span class="number">1</span>;</span><br><span class="line">line1.end.y = <span class="number">1</span>;</span><br><span class="line">std::cout &lt;&lt; line1.<span class="built_in">getlength</span>() &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">Line* line2 = <span class="keyword">new</span> <span class="built_in">Line</span>();<span class="comment">//堆上对象</span></span><br><span class="line">line2-&gt;start.x = <span class="number">0</span>;</span><br><span class="line">line2-&gt;start.y = <span class="number">0</span>;</span><br><span class="line">line2-&gt;end.x = <span class="number">1</span>;</span><br><span class="line">line2-&gt;end.y = <span class="number">1</span>;</span><br><span class="line">std::cout &lt;&lt; line2-&gt;<span class="built_in">getlength</span>() &lt;&lt; std::endl;</span><br><span class="line"><span class="keyword">delete</span> line2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="实现2"><a href="#实现2" class="headerlink" title="实现2"></a>实现2</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">double</span> x;</span><br><span class="line"><span class="type">double</span> y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Line</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Point *start;</span><br><span class="line">Point *end;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getlength</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>((start-&gt;x - end-&gt;x) * (start-&gt;x - end-&gt;x)</span><br><span class="line">+ (start-&gt;y - end-&gt;y) * (start-&gt;y - end-&gt;y));</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#123;</span><br><span class="line">Line *line1 = <span class="keyword">new</span> <span class="built_in">Line</span>();</span><br><span class="line">Line* line2 = <span class="keyword">new</span> <span class="built_in">Line</span>();</span><br><span class="line">Line* line3 = <span class="keyword">new</span> <span class="built_in">Line</span>();</span><br><span class="line"><span class="keyword">auto</span> p1 = <span class="keyword">new</span> <span class="built_in">Point</span>();</span><br><span class="line">p1-&gt;x = p1-&gt;y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">auto</span> p2 = <span class="keyword">new</span> <span class="built_in">Point</span>();</span><br><span class="line">p2-&gt;x = <span class="number">1</span>; p2-&gt;y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">auto</span> p3 = <span class="keyword">new</span> <span class="built_in">Point</span>();</span><br><span class="line">p3-&gt;x = p3-&gt;y = <span class="number">1</span>;</span><br><span class="line">line1-&gt;start = p1; line1-&gt;end = p2;</span><br><span class="line">line2-&gt;start = p2; line2-&gt;end = p3;</span><br><span class="line">line3-&gt;start = p3; line3-&gt;end = p1;</span><br><span class="line"></span><br><span class="line">std::cout &lt;&lt;<span class="string">&quot;line1 length:&quot;</span> &lt;&lt;line1-&gt;<span class="built_in">getlength</span>() &lt;&lt; std::endl;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;line2 length:&quot;</span> &lt;&lt;line2-&gt;<span class="built_in">getlength</span>() &lt;&lt; std::endl;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;line3 length:&quot;</span> &lt;&lt;line3-&gt;<span class="built_in">getlength</span>() &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> p1;</span><br><span class="line"><span class="keyword">delete</span> p2;</span><br><span class="line"><span class="keyword">delete</span> p3;</span><br><span class="line"><span class="keyword">delete</span> line1;</span><br><span class="line"><span class="keyword">delete</span> line2;</span><br><span class="line"><span class="keyword">delete</span> line3;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现3"><a href="#实现3" class="headerlink" title="实现3"></a>实现3</h2><p><strong>构造函数、析构函数与基于引用计数的内存管理</strong><br>feature.h:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Point</span>(<span class="type">double</span> x = <span class="number">0</span>, <span class="type">double</span> y = <span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">x</span><span class="params">()</span> <span class="type">const</span></span>;<span class="comment">//const不可更改的目标，const成员函数不会对对象状态进行更改</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">y</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">x</span><span class="params">(<span class="type">double</span> x)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">y</span><span class="params">(<span class="type">double</span> y)</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">double</span> _x;</span><br><span class="line"><span class="type">double</span> _y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Line</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Line</span>(Point* start, Point* end);</span><br><span class="line">~<span class="built_in">Line</span>();</span><br><span class="line"><span class="function">Point* <span class="title">start</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">Point* <span class="title">end</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getlength</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Point* _start;</span><br><span class="line">Point* _end;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>feature.cpp:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;Cpp001.h&quot;</span></span></span><br><span class="line">Point::<span class="built_in">Point</span>(<span class="type">double</span> x, <span class="type">double</span> y)</span><br><span class="line">&#123;</span><br><span class="line">_x = x;</span><br><span class="line">_y = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Point::x</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> _x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Point::y</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> _y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Point::x</span><span class="params">(<span class="type">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_x = x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Point::y</span><span class="params">(<span class="type">double</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_y = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Line::<span class="built_in">Line</span>(Point* start, Point* end)</span><br><span class="line">:_start(start), _end(end)<span class="comment">//初始化列表</span></span><br><span class="line"><span class="comment">//如果类的成员变量为引用，则必须初始化，必须在这初始化</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Line:: ~<span class="built_in">Line</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> _start;</span><br><span class="line"><span class="keyword">delete</span> _end;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Point* <span class="title">Line::start</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> _start;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Point* <span class="title">Line::end</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> _end;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Line::getlength</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>((_start-&gt;<span class="built_in">x</span>() - _end-&gt;<span class="built_in">x</span>()) * (_start-&gt;<span class="built_in">x</span>() - _end-&gt;<span class="built_in">x</span>())</span><br><span class="line">+ (_start-&gt;<span class="built_in">y</span>() - _end-&gt;<span class="built_in">y</span>()) * (_start-&gt;<span class="built_in">y</span>() - _end-&gt;<span class="built_in">y</span>()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Point <span class="title">p1</span><span class="params">(<span class="number">1</span>)</span></span>;<span class="comment">//(1,0)</span></span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;P1:&quot;</span> &lt;&lt; p1.<span class="built_in">x</span>() &lt;&lt; p1.<span class="built_in">y</span>() &lt;&lt; std::endl;</span><br><span class="line">p1.<span class="built_in">x</span>(<span class="number">1</span>);</span><br><span class="line">p1.<span class="built_in">y</span>(<span class="number">1</span>);</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;P1:&quot;</span> &lt;&lt; p1.<span class="built_in">x</span>() &lt;&lt; p1.<span class="built_in">y</span>() &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> Point* p2 = &amp;p1;<span class="comment">//const指针</span></span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;P2:&quot;</span> &lt;&lt; p2-&gt;<span class="built_in">x</span>() &lt;&lt; p2-&gt;<span class="built_in">y</span>() &lt;&lt; std::endl;</span><br><span class="line"><span class="comment">/*p2-&gt;x(2); p2是const</span></span><br><span class="line"><span class="comment">p2-&gt;y(2);*/</span></span><br><span class="line"></span><br><span class="line">Point&amp; p3 = p1;<span class="comment">//引用;如果加上const,无法调用x(double x)修改对象</span></span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;p3:&quot;</span> &lt;&lt; p3.<span class="built_in">x</span>() &lt;&lt; p3.<span class="built_in">y</span>() &lt;&lt; std::endl;</span><br><span class="line">p3.<span class="built_in">x</span>(<span class="number">3</span>);</span><br><span class="line">p3.<span class="built_in">y</span>(<span class="number">3</span>);</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;p3::&quot;</span> &lt;&lt; p3.<span class="built_in">x</span>() &lt;&lt; p3.<span class="built_in">y</span>() &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>#实现4<br><em>C++内存需要手动释放，如果对象有复杂引用关系，内存管理会非常负载，<strong>引用计数</strong>是一个内存管理方案</em><br>基本思路如下：<br>    创建Line或者Point时计数器+1,Line释放时Point计数器-1<br>feature.h:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//引用计数器</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">addRef</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_ref_counter++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">release</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_ref_counter--;</span><br><span class="line"><span class="keyword">if</span> (_ref_counter == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>feature.cpp:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Point::<span class="built_in">Point</span>(<span class="type">double</span> x, <span class="type">double</span> y)</span><br><span class="line">:_x(x),_y(y),_ref_counter(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Line::<span class="built_in">Line</span>(Point* start, Point* end)</span><br><span class="line">:_start(start), _end(end),_ref_counter(<span class="number">1</span>)<span class="comment">//初始化列表</span></span><br><span class="line"><span class="comment">//如果类的成员变量为引用，则必须初始化，必须在这初始化</span></span><br><span class="line">&#123;</span><br><span class="line">_start-&gt;<span class="built_in">addRef</span>();</span><br><span class="line">_end-&gt;<span class="built_in">addRef</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Line:: ~<span class="built_in">Line</span>()</span><br><span class="line">&#123;</span><br><span class="line">_start-&gt;<span class="built_in">release</span>();</span><br><span class="line">_end-&gt;<span class="built_in">release</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二、再看构造函数与析构函数"><a href="#二、再看构造函数与析构函数" class="headerlink" title="二、再看构造函数与析构函数"></a>二、再看构造函数与析构函数</h1><h2 id="1-拷贝构造函数："><a href="#1-拷贝构造函数：" class="headerlink" title="1.拷贝构造函数："></a>1.拷贝构造函数：</h2><p>从一个对象，拷贝内容创建一个新对象<br>cpp:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Point</span>(<span class="type">const</span> Point&amp; other)</span><br><span class="line">&#123;</span><br><span class="line">_x = other._x;</span><br><span class="line">_y = other._y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将调用构造拷贝函数</span></span><br><span class="line"><span class="function">Point <span class="title">get_start</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> start;&#125;</span><br><span class="line"><span class="function">Point <span class="title">get_end</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> end;&#125;</span><br></pre></td></tr></table></figure><p><strong>尽量使用对象的引用或者指针作为函数参数或者返回值，避免构造拷贝函数的调用：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动变量，可拿可改</span></span><br><span class="line"><span class="function">Point&amp; <span class="title">get_start_ref</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> start;&#125;</span><br><span class="line"><span class="function">Point&amp; <span class="title">get_end_ref</span><span class="params">()</span><span class="params">(<span class="keyword">return</span> end;)</span></span></span><br><span class="line"><span class="function"><span class="comment">//加上const,能拿能改</span></span></span><br></pre></td></tr></table></figure><h2 id="2-深层拷贝与浅层拷贝"><a href="#2-深层拷贝与浅层拷贝" class="headerlink" title="2.深层拷贝与浅层拷贝"></a>2.深层拷贝与浅层拷贝</h2><p><strong>无好坏之分，都有需要</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//浅层拷贝</span></span><br><span class="line">Line::<span class="built_in">Line</span>(Line* other)</span><br><span class="line">&#123;</span><br><span class="line">_start = other-&gt;<span class="built_in">start</span>();</span><br><span class="line">_end = other-&gt;<span class="built_in">end</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> p1 = <span class="keyword">new</span> <span class="built_in">Point</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">auto</span> p2 = <span class="keyword">new</span> <span class="built_in">Point</span>(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">auto</span> line1 =<span class="keyword">new</span> <span class="built_in">Line</span>(p1, p2);</span><br><span class="line"><span class="keyword">auto</span> line2 =<span class="keyword">new</span> <span class="built_in">Line</span>(line1);</span><br><span class="line">std::cout &lt;&lt; line2-&gt;<span class="built_in">start</span>()-&gt;<span class="built_in">x</span>() &lt;&lt; line2-&gt;<span class="built_in">start</span>()-&gt;<span class="built_in">y</span>() &lt;&lt; std::endl;</span><br><span class="line">line2-&gt;<span class="built_in">start</span>()-&gt;<span class="built_in">x</span>(<span class="number">3</span>);</span><br><span class="line">line2-&gt;<span class="built_in">start</span>()-&gt;<span class="built_in">y</span>(<span class="number">3</span>);</span><br><span class="line">std::cout &lt;&lt;<span class="string">&quot;浅拷贝，改2看1：&quot;</span> &lt;&lt; line1-&gt;<span class="built_in">start</span>()-&gt;<span class="built_in">x</span>() &lt;&lt; line1-&gt;<span class="built_in">start</span>()-&gt;<span class="built_in">y</span>() &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> line1;</span><br><span class="line"><span class="keyword">delete</span> line2;</span><br><span class="line"><span class="keyword">delete</span> p1;</span><br><span class="line"><span class="keyword">delete</span> p2;</span><br><span class="line"><span class="comment">//输出33</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//深层拷贝</span></span><br><span class="line">Line::<span class="built_in">Line</span>(Line* other)</span><br><span class="line">&#123;</span><br><span class="line">_start = <span class="keyword">new</span> <span class="built_in">Point</span>(other-&gt;<span class="built_in">start</span>());</span><br><span class="line">_end = <span class="keyword">new</span> <span class="built_in">Point</span>(other-&gt;<span class="built_in">end</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> p1 = <span class="keyword">new</span> <span class="built_in">Point</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">auto</span> p2 = <span class="keyword">new</span> <span class="built_in">Point</span>(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">auto</span> line1 =<span class="keyword">new</span> <span class="built_in">Line</span>(p1, p2);</span><br><span class="line"><span class="keyword">auto</span> line2 =<span class="keyword">new</span> <span class="built_in">Line</span>(line1);</span><br><span class="line">std::cout &lt;&lt; line2-&gt;<span class="built_in">start</span>()-&gt;<span class="built_in">x</span>() &lt;&lt; line2-&gt;<span class="built_in">start</span>()-&gt;<span class="built_in">y</span>() &lt;&lt; std::endl;</span><br><span class="line">line2-&gt;<span class="built_in">start</span>()-&gt;<span class="built_in">x</span>(<span class="number">3</span>);</span><br><span class="line">line2-&gt;<span class="built_in">start</span>()-&gt;<span class="built_in">y</span>(<span class="number">3</span>);</span><br><span class="line">std::cout &lt;&lt;<span class="string">&quot;深拷贝，改2看1：&quot;</span> &lt;&lt; line1-&gt;<span class="built_in">start</span>()-&gt;<span class="built_in">x</span>() &lt;&lt; line1-&gt;<span class="built_in">start</span>()-&gt;<span class="built_in">y</span>() &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> line1;</span><br><span class="line"><span class="keyword">delete</span> line2;</span><br><span class="line"><span class="keyword">delete</span> p1;</span><br><span class="line"><span class="keyword">delete</span> p2;</span><br><span class="line"><span class="comment">//输出11</span></span><br></pre></td></tr></table></figure><h1 id="三、静态成员"><a href="#三、静态成员" class="headerlink" title="三、静态成员"></a>三、静态成员</h1><p>3.1 static关键字，包括静态变量和静态函数<br>3.2 静态成员是<strong>全局的</strong>，与实例无关（不属于任何一个实例）<br>3.3 静态成员变量需要在.cpp中初始化<br>3.4 静态成员函数，没有this指针</p><h1 id="四、友元friend"><a href="#四、友元friend" class="headerlink" title="四、友元friend"></a>四、友元friend</h1><p>提供成员变量的任意访问功能</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">//友元类</span></span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">class</span> <span class="title class_">Printer</span>;</span><br><span class="line"><span class="comment">//友元函数</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">const</span> Point* p)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Printer</span></span><br><span class="line">&#123;</span><br><span class="line">p-&gt;_x,p-&gt;_y</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">const</span>*p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五、内联函数inline"><a href="#五、内联函数inline" class="headerlink" title="五、内联函数inline"></a>五、内联函数inline</h1>]]></content>
      
      
      <categories>
          
          <category> Learn_C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
